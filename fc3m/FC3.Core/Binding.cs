using System;
using System.Runtime.InteropServices;
using Nomad.Utils;
namespace Nomad
{
	internal static class Binding
	{
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _InitDuniaEngine(IntPtr hInstance, IntPtr focusWnd, IntPtr renderWnd, [MarshalAs(UnmanagedType.LPStr)] string cmdLine, [MarshalAs(UnmanagedType.U1)] bool launchGame, [MarshalAs(UnmanagedType.U1)] bool forceGpuSynchronization, Binding.MessagePumpCallback messagePumpCallback);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _TickDuniaEngine();
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _RunDuniaEngine();
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _CloseDuniaEngine();
		public delegate void _LoadIGEDll();
		public delegate void _UnloadIGEDll();
		public delegate IntPtr _LocalizeText([MarshalAs(UnmanagedType.LPStr)] string section, [MarshalAs(UnmanagedType.LPStr)] string text);
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void MessagePumpCallback([MarshalAs(UnmanagedType.U1)] bool deferQuit, [MarshalAs(UnmanagedType.U1)] bool blockRenderer);
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void EditorUpdateCallback(float dt);
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void EditorEventCallback(uint eventType, IntPtr eventPtr);
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void EditorLoadCompletedCallback([MarshalAs(UnmanagedType.U1)] bool success);
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void EditorSaveCompletedCallback([MarshalAs(UnmanagedType.U1)] bool success);
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void EditorEnableUICallback([MarshalAs(UnmanagedType.U1)] bool enable);
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void ScriptMapCallback(int line, IntPtr image);
		[UnmanagedFunctionPointer(CallingConvention.Cdecl)]
		public delegate void ScriptErrorCallback(int line, [MarshalAs(UnmanagedType.LPStr)] string errorMessage);
		public delegate void _FCE_Hack_Init(IntPtr hEditorModule);
		public delegate void _FCE_Engine_Reset(IntPtr hMainWnd, IntPtr hViewportWnd, Binding.MessagePumpCallback messagePumpCB);
		public delegate IntPtr _FCE_Engine_GetPersonalPath();
		public delegate IntPtr _FCE_Engine_GetGenericDataPath();
		public delegate void _FCE_Engine_UpdateViewport(int sizeX, int sizeY);
		public delegate void _FCE_Engine_AutoAcquireInput([MarshalAs(UnmanagedType.U1)] bool autoAcquire);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Engine_IsConsoleOpen();
		public delegate void _FCE_Engine_GetTimeOfDay(out int hour, out int minute, out int second);
		public delegate void _FCE_Engine_SetTimeOfDay(int hour, int minute, int second);
		public delegate int _FCE_Engine_GetCloudTypeCount();
		public delegate int _FCE_Engine_GetCloudType();
		public delegate void _FCE_Engine_SetCloudType(int cloudType);
		public delegate float _FCE_Engine_GetStormFactor();
		public delegate void _FCE_Engine_SetStormFactor(float stormFactor);
		public delegate void _FCE_Core_GetAxisFromAngles(float angleX, float angleY, float angleZ, out float x1, out float y1, out float z1, out float x2, out float y2, out float z2, out float x3, out float y3, out float z3);
		public delegate void _FCE_Core_GetAnglesFromAxis(out float angleX, out float angleY, out float angleZ, float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3);
		public delegate void _FCE_Core_GetAnglesFromDir(out float angleX, out float angleY, out float angleZ, float x, float y, float z);
		public delegate IntPtr _FCE_Core_Points_Create();
		public delegate void _FCE_Core_Points_Destroy(IntPtr points);
		public delegate void _FCE_Editor_Create([MarshalAs(UnmanagedType.U1)] bool pcMode);
		public delegate void _FCE_Editor_Destroy();
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Editor_IsInitialized();
		public delegate void _FCE_Editor_Update_Callback(Binding.EditorUpdateCallback callback);
		public delegate void _FCE_Editor_Event_Callback(Binding.EditorEventCallback callback);
		public delegate void _FCE_Editor_LoadCompleted_Callback(Binding.EditorLoadCompletedCallback callback);
		public delegate void _FCE_Editor_SaveCompleted_Callback(Binding.EditorSaveCompletedCallback callback);
		public delegate void _FCE_Editor_EnableUI_Callback(Binding.EditorEnableUICallback callback);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Editor_IsLoadPending();
		public delegate float _FCE_Editor_GetFrameTime();
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Editor_GetScreenPointFromWorldPos(float worldX, float worldY, float worldZ, out float screenX, out float screenY);
		public delegate void _FCE_Editor_GetWorldRayFromScreenPoint(float screenX, float screenY, out float raySrcX, out float raySrcY, out float raySrcZ, out float rayDirX, out float rayDirY, out float rayDirZ);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Editor_RayCastTerrain(float raySrcX, float raySrcY, float raySrcZ, float rayDirX, float rayDirY, float rayDirZ, out float hitX, out float hitY, out float hitZ, out float hitDist);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Editor_RayCastPhysics(float raySrcX, float raySrcY, float raySrcZ, float rayDirX, float rayDirY, float rayDirZ, IntPtr ignore, out float hitX, out float hitY, out float hitZ, out float hitDist, out float hitNormX, out float hitNormY, out float hitNormZ);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Editor_RayCastPhysics2(float raySrcX, float raySrcY, float raySrcZ, float rayDirX, float rayDirY, float rayDirZ, IntPtr ignore, out float hitX, out float hitY, out float hitZ, out float hitDist, out float hitNormX, out float hitNormY, out float hitNormZ);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Editor_ValidateIngame();
		public delegate void _FCE_Editor_EnterIngame([MarshalAs(UnmanagedType.LPStr)] string gameMode);
		public delegate void _FCE_Editor_ExitIngame();
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Editor_IsIngame();
		public delegate void _FCE_Document_Reset();
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Document_LoadPhysical([MarshalAs(UnmanagedType.LPStr)] string mapPath);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Document_Load(byte[] mapPath, byte[] mapName);
		public delegate void _FCE_Document_Save(byte[] mapPath, byte[] mapName);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Document_Validate();
		public delegate void _FCE_Document_GetMapID(out ulong mapIdHigh, out ulong mapIdLow);
		public delegate void _FCE_Document_SetMapID(ulong mapIdHigh, ulong mapIdLow);
		public delegate void _FCE_Document_GetVersionID(out ulong mapIdHigh, out ulong mapIdLow);
		public delegate IntPtr _FCE_Document_GetMapDefaultName();
		public delegate IntPtr _FCE_Document_GetMapName();
		public delegate void _FCE_Document_SetMapName([MarshalAs(UnmanagedType.LPWStr)] string mapName);
		public delegate IntPtr _FCE_Document_GetCreatorName();
		public delegate void _FCE_Document_SetCreatorName([MarshalAs(UnmanagedType.LPWStr)] string creatorName);
		public delegate IntPtr _FCE_Document_GetAuthorName();
		public delegate void _FCE_Document_SetAuthorName([MarshalAs(UnmanagedType.LPWStr)] string authorName);
		public delegate int _FCE_Document_GetBattlefieldSize();
		public delegate void _FCE_Document_SetBattlefieldSize(int size);
		public delegate int _FCE_Document_GetPlayerSize();
		public delegate void _FCE_Document_SetPlayerSize(int size);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Document_IsSnapshotSet();
		public delegate void _FCE_Document_ClearSnapshot();
		public delegate void _FCE_Document_GetSnapshotPos(out float x, out float y, out float z);
		public delegate void _FCE_Document_SetSnapshotPos(float x, float y, float z);
		public delegate void _FCE_Document_GetSnapshotAngle(out float x, out float y, out float z);
		public delegate void _FCE_Document_SetSnapshotAngle(float x, float y, float z);
		public delegate void _FCE_Document_TakeSnapshot(IntPtr snapshot, int sampleFactor);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Document_IsNavmeshEnabled();
		public delegate void _FCE_Document_SetNavmeshEnabled([MarshalAs(UnmanagedType.U1)] bool value);
		public delegate void _FCE_Document_FinalizeMap();
		public delegate void _FCE_Document_Export([MarshalAs(UnmanagedType.LPStr)] string mapName, [MarshalAs(UnmanagedType.LPStr)] string exportPath, [MarshalAs(UnmanagedType.U1)] bool toConsole);
		public delegate void _FCE_Document_Dump([MarshalAs(UnmanagedType.LPStr)] string mapName, [MarshalAs(UnmanagedType.LPStr)] string dumpPath);
		public delegate void _FCE_Document_ExtractBigFile([MarshalAs(UnmanagedType.LPStr)] string mapName, [MarshalAs(UnmanagedType.LPStr)] string bfPath, [MarshalAs(UnmanagedType.LPStr)] string bfName);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsCollectionVisible();
		public delegate void _FCE_EditorSettings_ShowCollections([MarshalAs(UnmanagedType.U1)] bool show);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsFogVisible();
		public delegate void _FCE_EditorSettings_ShowFog([MarshalAs(UnmanagedType.U1)] bool show);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsExposureVisible();
		public delegate void _FCE_EditorSettings_ShowExposure([MarshalAs(UnmanagedType.U1)] bool show);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsShadowVisible();
		public delegate void _FCE_EditorSettings_ShowShadow([MarshalAs(UnmanagedType.U1)] bool show);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsWaterVisible();
		public delegate void _FCE_EditorSettings_ShowWater([MarshalAs(UnmanagedType.U1)] bool show);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsIconsVisible();
		public delegate void _FCE_EditorSettings_ShowIcons([MarshalAs(UnmanagedType.U1)] bool show);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsSoundEnabled();
		public delegate void _FCE_EditorSettings_SetSoundEnabled([MarshalAs(UnmanagedType.U1)] bool enabled);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsGridVisible();
		public delegate void _FCE_EditorSettings_ShowGrid([MarshalAs(UnmanagedType.U1)] bool show);
		public delegate int _FCE_EditorSettings_GetGridResolution();
		public delegate void _FCE_EditorSettings_SetGridResolution(int resolution);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsNavmeshVisible();
		public delegate void _FCE_EditorSettings_ShowNavmesh(int layer);
		public delegate void _FCE_EditorSettings_HideNavmesh();
		public delegate int _FCE_EditorSettings_GetNavmeshLayer();
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsCoversVisible();
		public delegate void _FCE_EditorSettings_ShowCovers([MarshalAs(UnmanagedType.U1)] bool show);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsInvincible();
		public delegate void _FCE_EditorSettings_SetInvincible([MarshalAs(UnmanagedType.U1)] bool invincible);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsInvisible();
		public delegate void _FCE_EditorSettings_SetInvisible([MarshalAs(UnmanagedType.U1)] bool invisible);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsSnappingObjectsToTerrain();
		public delegate void _FCE_EditorSettings_SetSnapObjectsToTerrain([MarshalAs(UnmanagedType.U1)] bool snap);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsAutoSnappingObjects();
		public delegate void _FCE_EditorSettings_SetAutoSnappingObjects([MarshalAs(UnmanagedType.U1)] bool snap);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsAutoSnappingObjectsRotation();
		public delegate void _FCE_EditorSettings_SetAutoSnappingObjectsRotation([MarshalAs(UnmanagedType.U1)] bool snap);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsAutoSnappingObjectsTerrain();
		public delegate void _FCE_EditorSettings_SetAutoSnappingObjectsTerrain([MarshalAs(UnmanagedType.U1)] bool snap);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsCameraClippedTerrain();
		public delegate void _FCE_EditorSettings_SetCameraClipTerrain([MarshalAs(UnmanagedType.U1)] bool clip);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsCameraCollision();
		public delegate void _FCE_EditorSettings_SetCameraCollision([MarshalAs(UnmanagedType.U1)] bool value);
		public delegate int _FCE_EditorSettings_GetEngineQuality();
		public delegate void _FCE_EditorSettings_SetEngineQuality(int engineQuality);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_EditorSettings_IsKillDistanceOverride();
		public delegate void _FCE_EditorSettings_SetKillDistanceOverride([MarshalAs(UnmanagedType.U1)] bool _override);
		public delegate void _FCE_Draw_BeginGroup();
		public delegate void _FCE_Draw_EndGroup();
		public delegate void _FCE_Draw_ScreenCircleOutlined(float x, float y, float z, float radius, float penWidth, float r, float g, float b, float a);
		public delegate void _FCE_Draw_ScreenRectangleOutlined(float x, float y, float z, float width, float height, float penWidth, float r, float g, float b, float a);
		public delegate void _FCE_Draw_Quad(float x, float y, float z, float width, float height, float r, float g, float b, float a);
		public delegate void _FCE_Draw_Square(float x, float y, float z, float radius, float penWidth, float r, float g, float b, float a, float zOrder, float r2, float g2, float b2, float a2);
		public delegate void _FCE_Draw_Terrain_Circle(float x, float y, float radius, float penWidth, float r, float g, float b, float a, float zOrder, float zOffset, float r2, float g2, float b2, float a2);
		public delegate void _FCE_Draw_Terrain_Square(float x, float y, float radius, float penWidth, float r, float g, float b, float a, float zOrder, float zOffset, float r2, float g2, float b2, float a2);
		public delegate void _FCE_Draw_Arrow(float x, float y, float z, float dirX, float dirY, float dirZ, float length, float radius, float headLength, float headRadius, float r, float g, float b, float a);
		public delegate void _FCE_Draw_Dot(float x, float y, float z, float radius, float r, float g, float b, [MarshalAs(UnmanagedType.U1)] bool renderBack, [MarshalAs(UnmanagedType.U1)] bool startGroup);
		public delegate void _FCE_Draw_SegmentedLineSegment(float x1, float y1, float z1, float x2, float y2, float z2, float penRadius, float penRadius2, float r, float g, float b, [MarshalAs(UnmanagedType.U1)] bool back);
		public delegate void _FCE_Draw_WireBoxFromBottomZ(float x, float y, float z, float sizeX, float sizeY, float sizeZ, float penWidth);
		public delegate void _FCE_Draw_WireRegionFromTerrain(IntPtr points, float penWidth, float r, float g, float b);
		public delegate void _FCE_Camera_Input_Forward(float input);
		public delegate void _FCE_Camera_Input_Lateral(float input);
		public delegate void _FCE_Camera_GetPos(out float x, out float y, out float z);
		public delegate void _FCE_Camera_SetPos(float x, float y, float z);
		public delegate void _FCE_Camera_GetAngles(out float x, out float y, out float z);
		public delegate void _FCE_Camera_SetAngles(float x, float y, float z);
		public delegate void _FCE_Camera_Rotate(float pitch, float roll, float yaw);
		public delegate void _FCE_Camera_GetFrontVector(out float x, out float y, out float z);
		public delegate void _FCE_Camera_GetRightVector(out float x, out float y, out float z);
		public delegate void _FCE_Camera_GetUpVector(out float x, out float y, out float z);
		public delegate float _FCE_Camera_GetSpeed();
		public delegate void _FCE_Camera_SetSpeed(float input);
		public delegate void _FCE_Camera_SetSpeedFactor(float factor);
		public delegate float _FCE_Camera_GetFOV();
		public delegate IntPtr _FCE_Brush_Create([MarshalAs(UnmanagedType.U1)] bool circle, float radius, float hardness, float opacity, float distortion);
		public delegate void _FCE_Brush_Destroy(IntPtr pBrush);
		public delegate void _FCE_Terrain_Bump(float x, float y, float amount, IntPtr pBrush);
		public delegate void _FCE_Terrain_Bump_End();
		public delegate void _FCE_Terrain_RaiseLower(float x, float y, float amount, IntPtr pBrush);
		public delegate void _FCE_Terrain_RaiseLower_End();
		public delegate void _FCE_Terrain_SetHeight(float x, float y, float height, IntPtr pBrush);
		public delegate void _FCE_Terrain_SetHeight_End();
		public delegate float _FCE_Terrain_GetAverageHeight(float x, float y, IntPtr pBrush);
		public delegate void _FCE_Terrain_Average(float x, float y, IntPtr pBrush);
		public delegate void _FCE_Terrain_Average_End();
		public delegate void _FCE_Terrain_Grab_Begin(float x, float y, IntPtr pBrush);
		public delegate void _FCE_Terrain_Grab(float ratio);
		public delegate void _FCE_Terrain_Grab_End();
		public delegate void _FCE_Terrain_Smooth(float x, float y, IntPtr pBrush);
		public delegate void _FCE_Terrain_Smooth_End();
		public delegate void _FCE_Terrain_Ramp(float x1, float y1, float x2, float y2, float radius, float hardness);
		public delegate void _FCE_Terrain_Terrace(float x, float y, float height, float falloff, IntPtr pBrush);
		public delegate void _FCE_Terrain_Terrace_End();
		public delegate void _FCE_Terrain_Noise_Begin(int numOctaves, float noiseSize, float persistence, int noiseType);
		public delegate void _FCE_Terrain_Noise(float x, float y, float amount, IntPtr pBrush);
		public delegate void _FCE_Terrain_Noise_End();
		public delegate void _FCE_Terrain_Erosion(float x, float y, float radius, float density, float deformation, float channelDepth, float randomness);
		public delegate void _FCE_Terrain_Erosion_End();
		public delegate void _FCE_Terrain_Hole(int x1, int y1, int x2, int y2, [MarshalAs(UnmanagedType.U1)] bool hole);
		public delegate void _FCE_Terrain_Hole_End();
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Inventory_Entry_IsDirectory(IntPtr entry);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Inventory_Entry_IsObsolete(IntPtr entry);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Inventory_Entry_IsDeleted(IntPtr entry);
		public delegate void _FCE_Inventory_Entry_SetDeleted(IntPtr entry, [MarshalAs(UnmanagedType.U1)] bool value);
		public delegate void _FCE_Inventory_Entry_ClearChildren(IntPtr entry);
		public delegate void _FCE_Inventory_Entry_AddChild(IntPtr entry, IntPtr child);
		public delegate void _FCE_Inventory_Entry_SetChildIndex(IntPtr directory, IntPtr child, int index);
		public delegate void _FCE_Inventory_Entry_OpenThumbnailData(IntPtr entry, out IntPtr data, out int dataSize);
		public delegate void _FCE_Inventory_Entry_CloseThumbnailData(IntPtr entry, IntPtr data);
		public delegate IntPtr _FCE_Inventory_Object_GetRoot();
		public delegate IntPtr _FCE_Inventory_Object_CreatePrefabObject(IntPtr parent, [MarshalAs(UnmanagedType.LPStr)] string id);
		public delegate IntPtr _FCE_Inventory_Object_CreateDirectory(IntPtr parent);
		public delegate IntPtr _FCE_Inventory_Object_CreateFilterDirectory();
		public delegate void _FCE_Inventory_Object_DestroyFilterDirectory(IntPtr directory);
		public delegate void _FCE_Inventory_Object_SearchInventoryEntry(IntPtr entry, [MarshalAs(UnmanagedType.LPWStr)] string criteria, IntPtr resultDirectory);
		public delegate IntPtr _FCE_Inventory_Object_GetParent(IntPtr entry);
		public delegate void _FCE_Inventory_Object_SetParent(IntPtr entry, IntPtr parent);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Inventory_Object_IsDirectory(IntPtr entry);
		public delegate int _FCE_Inventory_Object_GetChildCount(IntPtr entry);
		public delegate IntPtr _FCE_Inventory_Object_GetChild(IntPtr entry, int index);
		public delegate uint _FCE_Inventory_Object_GetId(IntPtr entry);
		public delegate IntPtr _FCE_Inventory_Object_GetIdString(IntPtr entry);
		public delegate void _FCE_Inventory_Object_SetIdString(IntPtr entry, [MarshalAs(UnmanagedType.LPStr)] string id);
		public delegate IntPtr _FCE_Inventory_Object_GetDisplay(IntPtr entry);
		public delegate void _FCE_Inventory_Object_SetDisplay(IntPtr entry, [MarshalAs(UnmanagedType.LPWStr)] string display);
		public delegate IntPtr _FCE_Inventory_Object_GetTags(IntPtr entry);
		public delegate void _FCE_Inventory_Object_SetTags(IntPtr entry, [MarshalAs(UnmanagedType.LPStr)] string tags);
		public delegate int _FCE_Inventory_Object_GetSourceType(IntPtr entry);
		public delegate void _FCE_Inventory_Object_GetBMin(IntPtr entry, out float bminX, out float bminY, out float bminZ);
		public delegate void _FCE_Inventory_Object_GetBMax(IntPtr entry, out float bmaxX, out float bmaxY, out float bmaxZ);
		public delegate void _FCE_Inventory_Object_GetSize(IntPtr entry, out float sizeX, out float sizeY, out float sizeZ);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Inventory_Object_IsAI(IntPtr entry);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Inventory_Object_IsAutoOrientation(IntPtr entry);
		public delegate float _FCE_Inventory_Object_GetZOffset(IntPtr entry);
		public delegate void _FCE_Inventory_Object_SetZOffset(IntPtr entry, float zOffset);
		public delegate void _FCE_Inventory_Object_SaveChanges();
		public delegate void _FCE_Inventory_Object_ClearPivots(IntPtr entry);
		public delegate void _FCE_Inventory_Object_AddPivot(IntPtr entry, float posX, float posY, float posZ, float normX, float normY, float normZ, float normUpX, float normUpY, float normUpZ);
		public delegate void _FCE_Inventory_Object_SetPivot(IntPtr entry, int idx, float posX, float posY, float posZ, float normX, float normY, float normZ, float normUpX, float normUpY, float normUpZ);
		public delegate void _FCE_Inventory_Object_SetPivots(IntPtr entry, float minX, float maxX, float minY, float maxY);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Inventory_Object_IsAutoPivot(IntPtr entry);
		public delegate void _FCE_Inventory_Object_SetAutoPivot(IntPtr entry, [MarshalAs(UnmanagedType.U1)] bool autoPivot);
		public delegate int _FCE_Inventory_Object_GetPivotCount(IntPtr entry);
		public delegate IntPtr _FCE_Inventory_Collection_GetRoot();
		public delegate IntPtr _FCE_Inventory_Collection_GetParent(IntPtr entry);
		public delegate int _FCE_Inventory_Collection_GetChildCount(IntPtr entry);
		public delegate IntPtr _FCE_Inventory_Collection_GetChild(IntPtr entry, int index);
		public delegate IntPtr _FCE_Inventory_Collection_GetDisplay(IntPtr entry);
		public delegate uint _FCE_Inventory_Collection_GetBurnProfile(IntPtr entry);
		public delegate IntPtr _FCE_Inventory_Texture_GetRoot();
		public delegate IntPtr _FCE_Inventory_Texture_GetParent(IntPtr entry);
		public delegate int _FCE_Inventory_Texture_GetChildCount(IntPtr entry);
		public delegate IntPtr _FCE_Inventory_Texture_GetChild(IntPtr entry, int index);
		public delegate IntPtr _FCE_Inventory_Texture_GetDisplay(IntPtr entry);
		public delegate IntPtr _FCE_Inventory_Water_GetRoot();
		public delegate IntPtr _FCE_Inventory_Water_GetParent(IntPtr entry);
		public delegate int _FCE_Inventory_Water_GetChildCount(IntPtr entry);
		public delegate IntPtr _FCE_Inventory_Water_GetChild(IntPtr entry, int index);
		public delegate IntPtr _FCE_Inventory_Water_GetDisplay(IntPtr entry);
		public delegate IntPtr _FCE_Inventory_Water_GetFromId([MarshalAs(UnmanagedType.LPStr)] string id);
		public delegate IntPtr _FCE_Inventory_Spline_GetRoot();
		public delegate IntPtr _FCE_Inventory_Spline_GetParent(IntPtr entry);
		public delegate int _FCE_Inventory_Spline_GetChildCount(IntPtr entry);
		public delegate IntPtr _FCE_Inventory_Spline_GetChild(IntPtr entry, int index);
		public delegate IntPtr _FCE_Inventory_Spline_GetDisplay(IntPtr entry);
		public delegate float _FCE_Inventory_Spline_GetDefaultWidth(IntPtr entry);
		public delegate IntPtr _FCE_Inventory_Wilderness_GetRoot();
		public delegate IntPtr _FCE_Inventory_Wilderness_GetParent(IntPtr entry);
		public delegate int _FCE_Inventory_Wilderness_GetChildCount(IntPtr entry);
		public delegate IntPtr _FCE_Inventory_Wilderness_GetChild(IntPtr entry, int index);
		public delegate IntPtr _FCE_Inventory_Wilderness_GetDisplay(IntPtr entry);
		public delegate IntPtr _FCE_Object_Create_FromEntry(IntPtr entry, [MarshalAs(UnmanagedType.U1)] bool managed);
		public delegate void _FCE_Object_Destroy(IntPtr _object);
		public delegate void _FCE_Object_AddRef(IntPtr _object);
		public delegate void _FCE_Object_Release(IntPtr _object);
		public delegate IntPtr _FCE_Object_Clone(IntPtr _object);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Object_IsLoaded(IntPtr _object);
		public delegate IntPtr _FCE_Object_GetEntry(IntPtr _object);
		public delegate void _FCE_Object_GetPos(IntPtr _object, out float x, out float y, out float z);
		public delegate void _FCE_Object_SetPos(IntPtr _object, float x, float y, float z);
		public delegate void _FCE_Object_GetAngles(IntPtr _object, out float x, out float y, out float z);
		public delegate void _FCE_Object_SetAngles(IntPtr _object, float x, float y, float z);
		public delegate void _FCE_Object_GetBounds(IntPtr _object, [MarshalAs(UnmanagedType.U1)] bool world, out float x1, out float y1, out float z1, out float x2, out float y2, out float z2);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Object_IsVisible(IntPtr _object);
		public delegate void _FCE_Object_SetVisible(IntPtr _object, [MarshalAs(UnmanagedType.U1)] bool visible);
		public delegate void _FCE_Object_SetHighlight(IntPtr _object, [MarshalAs(UnmanagedType.U1)] bool highlight);
		public delegate void _FCE_Object_SetFreeze(IntPtr _object, [MarshalAs(UnmanagedType.U1)] bool freeze);
		public delegate void _FCE_Object_DropToGround(IntPtr _object, [MarshalAs(UnmanagedType.U1)] bool physics);
		public delegate void _FCE_Object_ComputeAutoOrientation(IntPtr _object, ref float x, ref float y, ref float z, out float angleX, out float angleY, out float angleZ, float normX, float normY, float normZ);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Object_GetPivot(IntPtr _object, int idx, out float x, out float y, out float z, out float normX, out float normY, out float normZ, out float normUpX, out float normUpY, out float normUpZ);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Object_GetClosestPivot(IntPtr _object, float posX, float posY, float posZ, out float pivotX, out float pivotY, out float pivotZ, out float normX, out float normY, out float normZ, out float normUpX, out float normUpY, out float normUpZ, float minDist);
		public delegate void _FCE_Object_SnapToClosestObject(IntPtr _object);
		public delegate void _FCE_Object_GetPhysEntities(IntPtr _object, IntPtr vector);
		public delegate IntPtr _FCE_ObjectManager_GetObjectFromScreenPoint(float x, float y, out float hitX, out float hitY, out float hitZ, [MarshalAs(UnmanagedType.U1)] bool includeFrozen, IntPtr physEntities);
		public delegate void _FCE_ObjectManager_GetObjectsFromScreenRect(IntPtr selection, float x1, float y1, float x2, float y2, [MarshalAs(UnmanagedType.U1)] bool includeFrozen);
		public delegate void _FCE_ObjectManager_GetObjectsFromMagicWand(IntPtr selection, IntPtr _object);
		public delegate void _FCE_ObjectManager_SetViewportPickingPos(float x, float y);
		public delegate void _FCE_ObjectManager_UnfreezeObjects();
		public delegate int _FCE_ObjectManager_GetObjectCount();
		public delegate IntPtr _FCE_ObjectManager_GetObject(int objectIndex);
		public delegate void _FCE_ObjectManager_OnObjectAddedFromTool(IntPtr _object);
		public delegate IntPtr _FCE_ObjectSelection_Create();
		public delegate void _FCE_ObjectSelection_Destroy(IntPtr selection);
		public delegate void _FCE_ObjectSelection_Clear(IntPtr selection);
		public delegate void _FCE_ObjectSelection_Add(IntPtr selection, IntPtr _object);
		public delegate void _FCE_ObjectSelection_AddSelection(IntPtr selection, IntPtr otherSelection);
		public delegate void _FCE_ObjectSelection_ToggleObject(IntPtr selection, IntPtr _object);
		public delegate void _FCE_ObjectSelection_ToggleSelection(IntPtr selection, IntPtr selection2);
		public delegate void _FCE_ObjectSelection_RemoveObject(IntPtr selection, IntPtr _object);
		public delegate void _FCE_ObjectSelection_RemoveSelection(IntPtr selection, IntPtr selection2);
		public delegate int _FCE_ObjectSelection_GetCount(IntPtr selection);
		public delegate IntPtr _FCE_ObjectSelection_Get(IntPtr selection, int index);
		public delegate void _FCE_ObjectSelection_GetValidObjects(IntPtr selection, IntPtr otherSelection);
		public delegate void _FCE_ObjectSelection_RemoveInvalidObjects(IntPtr selection);
		public delegate void _FCE_ObjectSelection_Clone(IntPtr selection, IntPtr newSelection, [MarshalAs(UnmanagedType.U1)] bool cloneObjects);
		public delegate void _FCE_ObjectSelection_Delete(IntPtr selection);
		public delegate void _FCE_ObjectSelection_GetCenter(IntPtr selection, out float x, out float y, out float z);
		public delegate void _FCE_ObjectSelection_SetCenter(IntPtr selection, float x, float y, float z);
		public delegate void _FCE_ObjectSelection_GetComputeCenter(IntPtr selection, out float x, out float y, out float z);
		public delegate void _FCE_ObjectSelection_ComputeCenter(IntPtr selection);
		public delegate void _FCE_ObjectSelection_GetWorldBounds(IntPtr selection, out float x1, out float y1, out float z1, out float x2, out float y2, out float z2);
		public delegate void _FCE_ObjectSelection_MoveTo(IntPtr selection, float x, float y, float z, int mode);
		public delegate void _FCE_ObjectSelection_Rotate(IntPtr selection, float angle, float axisX, float axisY, float axisZ, float pivotX, float pivotY, float pivotZ, [MarshalAs(UnmanagedType.U1)] bool affectCenter);
		public delegate void _FCE_ObjectSelection_Rotate3(IntPtr selection, float angleX, float angleY, float angleZ, float axisX, float axisY, float axisZ, float pivotX, float pivotY, float pivotZ, [MarshalAs(UnmanagedType.U1)] bool affectCenter);
		public delegate void _FCE_ObjectSelection_RotateCenter(IntPtr selection, float angle, float x, float y, float z);
		public delegate void _FCE_ObjectSelection_RotateLocal3(IntPtr selection, float angleX, float angleY, float angleZ);
		public delegate void _FCE_ObjectSelection_RotateGimbal(IntPtr selection, float x, float y, float z);
		public delegate void _FCE_ObjectSelection_DropToGround(IntPtr selection, [MarshalAs(UnmanagedType.U1)] bool physics, [MarshalAs(UnmanagedType.U1)] bool group);
		public delegate void _FCE_ObjectSelection_SnapToPivot(IntPtr selection, float sourcePosX, float sourcePosY, float sourcePosZ, float sourceNormX, float sourceNormY, float sourceNormZ, float sourceNormUpX, float sourceNormUpY, float sourceNormUpZ, float targetPosX, float targetPosY, float targetPosZ, float targetNormX, float targetNormY, float targetNormZ, float targetNormUpX, float targetNormUpY, float targetNormUpZ, [MarshalAs(UnmanagedType.U1)] bool preserveOrientation, float snapAngle);
		public delegate void _FCE_ObjectSelection_SnapToClosestObjects(IntPtr selection);
		public delegate void _FCE_ObjectSelection_GetPhysEntities(IntPtr selection, IntPtr vector);
		public delegate void _FCE_ObjectSelection_ClearState(IntPtr selection);
		public delegate void _FCE_ObjectSelection_LoadState(IntPtr selection);
		public delegate void _FCE_ObjectSelection_SaveState(IntPtr selection);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_ObjectSelection_LoadFromXml(IntPtr selection, [MarshalAs(UnmanagedType.LPStr)] string xml, [MarshalAs(UnmanagedType.U1)] bool managed);
		[return: MarshalAs(UnmanagedType.LPStr)]
		public delegate string _FCE_ObjectSelection_SaveToXml(IntPtr selection);
		public delegate void _FCE_ObjectViewer_SetActive([MarshalAs(UnmanagedType.U1)] bool active);
		public delegate void _FCE_ObjectViewer_SetObject(IntPtr _object);
		public delegate void _FCE_ObjectLegoBox_SetActive([MarshalAs(UnmanagedType.U1)] bool active);
		public delegate void _FCE_ObjectLegoBox_AddEntry(IntPtr entry);
		public delegate void _FCE_ObjectLegoBox_ClearEntries();
		public delegate void _FCE_ObjectLegoBox_CreateLegoBox();
		public delegate IntPtr _FCE_ObjectLegoBox_GetEntryFromScreenPoint(float x, float y);
		public delegate void _FCE_ObjectRenderer_Clear();
		public delegate void _FCE_ObjectRenderer_SetActive([MarshalAs(UnmanagedType.U1)] bool active);
		public delegate void _FCE_ObjectRenderer_RenderObject(IntPtr entry);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_ObjectRenderer_IsSnapshotReady();
		public delegate IntPtr _FCE_ObjectRenderer_GetSnapshot(out int minX, out int minY, out int maxX, out int maxY);
		public delegate IntPtr _FCE_ObjectRenderer_GetSnapshotEntry();
		public delegate void _FCE_ObjectRenderer_ClearSnapshot();
		public delegate void _FCE_ObjectRenderer_WritePNG(IntPtr data, int width, int height, [MarshalAs(UnmanagedType.LPStr)] string filename);
		public delegate void _FCE_ObjectRenderer_GenerateThumbnails();
		public delegate void _FCE_CollectionRenderer_GenerateThumbnails();
		public delegate IntPtr _FCE_Gizmo_Create();
		public delegate void _FCE_Gizmo_Destroy(IntPtr gizmo);
		public delegate void _FCE_Gizmo_GetPos(IntPtr gizmo, out float x, out float y, out float z);
		public delegate void _FCE_Gizmo_SetPos(IntPtr gizmo, float x, float y, float z);
		public delegate void _FCE_Gizmo_GetAxis(IntPtr gizmo, out float x1, out float y1, out float z1, out float x2, out float y2, out float z2, out float x3, out float y3, out float z3);
		public delegate void _FCE_Gizmo_SetAxis(IntPtr gizmo, float x1, float y1, float z1, float x2, float y2, float z2, float x3, float y3, float z3);
		public delegate int _FCE_Gizmo_GetActive(IntPtr gizmo);
		public delegate void _FCE_Gizmo_SetActive(IntPtr gizmo, int axis);
		public delegate void _FCE_Gizmo_Redraw(IntPtr gizmo);
		public delegate void _FCE_Gizmo_Hide(IntPtr gizmo);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Gizmo_IsRotationMode(IntPtr gizmo);
		public delegate void _FCE_Gizmo_SetRotationMode(IntPtr gizmo, [MarshalAs(UnmanagedType.U1)] bool value);
		public delegate int _FCE_Gizmo_HitTest(IntPtr gizmo, float raySrcX, float raySrcY, float raySrcZ, float rayDirX, float rayDirY, float rayDirZ);
		public delegate IntPtr _FCE_CollectionManager_GetCollectionEntryFromId(int id);
		public delegate void _FCE_CollectionManager_AssignCollectionId(int id, IntPtr entry);
		public delegate void _FCE_CollectionManager_WriteMaskCircle(float cx, float cy, float radius, int id, [MarshalAs(UnmanagedType.U1)] bool update);
		public delegate void _FCE_CollectionManager_WriteMaskSquare(float cx, float cy, float radius, int id, [MarshalAs(UnmanagedType.U1)] bool update);
		public delegate void _FCE_CollectionManager_ClearMaskId(int id);
		public delegate void _FCE_CollectionManager_UpdateCollections(int x, int y, int w, int h);
		public delegate void _FCE_Collection_Paint(float x, float y, int id, IntPtr pBrush);
		public delegate void _FCE_Collection_Paint_End();
		public delegate void _FCE_Texture_Paint(float x, float y, float amount, int id, IntPtr pBrush);
		public delegate void _FCE_Texture_Paint_End();
		public delegate void _FCE_Texture_PaintConstraints_Begin(float minHeight, float maxHeight, float heightFuzziness, float minSlope, float maxSlope);
		public delegate void _FCE_Texture_PaintConstraints(float x, float y, float amount, int id, IntPtr pBrush);
		public delegate void _FCE_Texture_PaintConstraints_End();
		public delegate float _FCE_TerrainManager_GetHeightAt(float x, float y);
		public delegate float _FCE_TerrainManager_GetHeightAtWithWater(float x, float y);
		public delegate IntPtr _FCE_TerrainManager_GetTextureEntryFromId(int id);
		public delegate void _FCE_TerrainManager_AssignTextureId(int id, IntPtr entry);
		public delegate void _FCE_TerrainManager_ClearTextureId(int id);
		public delegate float _FCE_TerrainManager_GetGlobalWaterLevel();
		public delegate void _FCE_TerrainManager_SetGlobalWaterLevel(float waterLevel);
		public delegate void _FCE_TerrainManager_SetWaterLevelSector(int sx, int sy, float waterLevel, IntPtr entry);
		public delegate void _FCE_TerrainManager_UpdateWaterLevel();
		public delegate int _FCE_UndoManager_GetUndoCount();
		public delegate int _FCE_UndoManager_GetRedoCount();
		public delegate void _FCE_UndoManager_Undo();
		public delegate void _FCE_UndoManager_Redo();
		public delegate void _FCE_UndoManager_RecordUndo();
		public delegate void _FCE_UndoManager_CommitUndo();
		public delegate IntPtr _FCE_Validation_GameMode(int gameMode);
		public delegate IntPtr _FCE_Validation_Game();
		public delegate void _FCE_ValidationReport_Destroy(IntPtr report);
		public delegate int _FCE_ValidationReport_GetCount(IntPtr report);
		public delegate IntPtr _FCE_ValidationReport_GetRecord(IntPtr report, int index);
		public delegate int _FCE_ValidationRecord_GetSeverity(IntPtr record);
		public delegate int _FCE_ValidationRecord_GetFlags(IntPtr record);
		public delegate IntPtr _FCE_ValidationRecord_GetMessage(IntPtr record);
		public delegate IntPtr _FCE_ValidationRecord_GetObject(IntPtr record);
		public delegate IntPtr _FCE_Snapshot_Create(int width, int height);
		public delegate void _FCE_Snapshot_Destroy(IntPtr snapshot);
		public delegate void _FCE_Snapshot_GetData(IntPtr snapshot, out IntPtr data, out uint width, out uint height, out uint pitch);
		public delegate IntPtr _FCE_Spline_Create();
		public delegate void _FCE_Spline_Destroy(IntPtr spline);
		public delegate void _FCE_Spline_Clear(IntPtr spline);
		public delegate void _FCE_Spline_AddPoint(IntPtr spline, float x, float y);
		public delegate void _FCE_Spline_InsertPoint(IntPtr spline, float x, float y, int index);
		public delegate void _FCE_Spline_RemovePoint(IntPtr spline, int index);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Spline_RemoveSimilarPoints(IntPtr spline);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Spline_OptimizePoint(IntPtr spline, int index);
		public delegate int _FCE_Spline_GetNumPoints(IntPtr spline);
		public delegate void _FCE_Spline_GetPoint(IntPtr spline, int i, out float x, out float y);
		public delegate void _FCE_Spline_SetPoint(IntPtr spline, int i, float x, float y);
		public delegate void _FCE_Spline_UpdateSpline(IntPtr spline);
		public delegate void _FCE_Spline_UpdateSplineHeight(IntPtr spline);
		public delegate void _FCE_Spline_FinalizeSpline(IntPtr spline);
		public delegate void _FCE_Spline_Draw(IntPtr spline, float penWidth, IntPtr controller);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Spline_HitTestPoints(IntPtr spline, float x, float y, float penWidth, float hitWidth, out int hitIndex, out float hitX, out float hitY);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Spline_HitTestSegments(IntPtr spline, float centerX, float centerY, float radius, out int hitIndex, out float hitX, out float hitY);
		public delegate IntPtr _FCE_SplineRoad_GetEntry(IntPtr spline);
		public delegate void _FCE_SplineRoad_SetEntry(IntPtr spline, IntPtr entry);
		public delegate float _FCE_SplineRoad_GetWidth(IntPtr spline);
		public delegate void _FCE_SplineRoad_SetWidth(IntPtr spline, float width);
		public delegate void _FCE_SplineZone_Reset(IntPtr zone);
		public delegate IntPtr _FCE_SplineController_Create();
		public delegate void _FCE_SplineController_Destroy(IntPtr controller);
		public delegate void _FCE_SplineController_SetSpline(IntPtr controller, IntPtr spline);
		public delegate void _FCE_SplineController_ClearSelection(IntPtr controller);
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_SplineController_IsSelected(IntPtr controller, int index);
		public delegate void _FCE_SplineController_SetSelected(IntPtr controller, int index, [MarshalAs(UnmanagedType.U1)] bool selected);
		public delegate void _FCE_SplineController_SelectFromScreenRect(IntPtr controller, float x1, float y1, float x2, float y2, float penWidth, int selectMode);
		public delegate void _FCE_SplineController_MoveSelection(IntPtr controller, float deltaX, float deltaY);
		public delegate void _FCE_SplineController_DeleteSelection(IntPtr controller);
		public delegate IntPtr _FCE_SplineManager_CreateRoad(int id);
		public delegate void _FCE_SplineManager_DestroyRoad(int id);
		public delegate IntPtr _FCE_SplineManager_GetRoadFromId(int id);
		public delegate IntPtr _FCE_SplineManager_GetPlayableZone();
		public delegate IntPtr _FCE_PhysEntityVector_Create();
		public delegate void _FCE_PhysEntityVector_Destroy(IntPtr vector);
		public delegate void _FCE_Wilderness_Desert(float gradientWidth, float gradientHeight, float distorsion, float noiseAdd, float blurRadius);
		public delegate void _FCE_Wilderness_Script([MarshalAs(UnmanagedType.LPStr)] string fileName);
		public delegate void _FCE_Wilderness_ScriptBuffer([MarshalAs(UnmanagedType.LPStr)] string buffer, int size, Binding.ScriptMapCallback mapCallback, Binding.ScriptErrorCallback errorCallback);
		public delegate void _FCE_Wilderness_ScriptEntry(IntPtr entry);
		public delegate int _FCE_Script_GetNumFunctions();
		public delegate IntPtr _FCE_Script_GetFunction(int index);
		public delegate IntPtr _FCE_ScriptFunction_GetName(IntPtr function);
		public delegate IntPtr _FCE_ScriptFunction_GetPrototype(IntPtr function);
		public delegate IntPtr _FCE_ScriptFunction_GetDescription(IntPtr function);
		public delegate void _FCE_ImageMap_GetSize(IntPtr map, out int sizeX, out int sizeY);
		public delegate void _FCE_ImageMap_ConvertTo24bit(IntPtr map, IntPtr data, int stride, out float min, out float max);
		public delegate IntPtr _FCE_ImageMap_Clone(IntPtr map);
		public delegate void _FCE_ImageMap_Destroy(IntPtr map);
		public delegate int _FCE_BudgetManager_GetMemoryUsage();
		public delegate float _FCE_BudgetManager_GetObjectUsage();
		public delegate void _FCE_Navmesh_SetDisplay(int mode);
		public delegate void _FCE_Navmesh_RegenerateTileAt(float cursorX, float cursorY, [MarshalAs(UnmanagedType.U1)] bool debugMode);
		public delegate void _FCE_Navmesh_SetAPDisplay(int mode);
		public delegate float _FCE_Navmesh_GetDebugAlpha();
		public delegate void _FCE_Navmesh_SetDebugAlpha(float value);
		public delegate int _FCE_Navmesh_GetPendingTilesCount();
		[return: MarshalAs(UnmanagedType.U1)]
		public delegate bool _FCE_Dash_ValidateIngame();
		public delegate void _FCE_Dash_SetDebugMode(int debugIndex);
		public delegate float _FCE_Dash_GetNodeAssaultTime(int nodeIndex);
		public delegate void _FCE_Dash_SetNodeAssaultTime(int nodeIndex, float captureTime);
		public const string outputDir = "output\\";
		public const string managedDllSource = "Nomad.dll";
		public static string engineDll;
		public static string gameDll;
		public static string managedDll;
		public static Binding._InitDuniaEngine InitDuniaEngine;
		public static Binding._TickDuniaEngine TickDuniaEngine;
		public static Binding._RunDuniaEngine RunDuniaEngine;
		public static Binding._CloseDuniaEngine CloseDuniaEngine;
		public static Binding._LoadIGEDll LoadIGEDll;
		public static Binding._UnloadIGEDll UnloadIGEDll;
		public static Binding._LocalizeText LocalizeText;
		public static Binding._FCE_Hack_Init FCE_Hack_Init;
		public static Binding._FCE_Engine_Reset FCE_Engine_Reset;
		public static Binding._FCE_Engine_GetPersonalPath FCE_Engine_GetPersonalPath;
		public static Binding._FCE_Engine_GetGenericDataPath FCE_Engine_GetGenericDataPath;
		public static Binding._FCE_Engine_UpdateViewport FCE_Engine_UpdateViewport;
		public static Binding._FCE_Engine_AutoAcquireInput FCE_Engine_AutoAcquireInput;
		public static Binding._FCE_Engine_IsConsoleOpen FCE_Engine_IsConsoleOpen;
		public static Binding._FCE_Engine_GetTimeOfDay FCE_Engine_GetTimeOfDay;
		public static Binding._FCE_Engine_SetTimeOfDay FCE_Engine_SetTimeOfDay;
		public static Binding._FCE_Engine_GetCloudTypeCount FCE_Engine_GetCloudTypeCount;
		public static Binding._FCE_Engine_GetCloudType FCE_Engine_GetCloudType;
		public static Binding._FCE_Engine_SetCloudType FCE_Engine_SetCloudType;
		public static Binding._FCE_Engine_GetStormFactor FCE_Engine_GetStormFactor;
		public static Binding._FCE_Engine_SetStormFactor FCE_Engine_SetStormFactor;
		public static Binding._FCE_Core_GetAxisFromAngles FCE_Core_GetAxisFromAngles;
		public static Binding._FCE_Core_GetAnglesFromAxis FCE_Core_GetAnglesFromAxis;
		public static Binding._FCE_Core_GetAnglesFromDir FCE_Core_GetAnglesFromDir;
		public static Binding._FCE_Core_Points_Create FCE_Core_Points_Create;
		public static Binding._FCE_Core_Points_Destroy FCE_Core_Points_Destroy;
		public static Binding._FCE_Editor_Create FCE_Editor_Create;
		public static Binding._FCE_Editor_Destroy FCE_Editor_Destroy;
		public static Binding._FCE_Editor_IsInitialized FCE_Editor_IsInitialized;
		public static Binding._FCE_Editor_Update_Callback FCE_Editor_Update_Callback;
		public static Binding._FCE_Editor_Event_Callback FCE_Editor_Event_Callback;
		public static Binding._FCE_Editor_LoadCompleted_Callback FCE_Editor_LoadCompleted_Callback;
		public static Binding._FCE_Editor_SaveCompleted_Callback FCE_Editor_SaveCompleted_Callback;
		public static Binding._FCE_Editor_EnableUI_Callback FCE_Editor_EnableUI_Callback;
		public static Binding._FCE_Editor_IsLoadPending FCE_Editor_IsLoadPending;
		public static Binding._FCE_Editor_GetFrameTime FCE_Editor_GetFrameTime;
		public static Binding._FCE_Editor_GetScreenPointFromWorldPos FCE_Editor_GetScreenPointFromWorldPos;
		public static Binding._FCE_Editor_GetWorldRayFromScreenPoint FCE_Editor_GetWorldRayFromScreenPoint;
		public static Binding._FCE_Editor_RayCastTerrain FCE_Editor_RayCastTerrain;
		public static Binding._FCE_Editor_RayCastPhysics FCE_Editor_RayCastPhysics;
		public static Binding._FCE_Editor_RayCastPhysics2 FCE_Editor_RayCastPhysics2;
		public static Binding._FCE_Editor_ValidateIngame FCE_Editor_ValidateIngame;
		public static Binding._FCE_Editor_EnterIngame FCE_Editor_EnterIngame;
		public static Binding._FCE_Editor_ExitIngame FCE_Editor_ExitIngame;
		public static Binding._FCE_Editor_IsIngame FCE_Editor_IsIngame;
		public static Binding._FCE_Document_Reset FCE_Document_Reset;
		public static Binding._FCE_Document_LoadPhysical FCE_Document_LoadPhysical;
		public static Binding._FCE_Document_Load FCE_Document_Load;
		public static Binding._FCE_Document_Save FCE_Document_Save;
		public static Binding._FCE_Document_Validate FCE_Document_Validate;
		public static Binding._FCE_Document_GetMapID FCE_Document_GetMapID;
		public static Binding._FCE_Document_SetMapID FCE_Document_SetMapID;
		public static Binding._FCE_Document_GetVersionID FCE_Document_GetVersionID;
		public static Binding._FCE_Document_GetMapDefaultName FCE_Document_GetMapDefaultName;
		public static Binding._FCE_Document_GetMapName FCE_Document_GetMapName;
		public static Binding._FCE_Document_SetMapName FCE_Document_SetMapName;
		public static Binding._FCE_Document_GetCreatorName FCE_Document_GetCreatorName;
		public static Binding._FCE_Document_SetCreatorName FCE_Document_SetCreatorName;
		public static Binding._FCE_Document_GetAuthorName FCE_Document_GetAuthorName;
		public static Binding._FCE_Document_SetAuthorName FCE_Document_SetAuthorName;
		public static Binding._FCE_Document_GetBattlefieldSize FCE_Document_GetBattlefieldSize;
		public static Binding._FCE_Document_SetBattlefieldSize FCE_Document_SetBattlefieldSize;
		public static Binding._FCE_Document_GetPlayerSize FCE_Document_GetPlayerSize;
		public static Binding._FCE_Document_SetPlayerSize FCE_Document_SetPlayerSize;
		public static Binding._FCE_Document_IsSnapshotSet FCE_Document_IsSnapshotSet;
		public static Binding._FCE_Document_ClearSnapshot FCE_Document_ClearSnapshot;
		public static Binding._FCE_Document_GetSnapshotPos FCE_Document_GetSnapshotPos;
		public static Binding._FCE_Document_SetSnapshotPos FCE_Document_SetSnapshotPos;
		public static Binding._FCE_Document_GetSnapshotAngle FCE_Document_GetSnapshotAngle;
		public static Binding._FCE_Document_SetSnapshotAngle FCE_Document_SetSnapshotAngle;
		public static Binding._FCE_Document_TakeSnapshot FCE_Document_TakeSnapshot;
		public static Binding._FCE_Document_IsNavmeshEnabled FCE_Document_IsNavmeshEnabled;
		public static Binding._FCE_Document_SetNavmeshEnabled FCE_Document_SetNavmeshEnabled;
		public static Binding._FCE_Document_FinalizeMap FCE_Document_FinalizeMap;
		public static Binding._FCE_Document_Export FCE_Document_Export;
		public static Binding._FCE_Document_Dump FCE_Document_Dump;
		public static Binding._FCE_Document_ExtractBigFile FCE_Document_ExtractBigFile;
		public static Binding._FCE_EditorSettings_IsCollectionVisible FCE_EditorSettings_IsCollectionVisible;
		public static Binding._FCE_EditorSettings_ShowCollections FCE_EditorSettings_ShowCollections;
		public static Binding._FCE_EditorSettings_IsFogVisible FCE_EditorSettings_IsFogVisible;
		public static Binding._FCE_EditorSettings_ShowFog FCE_EditorSettings_ShowFog;
		public static Binding._FCE_EditorSettings_IsExposureVisible FCE_EditorSettings_IsExposureVisible;
		public static Binding._FCE_EditorSettings_ShowExposure FCE_EditorSettings_ShowExposure;
		public static Binding._FCE_EditorSettings_IsShadowVisible FCE_EditorSettings_IsShadowVisible;
		public static Binding._FCE_EditorSettings_ShowShadow FCE_EditorSettings_ShowShadow;
		public static Binding._FCE_EditorSettings_IsWaterVisible FCE_EditorSettings_IsWaterVisible;
		public static Binding._FCE_EditorSettings_ShowWater FCE_EditorSettings_ShowWater;
		public static Binding._FCE_EditorSettings_IsIconsVisible FCE_EditorSettings_IsIconsVisible;
		public static Binding._FCE_EditorSettings_ShowIcons FCE_EditorSettings_ShowIcons;
		public static Binding._FCE_EditorSettings_IsSoundEnabled FCE_EditorSettings_IsSoundEnabled;
		public static Binding._FCE_EditorSettings_SetSoundEnabled FCE_EditorSettings_SetSoundEnabled;
		public static Binding._FCE_EditorSettings_IsGridVisible FCE_EditorSettings_IsGridVisible;
		public static Binding._FCE_EditorSettings_ShowGrid FCE_EditorSettings_ShowGrid;
		public static Binding._FCE_EditorSettings_GetGridResolution FCE_EditorSettings_GetGridResolution;
		public static Binding._FCE_EditorSettings_SetGridResolution FCE_EditorSettings_SetGridResolution;
		public static Binding._FCE_EditorSettings_IsNavmeshVisible FCE_EditorSettings_IsNavmeshVisible;
		public static Binding._FCE_EditorSettings_ShowNavmesh FCE_EditorSettings_ShowNavmesh;
		public static Binding._FCE_EditorSettings_HideNavmesh FCE_EditorSettings_HideNavmesh;
		public static Binding._FCE_EditorSettings_GetNavmeshLayer FCE_EditorSettings_GetNavmeshLayer;
		public static Binding._FCE_EditorSettings_IsCoversVisible FCE_EditorSettings_IsCoversVisible;
		public static Binding._FCE_EditorSettings_ShowCovers FCE_EditorSettings_ShowCovers;
		public static Binding._FCE_EditorSettings_IsInvincible FCE_EditorSettings_IsInvincible;
		public static Binding._FCE_EditorSettings_SetInvincible FCE_EditorSettings_SetInvincible;
		public static Binding._FCE_EditorSettings_IsInvisible FCE_EditorSettings_IsInvisible;
		public static Binding._FCE_EditorSettings_SetInvisible FCE_EditorSettings_SetInvisible;
		public static Binding._FCE_EditorSettings_IsSnappingObjectsToTerrain FCE_EditorSettings_IsSnappingObjectsToTerrain;
		public static Binding._FCE_EditorSettings_SetSnapObjectsToTerrain FCE_EditorSettings_SetSnapObjectsToTerrain;
		public static Binding._FCE_EditorSettings_IsAutoSnappingObjects FCE_EditorSettings_IsAutoSnappingObjects;
		public static Binding._FCE_EditorSettings_SetAutoSnappingObjects FCE_EditorSettings_SetAutoSnappingObjects;
		public static Binding._FCE_EditorSettings_IsAutoSnappingObjectsRotation FCE_EditorSettings_IsAutoSnappingObjectsRotation;
		public static Binding._FCE_EditorSettings_SetAutoSnappingObjectsRotation FCE_EditorSettings_SetAutoSnappingObjectsRotation;
		public static Binding._FCE_EditorSettings_IsAutoSnappingObjectsTerrain FCE_EditorSettings_IsAutoSnappingObjectsTerrain;
		public static Binding._FCE_EditorSettings_SetAutoSnappingObjectsTerrain FCE_EditorSettings_SetAutoSnappingObjectsTerrain;
		public static Binding._FCE_EditorSettings_IsCameraClippedTerrain FCE_EditorSettings_IsCameraClippedTerrain;
		public static Binding._FCE_EditorSettings_SetCameraClipTerrain FCE_EditorSettings_SetCameraClipTerrain;
		public static Binding._FCE_EditorSettings_IsCameraCollision FCE_EditorSettings_IsCameraCollision;
		public static Binding._FCE_EditorSettings_SetCameraCollision FCE_EditorSettings_SetCameraCollision;
		public static Binding._FCE_EditorSettings_GetEngineQuality FCE_EditorSettings_GetEngineQuality;
		public static Binding._FCE_EditorSettings_SetEngineQuality FCE_EditorSettings_SetEngineQuality;
		public static Binding._FCE_EditorSettings_IsKillDistanceOverride FCE_EditorSettings_IsKillDistanceOverride;
		public static Binding._FCE_EditorSettings_SetKillDistanceOverride FCE_EditorSettings_SetKillDistanceOverride;
		public static Binding._FCE_Draw_BeginGroup FCE_Draw_BeginGroup;
		public static Binding._FCE_Draw_EndGroup FCE_Draw_EndGroup;
		public static Binding._FCE_Draw_ScreenCircleOutlined FCE_Draw_ScreenCircleOutlined;
		public static Binding._FCE_Draw_ScreenRectangleOutlined FCE_Draw_ScreenRectangleOutlined;
		public static Binding._FCE_Draw_Quad FCE_Draw_Quad;
		public static Binding._FCE_Draw_Square FCE_Draw_Square;
		public static Binding._FCE_Draw_Terrain_Circle FCE_Draw_Terrain_Circle;
		public static Binding._FCE_Draw_Terrain_Square FCE_Draw_Terrain_Square;
		public static Binding._FCE_Draw_Arrow FCE_Draw_Arrow;
		public static Binding._FCE_Draw_Dot FCE_Draw_Dot;
		public static Binding._FCE_Draw_SegmentedLineSegment FCE_Draw_SegmentedLineSegment;
		public static Binding._FCE_Draw_WireBoxFromBottomZ FCE_Draw_WireBoxFromBottomZ;
		public static Binding._FCE_Draw_WireRegionFromTerrain FCE_Draw_WireRegionFromTerrain;
		public static Binding._FCE_Camera_Input_Forward FCE_Camera_Input_Forward;
		public static Binding._FCE_Camera_Input_Lateral FCE_Camera_Input_Lateral;
		public static Binding._FCE_Camera_GetPos FCE_Camera_GetPos;
		public static Binding._FCE_Camera_SetPos FCE_Camera_SetPos;
		public static Binding._FCE_Camera_GetAngles FCE_Camera_GetAngles;
		public static Binding._FCE_Camera_SetAngles FCE_Camera_SetAngles;
		public static Binding._FCE_Camera_Rotate FCE_Camera_Rotate;
		public static Binding._FCE_Camera_GetFrontVector FCE_Camera_GetFrontVector;
		public static Binding._FCE_Camera_GetRightVector FCE_Camera_GetRightVector;
		public static Binding._FCE_Camera_GetUpVector FCE_Camera_GetUpVector;
		public static Binding._FCE_Camera_GetSpeed FCE_Camera_GetSpeed;
		public static Binding._FCE_Camera_SetSpeed FCE_Camera_SetSpeed;
		public static Binding._FCE_Camera_SetSpeedFactor FCE_Camera_SetSpeedFactor;
		public static Binding._FCE_Camera_GetFOV FCE_Camera_GetFOV;
		public static Binding._FCE_Brush_Create FCE_Brush_Create;
		public static Binding._FCE_Brush_Destroy FCE_Brush_Destroy;
		public static Binding._FCE_Terrain_Bump FCE_Terrain_Bump;
		public static Binding._FCE_Terrain_Bump_End FCE_Terrain_Bump_End;
		public static Binding._FCE_Terrain_RaiseLower FCE_Terrain_RaiseLower;
		public static Binding._FCE_Terrain_RaiseLower_End FCE_Terrain_RaiseLower_End;
		public static Binding._FCE_Terrain_SetHeight FCE_Terrain_SetHeight;
		public static Binding._FCE_Terrain_SetHeight_End FCE_Terrain_SetHeight_End;
		public static Binding._FCE_Terrain_GetAverageHeight FCE_Terrain_GetAverageHeight;
		public static Binding._FCE_Terrain_Average FCE_Terrain_Average;
		public static Binding._FCE_Terrain_Average_End FCE_Terrain_Average_End;
		public static Binding._FCE_Terrain_Grab_Begin FCE_Terrain_Grab_Begin;
		public static Binding._FCE_Terrain_Grab FCE_Terrain_Grab;
		public static Binding._FCE_Terrain_Grab_End FCE_Terrain_Grab_End;
		public static Binding._FCE_Terrain_Smooth FCE_Terrain_Smooth;
		public static Binding._FCE_Terrain_Smooth_End FCE_Terrain_Smooth_End;
		public static Binding._FCE_Terrain_Ramp FCE_Terrain_Ramp;
		public static Binding._FCE_Terrain_Terrace FCE_Terrain_Terrace;
		public static Binding._FCE_Terrain_Terrace_End FCE_Terrain_Terrace_End;
		public static Binding._FCE_Terrain_Noise_Begin FCE_Terrain_Noise_Begin;
		public static Binding._FCE_Terrain_Noise FCE_Terrain_Noise;
		public static Binding._FCE_Terrain_Noise_End FCE_Terrain_Noise_End;
		public static Binding._FCE_Terrain_Erosion FCE_Terrain_Erosion;
		public static Binding._FCE_Terrain_Erosion_End FCE_Terrain_Erosion_End;
		public static Binding._FCE_Terrain_Hole FCE_Terrain_Hole;
		public static Binding._FCE_Terrain_Hole_End FCE_Terrain_Hole_End;
		public static Binding._FCE_Inventory_Entry_IsDirectory FCE_Inventory_Entry_IsDirectory;
		public static Binding._FCE_Inventory_Entry_IsObsolete FCE_Inventory_Entry_IsObsolete;
		public static Binding._FCE_Inventory_Entry_IsDeleted FCE_Inventory_Entry_IsDeleted;
		public static Binding._FCE_Inventory_Entry_SetDeleted FCE_Inventory_Entry_SetDeleted;
		public static Binding._FCE_Inventory_Entry_ClearChildren FCE_Inventory_Entry_ClearChildren;
		public static Binding._FCE_Inventory_Entry_AddChild FCE_Inventory_Entry_AddChild;
		public static Binding._FCE_Inventory_Entry_SetChildIndex FCE_Inventory_Entry_SetChildIndex;
		public static Binding._FCE_Inventory_Entry_OpenThumbnailData FCE_Inventory_Entry_OpenThumbnailData;
		public static Binding._FCE_Inventory_Entry_CloseThumbnailData FCE_Inventory_Entry_CloseThumbnailData;
		public static Binding._FCE_Inventory_Object_GetRoot FCE_Inventory_Object_GetRoot;
		public static Binding._FCE_Inventory_Object_CreatePrefabObject FCE_Inventory_Object_CreatePrefabObject;
		public static Binding._FCE_Inventory_Object_CreateDirectory FCE_Inventory_Object_CreateDirectory;
		public static Binding._FCE_Inventory_Object_CreateFilterDirectory FCE_Inventory_Object_CreateFilterDirectory;
		public static Binding._FCE_Inventory_Object_DestroyFilterDirectory FCE_Inventory_Object_DestroyFilterDirectory;
		public static Binding._FCE_Inventory_Object_SearchInventoryEntry FCE_Inventory_Object_SearchInventoryEntry;
		public static Binding._FCE_Inventory_Object_GetParent FCE_Inventory_Object_GetParent;
		public static Binding._FCE_Inventory_Object_SetParent FCE_Inventory_Object_SetParent;
		public static Binding._FCE_Inventory_Object_IsDirectory FCE_Inventory_Object_IsDirectory;
		public static Binding._FCE_Inventory_Object_GetChildCount FCE_Inventory_Object_GetChildCount;
		public static Binding._FCE_Inventory_Object_GetChild FCE_Inventory_Object_GetChild;
		public static Binding._FCE_Inventory_Object_GetId FCE_Inventory_Object_GetId;
		public static Binding._FCE_Inventory_Object_GetIdString FCE_Inventory_Object_GetIdString;
		public static Binding._FCE_Inventory_Object_SetIdString FCE_Inventory_Object_SetIdString;
		public static Binding._FCE_Inventory_Object_GetDisplay FCE_Inventory_Object_GetDisplay;
		public static Binding._FCE_Inventory_Object_SetDisplay FCE_Inventory_Object_SetDisplay;
		public static Binding._FCE_Inventory_Object_GetTags FCE_Inventory_Object_GetTags;
		public static Binding._FCE_Inventory_Object_SetTags FCE_Inventory_Object_SetTags;
		public static Binding._FCE_Inventory_Object_GetSourceType FCE_Inventory_Object_GetSourceType;
		public static Binding._FCE_Inventory_Object_GetBMin FCE_Inventory_Object_GetBMin;
		public static Binding._FCE_Inventory_Object_GetBMax FCE_Inventory_Object_GetBMax;
		public static Binding._FCE_Inventory_Object_GetSize FCE_Inventory_Object_GetSize;
		public static Binding._FCE_Inventory_Object_IsAI FCE_Inventory_Object_IsAI;
		public static Binding._FCE_Inventory_Object_IsAutoOrientation FCE_Inventory_Object_IsAutoOrientation;
		public static Binding._FCE_Inventory_Object_GetZOffset FCE_Inventory_Object_GetZOffset;
		public static Binding._FCE_Inventory_Object_SetZOffset FCE_Inventory_Object_SetZOffset;
		public static Binding._FCE_Inventory_Object_SaveChanges FCE_Inventory_Object_SaveChanges;
		public static Binding._FCE_Inventory_Object_ClearPivots FCE_Inventory_Object_ClearPivots;
		public static Binding._FCE_Inventory_Object_AddPivot FCE_Inventory_Object_AddPivot;
		public static Binding._FCE_Inventory_Object_SetPivot FCE_Inventory_Object_SetPivot;
		public static Binding._FCE_Inventory_Object_SetPivots FCE_Inventory_Object_SetPivots;
		public static Binding._FCE_Inventory_Object_IsAutoPivot FCE_Inventory_Object_IsAutoPivot;
		public static Binding._FCE_Inventory_Object_SetAutoPivot FCE_Inventory_Object_SetAutoPivot;
		public static Binding._FCE_Inventory_Object_GetPivotCount FCE_Inventory_Object_GetPivotCount;
		public static Binding._FCE_Inventory_Collection_GetRoot FCE_Inventory_Collection_GetRoot;
		public static Binding._FCE_Inventory_Collection_GetParent FCE_Inventory_Collection_GetParent;
		public static Binding._FCE_Inventory_Collection_GetChildCount FCE_Inventory_Collection_GetChildCount;
		public static Binding._FCE_Inventory_Collection_GetChild FCE_Inventory_Collection_GetChild;
		public static Binding._FCE_Inventory_Collection_GetDisplay FCE_Inventory_Collection_GetDisplay;
		public static Binding._FCE_Inventory_Collection_GetBurnProfile FCE_Inventory_Collection_GetBurnProfile;
		public static Binding._FCE_Inventory_Texture_GetRoot FCE_Inventory_Texture_GetRoot;
		public static Binding._FCE_Inventory_Texture_GetParent FCE_Inventory_Texture_GetParent;
		public static Binding._FCE_Inventory_Texture_GetChildCount FCE_Inventory_Texture_GetChildCount;
		public static Binding._FCE_Inventory_Texture_GetChild FCE_Inventory_Texture_GetChild;
		public static Binding._FCE_Inventory_Texture_GetDisplay FCE_Inventory_Texture_GetDisplay;
		public static Binding._FCE_Inventory_Water_GetRoot FCE_Inventory_Water_GetRoot;
		public static Binding._FCE_Inventory_Water_GetParent FCE_Inventory_Water_GetParent;
		public static Binding._FCE_Inventory_Water_GetChildCount FCE_Inventory_Water_GetChildCount;
		public static Binding._FCE_Inventory_Water_GetChild FCE_Inventory_Water_GetChild;
		public static Binding._FCE_Inventory_Water_GetDisplay FCE_Inventory_Water_GetDisplay;
		public static Binding._FCE_Inventory_Water_GetFromId FCE_Inventory_Water_GetFromId;
		public static Binding._FCE_Inventory_Spline_GetRoot FCE_Inventory_Spline_GetRoot;
		public static Binding._FCE_Inventory_Spline_GetParent FCE_Inventory_Spline_GetParent;
		public static Binding._FCE_Inventory_Spline_GetChildCount FCE_Inventory_Spline_GetChildCount;
		public static Binding._FCE_Inventory_Spline_GetChild FCE_Inventory_Spline_GetChild;
		public static Binding._FCE_Inventory_Spline_GetDisplay FCE_Inventory_Spline_GetDisplay;
		public static Binding._FCE_Inventory_Spline_GetDefaultWidth FCE_Inventory_Spline_GetDefaultWidth;
		public static Binding._FCE_Inventory_Wilderness_GetRoot FCE_Inventory_Wilderness_GetRoot;
		public static Binding._FCE_Inventory_Wilderness_GetParent FCE_Inventory_Wilderness_GetParent;
		public static Binding._FCE_Inventory_Wilderness_GetChildCount FCE_Inventory_Wilderness_GetChildCount;
		public static Binding._FCE_Inventory_Wilderness_GetChild FCE_Inventory_Wilderness_GetChild;
		public static Binding._FCE_Inventory_Wilderness_GetDisplay FCE_Inventory_Wilderness_GetDisplay;
		public static Binding._FCE_Object_Create_FromEntry FCE_Object_Create_FromEntry;
		public static Binding._FCE_Object_Destroy FCE_Object_Destroy;
		public static Binding._FCE_Object_AddRef FCE_Object_AddRef;
		public static Binding._FCE_Object_Release FCE_Object_Release;
		public static Binding._FCE_Object_Clone FCE_Object_Clone;
		public static Binding._FCE_Object_IsLoaded FCE_Object_IsLoaded;
		public static Binding._FCE_Object_GetEntry FCE_Object_GetEntry;
		public static Binding._FCE_Object_GetPos FCE_Object_GetPos;
		public static Binding._FCE_Object_SetPos FCE_Object_SetPos;
		public static Binding._FCE_Object_GetAngles FCE_Object_GetAngles;
		public static Binding._FCE_Object_SetAngles FCE_Object_SetAngles;
		public static Binding._FCE_Object_GetBounds FCE_Object_GetBounds;
		public static Binding._FCE_Object_IsVisible FCE_Object_IsVisible;
		public static Binding._FCE_Object_SetVisible FCE_Object_SetVisible;
		public static Binding._FCE_Object_SetHighlight FCE_Object_SetHighlight;
		public static Binding._FCE_Object_SetFreeze FCE_Object_SetFreeze;
		public static Binding._FCE_Object_DropToGround FCE_Object_DropToGround;
		public static Binding._FCE_Object_ComputeAutoOrientation FCE_Object_ComputeAutoOrientation;
		public static Binding._FCE_Object_GetPivot FCE_Object_GetPivot;
		public static Binding._FCE_Object_GetClosestPivot FCE_Object_GetClosestPivot;
		public static Binding._FCE_Object_SnapToClosestObject FCE_Object_SnapToClosestObject;
		public static Binding._FCE_Object_GetPhysEntities FCE_Object_GetPhysEntities;
		public static Binding._FCE_ObjectManager_GetObjectFromScreenPoint FCE_ObjectManager_GetObjectFromScreenPoint;
		public static Binding._FCE_ObjectManager_GetObjectsFromScreenRect FCE_ObjectManager_GetObjectsFromScreenRect;
		public static Binding._FCE_ObjectManager_GetObjectsFromMagicWand FCE_ObjectManager_GetObjectsFromMagicWand;
		public static Binding._FCE_ObjectManager_SetViewportPickingPos FCE_ObjectManager_SetViewportPickingPos;
		public static Binding._FCE_ObjectManager_UnfreezeObjects FCE_ObjectManager_UnfreezeObjects;
		public static Binding._FCE_ObjectManager_GetObjectCount FCE_ObjectManager_GetObjectCount;
		public static Binding._FCE_ObjectManager_GetObject FCE_ObjectManager_GetObject;
		public static Binding._FCE_ObjectManager_OnObjectAddedFromTool FCE_ObjectManager_OnObjectAddedFromTool;
		public static Binding._FCE_ObjectSelection_Create FCE_ObjectSelection_Create;
		public static Binding._FCE_ObjectSelection_Destroy FCE_ObjectSelection_Destroy;
		public static Binding._FCE_ObjectSelection_Clear FCE_ObjectSelection_Clear;
		public static Binding._FCE_ObjectSelection_Add FCE_ObjectSelection_Add;
		public static Binding._FCE_ObjectSelection_AddSelection FCE_ObjectSelection_AddSelection;
		public static Binding._FCE_ObjectSelection_ToggleObject FCE_ObjectSelection_ToggleObject;
		public static Binding._FCE_ObjectSelection_ToggleSelection FCE_ObjectSelection_ToggleSelection;
		public static Binding._FCE_ObjectSelection_RemoveObject FCE_ObjectSelection_RemoveObject;
		public static Binding._FCE_ObjectSelection_RemoveSelection FCE_ObjectSelection_RemoveSelection;
		public static Binding._FCE_ObjectSelection_GetCount FCE_ObjectSelection_GetCount;
		public static Binding._FCE_ObjectSelection_Get FCE_ObjectSelection_Get;
		public static Binding._FCE_ObjectSelection_GetValidObjects FCE_ObjectSelection_GetValidObjects;
		public static Binding._FCE_ObjectSelection_RemoveInvalidObjects FCE_ObjectSelection_RemoveInvalidObjects;
		public static Binding._FCE_ObjectSelection_Clone FCE_ObjectSelection_Clone;
		public static Binding._FCE_ObjectSelection_Delete FCE_ObjectSelection_Delete;
		public static Binding._FCE_ObjectSelection_GetCenter FCE_ObjectSelection_GetCenter;
		public static Binding._FCE_ObjectSelection_SetCenter FCE_ObjectSelection_SetCenter;
		public static Binding._FCE_ObjectSelection_GetComputeCenter FCE_ObjectSelection_GetComputeCenter;
		public static Binding._FCE_ObjectSelection_ComputeCenter FCE_ObjectSelection_ComputeCenter;
		public static Binding._FCE_ObjectSelection_GetWorldBounds FCE_ObjectSelection_GetWorldBounds;
		public static Binding._FCE_ObjectSelection_MoveTo FCE_ObjectSelection_MoveTo;
		public static Binding._FCE_ObjectSelection_Rotate FCE_ObjectSelection_Rotate;
		public static Binding._FCE_ObjectSelection_Rotate3 FCE_ObjectSelection_Rotate3;
		public static Binding._FCE_ObjectSelection_RotateCenter FCE_ObjectSelection_RotateCenter;
		public static Binding._FCE_ObjectSelection_RotateLocal3 FCE_ObjectSelection_RotateLocal3;
		public static Binding._FCE_ObjectSelection_RotateGimbal FCE_ObjectSelection_RotateGimbal;
		public static Binding._FCE_ObjectSelection_DropToGround FCE_ObjectSelection_DropToGround;
		public static Binding._FCE_ObjectSelection_SnapToPivot FCE_ObjectSelection_SnapToPivot;
		public static Binding._FCE_ObjectSelection_SnapToClosestObjects FCE_ObjectSelection_SnapToClosestObjects;
		public static Binding._FCE_ObjectSelection_GetPhysEntities FCE_ObjectSelection_GetPhysEntities;
		public static Binding._FCE_ObjectSelection_ClearState FCE_ObjectSelection_ClearState;
		public static Binding._FCE_ObjectSelection_LoadState FCE_ObjectSelection_LoadState;
		public static Binding._FCE_ObjectSelection_SaveState FCE_ObjectSelection_SaveState;
		public static Binding._FCE_ObjectSelection_LoadFromXml FCE_ObjectSelection_LoadFromXml;
		public static Binding._FCE_ObjectSelection_SaveToXml FCE_ObjectSelection_SaveToXml;
		public static Binding._FCE_ObjectViewer_SetActive FCE_ObjectViewer_SetActive;
		public static Binding._FCE_ObjectViewer_SetObject FCE_ObjectViewer_SetObject;
		public static Binding._FCE_ObjectLegoBox_SetActive FCE_ObjectLegoBox_SetActive;
		public static Binding._FCE_ObjectLegoBox_AddEntry FCE_ObjectLegoBox_AddEntry;
		public static Binding._FCE_ObjectLegoBox_ClearEntries FCE_ObjectLegoBox_ClearEntries;
		public static Binding._FCE_ObjectLegoBox_CreateLegoBox FCE_ObjectLegoBox_CreateLegoBox;
		public static Binding._FCE_ObjectLegoBox_GetEntryFromScreenPoint FCE_ObjectLegoBox_GetEntryFromScreenPoint;
		public static Binding._FCE_ObjectRenderer_Clear FCE_ObjectRenderer_Clear;
		public static Binding._FCE_ObjectRenderer_SetActive FCE_ObjectRenderer_SetActive;
		public static Binding._FCE_ObjectRenderer_RenderObject FCE_ObjectRenderer_RenderObject;
		public static Binding._FCE_ObjectRenderer_IsSnapshotReady FCE_ObjectRenderer_IsSnapshotReady;
		public static Binding._FCE_ObjectRenderer_GetSnapshot FCE_ObjectRenderer_GetSnapshot;
		public static Binding._FCE_ObjectRenderer_GetSnapshotEntry FCE_ObjectRenderer_GetSnapshotEntry;
		public static Binding._FCE_ObjectRenderer_ClearSnapshot FCE_ObjectRenderer_ClearSnapshot;
		public static Binding._FCE_ObjectRenderer_WritePNG FCE_ObjectRenderer_WritePNG;
		public static Binding._FCE_ObjectRenderer_GenerateThumbnails FCE_ObjectRenderer_GenerateThumbnails;
		public static Binding._FCE_CollectionRenderer_GenerateThumbnails FCE_CollectionRenderer_GenerateThumbnails;
		public static Binding._FCE_Gizmo_Create FCE_Gizmo_Create;
		public static Binding._FCE_Gizmo_Destroy FCE_Gizmo_Destroy;
		public static Binding._FCE_Gizmo_GetPos FCE_Gizmo_GetPos;
		public static Binding._FCE_Gizmo_SetPos FCE_Gizmo_SetPos;
		public static Binding._FCE_Gizmo_GetAxis FCE_Gizmo_GetAxis;
		public static Binding._FCE_Gizmo_SetAxis FCE_Gizmo_SetAxis;
		public static Binding._FCE_Gizmo_GetActive FCE_Gizmo_GetActive;
		public static Binding._FCE_Gizmo_SetActive FCE_Gizmo_SetActive;
		public static Binding._FCE_Gizmo_Redraw FCE_Gizmo_Redraw;
		public static Binding._FCE_Gizmo_Hide FCE_Gizmo_Hide;
		public static Binding._FCE_Gizmo_IsRotationMode FCE_Gizmo_IsRotationMode;
		public static Binding._FCE_Gizmo_SetRotationMode FCE_Gizmo_SetRotationMode;
		public static Binding._FCE_Gizmo_HitTest FCE_Gizmo_HitTest;
		public static Binding._FCE_CollectionManager_GetCollectionEntryFromId FCE_CollectionManager_GetCollectionEntryFromId;
		public static Binding._FCE_CollectionManager_AssignCollectionId FCE_CollectionManager_AssignCollectionId;
		public static Binding._FCE_CollectionManager_WriteMaskCircle FCE_CollectionManager_WriteMaskCircle;
		public static Binding._FCE_CollectionManager_WriteMaskSquare FCE_CollectionManager_WriteMaskSquare;
		public static Binding._FCE_CollectionManager_ClearMaskId FCE_CollectionManager_ClearMaskId;
		public static Binding._FCE_CollectionManager_UpdateCollections FCE_CollectionManager_UpdateCollections;
		public static Binding._FCE_Collection_Paint FCE_Collection_Paint;
		public static Binding._FCE_Collection_Paint_End FCE_Collection_Paint_End;
		public static Binding._FCE_Texture_Paint FCE_Texture_Paint;
		public static Binding._FCE_Texture_Paint_End FCE_Texture_Paint_End;
		public static Binding._FCE_Texture_PaintConstraints_Begin FCE_Texture_PaintConstraints_Begin;
		public static Binding._FCE_Texture_PaintConstraints FCE_Texture_PaintConstraints;
		public static Binding._FCE_Texture_PaintConstraints_End FCE_Texture_PaintConstraints_End;
		public static Binding._FCE_TerrainManager_GetHeightAt FCE_TerrainManager_GetHeightAt;
		public static Binding._FCE_TerrainManager_GetHeightAtWithWater FCE_TerrainManager_GetHeightAtWithWater;
		public static Binding._FCE_TerrainManager_GetTextureEntryFromId FCE_TerrainManager_GetTextureEntryFromId;
		public static Binding._FCE_TerrainManager_AssignTextureId FCE_TerrainManager_AssignTextureId;
		public static Binding._FCE_TerrainManager_ClearTextureId FCE_TerrainManager_ClearTextureId;
		public static Binding._FCE_TerrainManager_GetGlobalWaterLevel FCE_TerrainManager_GetGlobalWaterLevel;
		public static Binding._FCE_TerrainManager_SetGlobalWaterLevel FCE_TerrainManager_SetGlobalWaterLevel;
		public static Binding._FCE_TerrainManager_SetWaterLevelSector FCE_TerrainManager_SetWaterLevelSector;
		public static Binding._FCE_TerrainManager_UpdateWaterLevel FCE_TerrainManager_UpdateWaterLevel;
		public static Binding._FCE_UndoManager_GetUndoCount FCE_UndoManager_GetUndoCount;
		public static Binding._FCE_UndoManager_GetRedoCount FCE_UndoManager_GetRedoCount;
		public static Binding._FCE_UndoManager_Undo FCE_UndoManager_Undo;
		public static Binding._FCE_UndoManager_Redo FCE_UndoManager_Redo;
		public static Binding._FCE_UndoManager_RecordUndo FCE_UndoManager_RecordUndo;
		public static Binding._FCE_UndoManager_CommitUndo FCE_UndoManager_CommitUndo;
		public static Binding._FCE_Validation_GameMode FCE_Validation_GameMode;
		public static Binding._FCE_Validation_Game FCE_Validation_Game;
		public static Binding._FCE_ValidationReport_Destroy FCE_ValidationReport_Destroy;
		public static Binding._FCE_ValidationReport_GetCount FCE_ValidationReport_GetCount;
		public static Binding._FCE_ValidationReport_GetRecord FCE_ValidationReport_GetRecord;
		public static Binding._FCE_ValidationRecord_GetSeverity FCE_ValidationRecord_GetSeverity;
		public static Binding._FCE_ValidationRecord_GetFlags FCE_ValidationRecord_GetFlags;
		public static Binding._FCE_ValidationRecord_GetMessage FCE_ValidationRecord_GetMessage;
		public static Binding._FCE_ValidationRecord_GetObject FCE_ValidationRecord_GetObject;
		public static Binding._FCE_Snapshot_Create FCE_Snapshot_Create;
		public static Binding._FCE_Snapshot_Destroy FCE_Snapshot_Destroy;
		public static Binding._FCE_Snapshot_GetData FCE_Snapshot_GetData;
		public static Binding._FCE_Spline_Create FCE_Spline_Create;
		public static Binding._FCE_Spline_Destroy FCE_Spline_Destroy;
		public static Binding._FCE_Spline_Clear FCE_Spline_Clear;
		public static Binding._FCE_Spline_AddPoint FCE_Spline_AddPoint;
		public static Binding._FCE_Spline_InsertPoint FCE_Spline_InsertPoint;
		public static Binding._FCE_Spline_RemovePoint FCE_Spline_RemovePoint;
		public static Binding._FCE_Spline_RemoveSimilarPoints FCE_Spline_RemoveSimilarPoints;
		public static Binding._FCE_Spline_OptimizePoint FCE_Spline_OptimizePoint;
		public static Binding._FCE_Spline_GetNumPoints FCE_Spline_GetNumPoints;
		public static Binding._FCE_Spline_GetPoint FCE_Spline_GetPoint;
		public static Binding._FCE_Spline_SetPoint FCE_Spline_SetPoint;
		public static Binding._FCE_Spline_UpdateSpline FCE_Spline_UpdateSpline;
		public static Binding._FCE_Spline_UpdateSplineHeight FCE_Spline_UpdateSplineHeight;
		public static Binding._FCE_Spline_FinalizeSpline FCE_Spline_FinalizeSpline;
		public static Binding._FCE_Spline_Draw FCE_Spline_Draw;
		public static Binding._FCE_Spline_HitTestPoints FCE_Spline_HitTestPoints;
		public static Binding._FCE_Spline_HitTestSegments FCE_Spline_HitTestSegments;
		public static Binding._FCE_SplineRoad_GetEntry FCE_SplineRoad_GetEntry;
		public static Binding._FCE_SplineRoad_SetEntry FCE_SplineRoad_SetEntry;
		public static Binding._FCE_SplineRoad_GetWidth FCE_SplineRoad_GetWidth;
		public static Binding._FCE_SplineRoad_SetWidth FCE_SplineRoad_SetWidth;
		public static Binding._FCE_SplineZone_Reset FCE_SplineZone_Reset;
		public static Binding._FCE_SplineController_Create FCE_SplineController_Create;
		public static Binding._FCE_SplineController_Destroy FCE_SplineController_Destroy;
		public static Binding._FCE_SplineController_SetSpline FCE_SplineController_SetSpline;
		public static Binding._FCE_SplineController_ClearSelection FCE_SplineController_ClearSelection;
		public static Binding._FCE_SplineController_IsSelected FCE_SplineController_IsSelected;
		public static Binding._FCE_SplineController_SetSelected FCE_SplineController_SetSelected;
		public static Binding._FCE_SplineController_SelectFromScreenRect FCE_SplineController_SelectFromScreenRect;
		public static Binding._FCE_SplineController_MoveSelection FCE_SplineController_MoveSelection;
		public static Binding._FCE_SplineController_DeleteSelection FCE_SplineController_DeleteSelection;
		public static Binding._FCE_SplineManager_CreateRoad FCE_SplineManager_CreateRoad;
		public static Binding._FCE_SplineManager_DestroyRoad FCE_SplineManager_DestroyRoad;
		public static Binding._FCE_SplineManager_GetRoadFromId FCE_SplineManager_GetRoadFromId;
		public static Binding._FCE_SplineManager_GetPlayableZone FCE_SplineManager_GetPlayableZone;
		public static Binding._FCE_PhysEntityVector_Create FCE_PhysEntityVector_Create;
		public static Binding._FCE_PhysEntityVector_Destroy FCE_PhysEntityVector_Destroy;
		public static Binding._FCE_Wilderness_Desert FCE_Wilderness_Desert;
		public static Binding._FCE_Wilderness_Script FCE_Wilderness_Script;
		public static Binding._FCE_Wilderness_ScriptBuffer FCE_Wilderness_ScriptBuffer;
		public static Binding._FCE_Wilderness_ScriptEntry FCE_Wilderness_ScriptEntry;
		public static Binding._FCE_Script_GetNumFunctions FCE_Script_GetNumFunctions;
		public static Binding._FCE_Script_GetFunction FCE_Script_GetFunction;
		public static Binding._FCE_ScriptFunction_GetName FCE_ScriptFunction_GetName;
		public static Binding._FCE_ScriptFunction_GetPrototype FCE_ScriptFunction_GetPrototype;
		public static Binding._FCE_ScriptFunction_GetDescription FCE_ScriptFunction_GetDescription;
		public static Binding._FCE_ImageMap_GetSize FCE_ImageMap_GetSize;
		public static Binding._FCE_ImageMap_ConvertTo24bit FCE_ImageMap_ConvertTo24bit;
		public static Binding._FCE_ImageMap_Clone FCE_ImageMap_Clone;
		public static Binding._FCE_ImageMap_Destroy FCE_ImageMap_Destroy;
		public static Binding._FCE_BudgetManager_GetMemoryUsage FCE_BudgetManager_GetMemoryUsage;
		public static Binding._FCE_BudgetManager_GetObjectUsage FCE_BudgetManager_GetObjectUsage;
		public static Binding._FCE_Navmesh_SetDisplay FCE_Navmesh_SetDisplay;
		public static Binding._FCE_Navmesh_RegenerateTileAt FCE_Navmesh_RegenerateTileAt;
		public static Binding._FCE_Navmesh_SetAPDisplay FCE_Navmesh_SetAPDisplay;
		public static Binding._FCE_Navmesh_GetDebugAlpha FCE_Navmesh_GetDebugAlpha;
		public static Binding._FCE_Navmesh_SetDebugAlpha FCE_Navmesh_SetDebugAlpha;
		public static Binding._FCE_Navmesh_GetPendingTilesCount FCE_Navmesh_GetPendingTilesCount;
		public static Binding._FCE_Dash_ValidateIngame FCE_Dash_ValidateIngame;
		public static Binding._FCE_Dash_SetDebugMode FCE_Dash_SetDebugMode;
		public static Binding._FCE_Dash_GetNodeAssaultTime FCE_Dash_GetNodeAssaultTime;
		public static Binding._FCE_Dash_SetNodeAssaultTime FCE_Dash_SetNodeAssaultTime;
		private static IntPtr _gameDllModule;
		public static  void  Initialise()
		{
			Binding.engineDll = "FC3.dll";
			Binding.gameDll = "FC3.dll";
			Binding.managedDll = "FC3Editor.Core.dll";
			Binding.LoadIGEDll = null;
			Binding.UnloadIGEDll = null;
			if (EngineUtils.HasArgument("-dx11"))
			{
				Binding.engineDll = Binding.engineDll.Replace(".dll", "_d3d11.dll");
				Binding.gameDll = Binding.gameDll.Replace(".dll", "_d3d11.dll");
			}
			IntPtr hModule = Binding.LoadLibrary(Binding.engineDll);
			if (hModule == IntPtr.Zero)
				throw new Exception("Not Loaded");
			Binding.InitDuniaEngine = (Binding._InitDuniaEngine)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(hModule, "InitDuniaEngine"), typeof(Binding._InitDuniaEngine));
			Binding.TickDuniaEngine = (Binding._TickDuniaEngine)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(hModule, "TickDuniaEngine"), typeof(Binding._TickDuniaEngine));
			Binding.RunDuniaEngine = (Binding._RunDuniaEngine)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(hModule, "RunDuniaEngine"), typeof(Binding._RunDuniaEngine));
			Binding.CloseDuniaEngine = (Binding._CloseDuniaEngine)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(hModule, "CloseDuniaEngine"), typeof(Binding._CloseDuniaEngine));
			Binding.LocalizeText = (Binding._LocalizeText)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(hModule, "LocalizeText"), typeof(Binding._LocalizeText));
		}
		public static void LoadDll()
		{
			if (Binding._gameDllModule != IntPtr.Zero)
			{
				return;
			}
			Binding._gameDllModule = Binding.LoadLibrary(Binding.gameDll);
			Binding.FCE_Hack_Init = (Binding._FCE_Hack_Init)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Hack_Init"), typeof(Binding._FCE_Hack_Init));
			Binding.FCE_Engine_Reset = (Binding._FCE_Engine_Reset)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Engine_Reset"), typeof(Binding._FCE_Engine_Reset));
			Binding.FCE_Engine_GetPersonalPath = (Binding._FCE_Engine_GetPersonalPath)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Engine_GetPersonalPath"), typeof(Binding._FCE_Engine_GetPersonalPath));
			Binding.FCE_Engine_GetGenericDataPath = (Binding._FCE_Engine_GetGenericDataPath)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Engine_GetGenericDataPath"), typeof(Binding._FCE_Engine_GetGenericDataPath));
			Binding.FCE_Engine_UpdateViewport = (Binding._FCE_Engine_UpdateViewport)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Engine_UpdateViewport"), typeof(Binding._FCE_Engine_UpdateViewport));
			Binding.FCE_Engine_AutoAcquireInput = (Binding._FCE_Engine_AutoAcquireInput)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Engine_AutoAcquireInput"), typeof(Binding._FCE_Engine_AutoAcquireInput));
			Binding.FCE_Engine_IsConsoleOpen = (Binding._FCE_Engine_IsConsoleOpen)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Engine_IsConsoleOpen"), typeof(Binding._FCE_Engine_IsConsoleOpen));
			Binding.FCE_Engine_GetTimeOfDay = (Binding._FCE_Engine_GetTimeOfDay)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Engine_GetTimeOfDay"), typeof(Binding._FCE_Engine_GetTimeOfDay));
			Binding.FCE_Engine_SetTimeOfDay = (Binding._FCE_Engine_SetTimeOfDay)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Engine_SetTimeOfDay"), typeof(Binding._FCE_Engine_SetTimeOfDay));
			Binding.FCE_Engine_GetCloudTypeCount = (Binding._FCE_Engine_GetCloudTypeCount)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Engine_GetCloudTypeCount"), typeof(Binding._FCE_Engine_GetCloudTypeCount));
			Binding.FCE_Engine_GetCloudType = (Binding._FCE_Engine_GetCloudType)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Engine_GetCloudType"), typeof(Binding._FCE_Engine_GetCloudType));
			Binding.FCE_Engine_SetCloudType = (Binding._FCE_Engine_SetCloudType)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Engine_SetCloudType"), typeof(Binding._FCE_Engine_SetCloudType));
			Binding.FCE_Engine_GetStormFactor = (Binding._FCE_Engine_GetStormFactor)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Engine_GetStormFactor"), typeof(Binding._FCE_Engine_GetStormFactor));
			Binding.FCE_Engine_SetStormFactor = (Binding._FCE_Engine_SetStormFactor)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Engine_SetStormFactor"), typeof(Binding._FCE_Engine_SetStormFactor));
			Binding.FCE_Core_GetAxisFromAngles = (Binding._FCE_Core_GetAxisFromAngles)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Core_GetAxisFromAngles"), typeof(Binding._FCE_Core_GetAxisFromAngles));
			Binding.FCE_Core_GetAnglesFromAxis = (Binding._FCE_Core_GetAnglesFromAxis)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Core_GetAnglesFromAxis"), typeof(Binding._FCE_Core_GetAnglesFromAxis));
			Binding.FCE_Core_GetAnglesFromDir = (Binding._FCE_Core_GetAnglesFromDir)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Core_GetAnglesFromDir"), typeof(Binding._FCE_Core_GetAnglesFromDir));
			Binding.FCE_Core_Points_Create = (Binding._FCE_Core_Points_Create)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Core_Points_Create"), typeof(Binding._FCE_Core_Points_Create));
			Binding.FCE_Core_Points_Destroy = (Binding._FCE_Core_Points_Destroy)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Core_Points_Destroy"), typeof(Binding._FCE_Core_Points_Destroy));
			Binding.FCE_Editor_Create = (Binding._FCE_Editor_Create)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_Create"), typeof(Binding._FCE_Editor_Create));
			Binding.FCE_Editor_Destroy = (Binding._FCE_Editor_Destroy)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_Destroy"), typeof(Binding._FCE_Editor_Destroy));
			Binding.FCE_Editor_IsInitialized = (Binding._FCE_Editor_IsInitialized)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_IsInitialized"), typeof(Binding._FCE_Editor_IsInitialized));
			Binding.FCE_Editor_Update_Callback = (Binding._FCE_Editor_Update_Callback)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_Update_Callback"), typeof(Binding._FCE_Editor_Update_Callback));
			Binding.FCE_Editor_Event_Callback = (Binding._FCE_Editor_Event_Callback)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_Event_Callback"), typeof(Binding._FCE_Editor_Event_Callback));
			Binding.FCE_Editor_LoadCompleted_Callback = (Binding._FCE_Editor_LoadCompleted_Callback)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_LoadCompleted_Callback"), typeof(Binding._FCE_Editor_LoadCompleted_Callback));
			Binding.FCE_Editor_SaveCompleted_Callback = (Binding._FCE_Editor_SaveCompleted_Callback)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_SaveCompleted_Callback"), typeof(Binding._FCE_Editor_SaveCompleted_Callback));
			Binding.FCE_Editor_EnableUI_Callback = (Binding._FCE_Editor_EnableUI_Callback)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_EnableUI_Callback"), typeof(Binding._FCE_Editor_EnableUI_Callback));
			Binding.FCE_Editor_IsLoadPending = (Binding._FCE_Editor_IsLoadPending)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_IsLoadPending"), typeof(Binding._FCE_Editor_IsLoadPending));
			Binding.FCE_Editor_GetFrameTime = (Binding._FCE_Editor_GetFrameTime)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_GetFrameTime"), typeof(Binding._FCE_Editor_GetFrameTime));
			Binding.FCE_Editor_GetScreenPointFromWorldPos = (Binding._FCE_Editor_GetScreenPointFromWorldPos)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_GetScreenPointFromWorldPos"), typeof(Binding._FCE_Editor_GetScreenPointFromWorldPos));
			Binding.FCE_Editor_GetWorldRayFromScreenPoint = (Binding._FCE_Editor_GetWorldRayFromScreenPoint)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_GetWorldRayFromScreenPoint"), typeof(Binding._FCE_Editor_GetWorldRayFromScreenPoint));
			Binding.FCE_Editor_RayCastTerrain = (Binding._FCE_Editor_RayCastTerrain)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_RayCastTerrain"), typeof(Binding._FCE_Editor_RayCastTerrain));
			Binding.FCE_Editor_RayCastPhysics = (Binding._FCE_Editor_RayCastPhysics)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_RayCastPhysics"), typeof(Binding._FCE_Editor_RayCastPhysics));
			Binding.FCE_Editor_RayCastPhysics2 = (Binding._FCE_Editor_RayCastPhysics2)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_RayCastPhysics2"), typeof(Binding._FCE_Editor_RayCastPhysics2));
			Binding.FCE_Editor_ValidateIngame = (Binding._FCE_Editor_ValidateIngame)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_ValidateIngame"), typeof(Binding._FCE_Editor_ValidateIngame));
			Binding.FCE_Editor_EnterIngame = (Binding._FCE_Editor_EnterIngame)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_EnterIngame"), typeof(Binding._FCE_Editor_EnterIngame));
			Binding.FCE_Editor_ExitIngame = (Binding._FCE_Editor_ExitIngame)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_ExitIngame"), typeof(Binding._FCE_Editor_ExitIngame));
			Binding.FCE_Editor_IsIngame = (Binding._FCE_Editor_IsIngame)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Editor_IsIngame"), typeof(Binding._FCE_Editor_IsIngame));
			Binding.FCE_Document_Reset = (Binding._FCE_Document_Reset)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_Reset"), typeof(Binding._FCE_Document_Reset));
			Binding.FCE_Document_LoadPhysical = (Binding._FCE_Document_LoadPhysical)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_LoadPhysical"), typeof(Binding._FCE_Document_LoadPhysical));
			Binding.FCE_Document_Load = (Binding._FCE_Document_Load)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_Load"), typeof(Binding._FCE_Document_Load));
			Binding.FCE_Document_Save = (Binding._FCE_Document_Save)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_Save"), typeof(Binding._FCE_Document_Save));
			Binding.FCE_Document_Validate = (Binding._FCE_Document_Validate)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_Validate"), typeof(Binding._FCE_Document_Validate));
			Binding.FCE_Document_GetMapID = (Binding._FCE_Document_GetMapID)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_GetMapID"), typeof(Binding._FCE_Document_GetMapID));
			Binding.FCE_Document_SetMapID = (Binding._FCE_Document_SetMapID)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_SetMapID"), typeof(Binding._FCE_Document_SetMapID));
			Binding.FCE_Document_GetVersionID = (Binding._FCE_Document_GetVersionID)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_GetVersionID"), typeof(Binding._FCE_Document_GetVersionID));
			Binding.FCE_Document_GetMapDefaultName = (Binding._FCE_Document_GetMapDefaultName)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_GetMapDefaultName"), typeof(Binding._FCE_Document_GetMapDefaultName));
			Binding.FCE_Document_GetMapName = (Binding._FCE_Document_GetMapName)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_GetMapName"), typeof(Binding._FCE_Document_GetMapName));
			Binding.FCE_Document_SetMapName = (Binding._FCE_Document_SetMapName)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_SetMapName"), typeof(Binding._FCE_Document_SetMapName));
			Binding.FCE_Document_GetCreatorName = (Binding._FCE_Document_GetCreatorName)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_GetCreatorName"), typeof(Binding._FCE_Document_GetCreatorName));
			Binding.FCE_Document_SetCreatorName = (Binding._FCE_Document_SetCreatorName)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_SetCreatorName"), typeof(Binding._FCE_Document_SetCreatorName));
			Binding.FCE_Document_GetAuthorName = (Binding._FCE_Document_GetAuthorName)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_GetAuthorName"), typeof(Binding._FCE_Document_GetAuthorName));
			Binding.FCE_Document_SetAuthorName = (Binding._FCE_Document_SetAuthorName)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_SetAuthorName"), typeof(Binding._FCE_Document_SetAuthorName));
			Binding.FCE_Document_GetBattlefieldSize = (Binding._FCE_Document_GetBattlefieldSize)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_GetBattlefieldSize"), typeof(Binding._FCE_Document_GetBattlefieldSize));
			Binding.FCE_Document_SetBattlefieldSize = (Binding._FCE_Document_SetBattlefieldSize)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_SetBattlefieldSize"), typeof(Binding._FCE_Document_SetBattlefieldSize));
			Binding.FCE_Document_GetPlayerSize = (Binding._FCE_Document_GetPlayerSize)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_GetPlayerSize"), typeof(Binding._FCE_Document_GetPlayerSize));
			Binding.FCE_Document_SetPlayerSize = (Binding._FCE_Document_SetPlayerSize)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_SetPlayerSize"), typeof(Binding._FCE_Document_SetPlayerSize));
			Binding.FCE_Document_IsSnapshotSet = (Binding._FCE_Document_IsSnapshotSet)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_IsSnapshotSet"), typeof(Binding._FCE_Document_IsSnapshotSet));
			Binding.FCE_Document_ClearSnapshot = (Binding._FCE_Document_ClearSnapshot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_ClearSnapshot"), typeof(Binding._FCE_Document_ClearSnapshot));
			Binding.FCE_Document_GetSnapshotPos = (Binding._FCE_Document_GetSnapshotPos)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_GetSnapshotPos"), typeof(Binding._FCE_Document_GetSnapshotPos));
			Binding.FCE_Document_SetSnapshotPos = (Binding._FCE_Document_SetSnapshotPos)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_SetSnapshotPos"), typeof(Binding._FCE_Document_SetSnapshotPos));
			Binding.FCE_Document_GetSnapshotAngle = (Binding._FCE_Document_GetSnapshotAngle)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_GetSnapshotAngle"), typeof(Binding._FCE_Document_GetSnapshotAngle));
			Binding.FCE_Document_SetSnapshotAngle = (Binding._FCE_Document_SetSnapshotAngle)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_SetSnapshotAngle"), typeof(Binding._FCE_Document_SetSnapshotAngle));
			Binding.FCE_Document_TakeSnapshot = (Binding._FCE_Document_TakeSnapshot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_TakeSnapshot"), typeof(Binding._FCE_Document_TakeSnapshot));
			Binding.FCE_Document_IsNavmeshEnabled = (Binding._FCE_Document_IsNavmeshEnabled)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_IsNavmeshEnabled"), typeof(Binding._FCE_Document_IsNavmeshEnabled));
			Binding.FCE_Document_SetNavmeshEnabled = (Binding._FCE_Document_SetNavmeshEnabled)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_SetNavmeshEnabled"), typeof(Binding._FCE_Document_SetNavmeshEnabled));
			Binding.FCE_Document_FinalizeMap = (Binding._FCE_Document_FinalizeMap)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_FinalizeMap"), typeof(Binding._FCE_Document_FinalizeMap));
			Binding.FCE_Document_Export = (Binding._FCE_Document_Export)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_Export"), typeof(Binding._FCE_Document_Export));
			Binding.FCE_Document_Dump = (Binding._FCE_Document_Dump)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_Dump"), typeof(Binding._FCE_Document_Dump));
			Binding.FCE_Document_ExtractBigFile = (Binding._FCE_Document_ExtractBigFile)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Document_ExtractBigFile"), typeof(Binding._FCE_Document_ExtractBigFile));
			Binding.FCE_EditorSettings_IsCollectionVisible = (Binding._FCE_EditorSettings_IsCollectionVisible)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsCollectionVisible"), typeof(Binding._FCE_EditorSettings_IsCollectionVisible));
			Binding.FCE_EditorSettings_ShowCollections = (Binding._FCE_EditorSettings_ShowCollections)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_ShowCollections"), typeof(Binding._FCE_EditorSettings_ShowCollections));
			Binding.FCE_EditorSettings_IsFogVisible = (Binding._FCE_EditorSettings_IsFogVisible)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsFogVisible"), typeof(Binding._FCE_EditorSettings_IsFogVisible));
			Binding.FCE_EditorSettings_ShowFog = (Binding._FCE_EditorSettings_ShowFog)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_ShowFog"), typeof(Binding._FCE_EditorSettings_ShowFog));
			Binding.FCE_EditorSettings_IsExposureVisible = (Binding._FCE_EditorSettings_IsExposureVisible)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsExposureVisible"), typeof(Binding._FCE_EditorSettings_IsExposureVisible));
			Binding.FCE_EditorSettings_ShowExposure = (Binding._FCE_EditorSettings_ShowExposure)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_ShowExposure"), typeof(Binding._FCE_EditorSettings_ShowExposure));
			Binding.FCE_EditorSettings_IsShadowVisible = (Binding._FCE_EditorSettings_IsShadowVisible)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsShadowVisible"), typeof(Binding._FCE_EditorSettings_IsShadowVisible));
			Binding.FCE_EditorSettings_ShowShadow = (Binding._FCE_EditorSettings_ShowShadow)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_ShowShadow"), typeof(Binding._FCE_EditorSettings_ShowShadow));
			Binding.FCE_EditorSettings_IsWaterVisible = (Binding._FCE_EditorSettings_IsWaterVisible)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsWaterVisible"), typeof(Binding._FCE_EditorSettings_IsWaterVisible));
			Binding.FCE_EditorSettings_ShowWater = (Binding._FCE_EditorSettings_ShowWater)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_ShowWater"), typeof(Binding._FCE_EditorSettings_ShowWater));
			Binding.FCE_EditorSettings_IsIconsVisible = (Binding._FCE_EditorSettings_IsIconsVisible)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsIconsVisible"), typeof(Binding._FCE_EditorSettings_IsIconsVisible));
			Binding.FCE_EditorSettings_ShowIcons = (Binding._FCE_EditorSettings_ShowIcons)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_ShowIcons"), typeof(Binding._FCE_EditorSettings_ShowIcons));
			Binding.FCE_EditorSettings_IsSoundEnabled = (Binding._FCE_EditorSettings_IsSoundEnabled)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsSoundEnabled"), typeof(Binding._FCE_EditorSettings_IsSoundEnabled));
			Binding.FCE_EditorSettings_SetSoundEnabled = (Binding._FCE_EditorSettings_SetSoundEnabled)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_SetSoundEnabled"), typeof(Binding._FCE_EditorSettings_SetSoundEnabled));
			Binding.FCE_EditorSettings_IsGridVisible = (Binding._FCE_EditorSettings_IsGridVisible)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsGridVisible"), typeof(Binding._FCE_EditorSettings_IsGridVisible));
			Binding.FCE_EditorSettings_ShowGrid = (Binding._FCE_EditorSettings_ShowGrid)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_ShowGrid"), typeof(Binding._FCE_EditorSettings_ShowGrid));
			Binding.FCE_EditorSettings_GetGridResolution = (Binding._FCE_EditorSettings_GetGridResolution)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_GetGridResolution"), typeof(Binding._FCE_EditorSettings_GetGridResolution));
			Binding.FCE_EditorSettings_SetGridResolution = (Binding._FCE_EditorSettings_SetGridResolution)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_SetGridResolution"), typeof(Binding._FCE_EditorSettings_SetGridResolution));
			Binding.FCE_EditorSettings_IsNavmeshVisible = (Binding._FCE_EditorSettings_IsNavmeshVisible)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsNavmeshVisible"), typeof(Binding._FCE_EditorSettings_IsNavmeshVisible));
			Binding.FCE_EditorSettings_ShowNavmesh = (Binding._FCE_EditorSettings_ShowNavmesh)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_ShowNavmesh"), typeof(Binding._FCE_EditorSettings_ShowNavmesh));
			Binding.FCE_EditorSettings_HideNavmesh = (Binding._FCE_EditorSettings_HideNavmesh)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_HideNavmesh"), typeof(Binding._FCE_EditorSettings_HideNavmesh));
			Binding.FCE_EditorSettings_GetNavmeshLayer = (Binding._FCE_EditorSettings_GetNavmeshLayer)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_GetNavmeshLayer"), typeof(Binding._FCE_EditorSettings_GetNavmeshLayer));
			Binding.FCE_EditorSettings_IsCoversVisible = (Binding._FCE_EditorSettings_IsCoversVisible)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsCoversVisible"), typeof(Binding._FCE_EditorSettings_IsCoversVisible));
			Binding.FCE_EditorSettings_ShowCovers = (Binding._FCE_EditorSettings_ShowCovers)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_ShowCovers"), typeof(Binding._FCE_EditorSettings_ShowCovers));
			Binding.FCE_EditorSettings_IsInvincible = (Binding._FCE_EditorSettings_IsInvincible)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsInvincible"), typeof(Binding._FCE_EditorSettings_IsInvincible));
			Binding.FCE_EditorSettings_SetInvincible = (Binding._FCE_EditorSettings_SetInvincible)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_SetInvincible"), typeof(Binding._FCE_EditorSettings_SetInvincible));
			Binding.FCE_EditorSettings_IsInvisible = (Binding._FCE_EditorSettings_IsInvisible)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsInvisible"), typeof(Binding._FCE_EditorSettings_IsInvisible));
			Binding.FCE_EditorSettings_SetInvisible = (Binding._FCE_EditorSettings_SetInvisible)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_SetInvisible"), typeof(Binding._FCE_EditorSettings_SetInvisible));
			Binding.FCE_EditorSettings_IsSnappingObjectsToTerrain = (Binding._FCE_EditorSettings_IsSnappingObjectsToTerrain)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsSnappingObjectsToTerrain"), typeof(Binding._FCE_EditorSettings_IsSnappingObjectsToTerrain));
			Binding.FCE_EditorSettings_SetSnapObjectsToTerrain = (Binding._FCE_EditorSettings_SetSnapObjectsToTerrain)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_SetSnapObjectsToTerrain"), typeof(Binding._FCE_EditorSettings_SetSnapObjectsToTerrain));
			Binding.FCE_EditorSettings_IsAutoSnappingObjects = (Binding._FCE_EditorSettings_IsAutoSnappingObjects)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsAutoSnappingObjects"), typeof(Binding._FCE_EditorSettings_IsAutoSnappingObjects));
			Binding.FCE_EditorSettings_SetAutoSnappingObjects = (Binding._FCE_EditorSettings_SetAutoSnappingObjects)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_SetAutoSnappingObjects"), typeof(Binding._FCE_EditorSettings_SetAutoSnappingObjects));
			Binding.FCE_EditorSettings_IsAutoSnappingObjectsRotation = (Binding._FCE_EditorSettings_IsAutoSnappingObjectsRotation)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsAutoSnappingObjectsRotation"), typeof(Binding._FCE_EditorSettings_IsAutoSnappingObjectsRotation));
			Binding.FCE_EditorSettings_SetAutoSnappingObjectsRotation = (Binding._FCE_EditorSettings_SetAutoSnappingObjectsRotation)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_SetAutoSnappingObjectsRotation"), typeof(Binding._FCE_EditorSettings_SetAutoSnappingObjectsRotation));
			Binding.FCE_EditorSettings_IsAutoSnappingObjectsTerrain = (Binding._FCE_EditorSettings_IsAutoSnappingObjectsTerrain)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsAutoSnappingObjectsTerrain"), typeof(Binding._FCE_EditorSettings_IsAutoSnappingObjectsTerrain));
			Binding.FCE_EditorSettings_SetAutoSnappingObjectsTerrain = (Binding._FCE_EditorSettings_SetAutoSnappingObjectsTerrain)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_SetAutoSnappingObjectsTerrain"), typeof(Binding._FCE_EditorSettings_SetAutoSnappingObjectsTerrain));
			Binding.FCE_EditorSettings_IsCameraClippedTerrain = (Binding._FCE_EditorSettings_IsCameraClippedTerrain)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsCameraClippedTerrain"), typeof(Binding._FCE_EditorSettings_IsCameraClippedTerrain));
			Binding.FCE_EditorSettings_SetCameraClipTerrain = (Binding._FCE_EditorSettings_SetCameraClipTerrain)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_SetCameraClipTerrain"), typeof(Binding._FCE_EditorSettings_SetCameraClipTerrain));
			Binding.FCE_EditorSettings_IsCameraCollision = (Binding._FCE_EditorSettings_IsCameraCollision)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsCameraCollision"), typeof(Binding._FCE_EditorSettings_IsCameraCollision));
			Binding.FCE_EditorSettings_SetCameraCollision = (Binding._FCE_EditorSettings_SetCameraCollision)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_SetCameraCollision"), typeof(Binding._FCE_EditorSettings_SetCameraCollision));
			Binding.FCE_EditorSettings_GetEngineQuality = (Binding._FCE_EditorSettings_GetEngineQuality)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_GetEngineQuality"), typeof(Binding._FCE_EditorSettings_GetEngineQuality));
			Binding.FCE_EditorSettings_SetEngineQuality = (Binding._FCE_EditorSettings_SetEngineQuality)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_SetEngineQuality"), typeof(Binding._FCE_EditorSettings_SetEngineQuality));
			Binding.FCE_EditorSettings_IsKillDistanceOverride = (Binding._FCE_EditorSettings_IsKillDistanceOverride)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_IsKillDistanceOverride"), typeof(Binding._FCE_EditorSettings_IsKillDistanceOverride));
			Binding.FCE_EditorSettings_SetKillDistanceOverride = (Binding._FCE_EditorSettings_SetKillDistanceOverride)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_EditorSettings_SetKillDistanceOverride"), typeof(Binding._FCE_EditorSettings_SetKillDistanceOverride));
			Binding.FCE_Draw_BeginGroup = (Binding._FCE_Draw_BeginGroup)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Draw_BeginGroup"), typeof(Binding._FCE_Draw_BeginGroup));
			Binding.FCE_Draw_EndGroup = (Binding._FCE_Draw_EndGroup)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Draw_EndGroup"), typeof(Binding._FCE_Draw_EndGroup));
			Binding.FCE_Draw_ScreenCircleOutlined = (Binding._FCE_Draw_ScreenCircleOutlined)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Draw_ScreenCircleOutlined"), typeof(Binding._FCE_Draw_ScreenCircleOutlined));
			Binding.FCE_Draw_ScreenRectangleOutlined = (Binding._FCE_Draw_ScreenRectangleOutlined)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Draw_ScreenRectangleOutlined"), typeof(Binding._FCE_Draw_ScreenRectangleOutlined));
			Binding.FCE_Draw_Quad = (Binding._FCE_Draw_Quad)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Draw_Quad"), typeof(Binding._FCE_Draw_Quad));
			Binding.FCE_Draw_Square = (Binding._FCE_Draw_Square)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Draw_Square"), typeof(Binding._FCE_Draw_Square));
			Binding.FCE_Draw_Terrain_Circle = (Binding._FCE_Draw_Terrain_Circle)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Draw_Terrain_Circle"), typeof(Binding._FCE_Draw_Terrain_Circle));
			Binding.FCE_Draw_Terrain_Square = (Binding._FCE_Draw_Terrain_Square)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Draw_Terrain_Square"), typeof(Binding._FCE_Draw_Terrain_Square));
			Binding.FCE_Draw_Arrow = (Binding._FCE_Draw_Arrow)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Draw_Arrow"), typeof(Binding._FCE_Draw_Arrow));
			Binding.FCE_Draw_Dot = (Binding._FCE_Draw_Dot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Draw_Dot"), typeof(Binding._FCE_Draw_Dot));
			Binding.FCE_Draw_SegmentedLineSegment = (Binding._FCE_Draw_SegmentedLineSegment)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Draw_SegmentedLineSegment"), typeof(Binding._FCE_Draw_SegmentedLineSegment));
			Binding.FCE_Draw_WireBoxFromBottomZ = (Binding._FCE_Draw_WireBoxFromBottomZ)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Draw_WireBoxFromBottomZ"), typeof(Binding._FCE_Draw_WireBoxFromBottomZ));
			Binding.FCE_Draw_WireRegionFromTerrain = (Binding._FCE_Draw_WireRegionFromTerrain)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Draw_WireRegionFromTerrain"), typeof(Binding._FCE_Draw_WireRegionFromTerrain));
			Binding.FCE_Camera_Input_Forward = (Binding._FCE_Camera_Input_Forward)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Camera_Input_Forward"), typeof(Binding._FCE_Camera_Input_Forward));
			Binding.FCE_Camera_Input_Lateral = (Binding._FCE_Camera_Input_Lateral)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Camera_Input_Lateral"), typeof(Binding._FCE_Camera_Input_Lateral));
			Binding.FCE_Camera_GetPos = (Binding._FCE_Camera_GetPos)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Camera_GetPos"), typeof(Binding._FCE_Camera_GetPos));
			Binding.FCE_Camera_SetPos = (Binding._FCE_Camera_SetPos)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Camera_SetPos"), typeof(Binding._FCE_Camera_SetPos));
			Binding.FCE_Camera_GetAngles = (Binding._FCE_Camera_GetAngles)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Camera_GetAngles"), typeof(Binding._FCE_Camera_GetAngles));
			Binding.FCE_Camera_SetAngles = (Binding._FCE_Camera_SetAngles)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Camera_SetAngles"), typeof(Binding._FCE_Camera_SetAngles));
			Binding.FCE_Camera_Rotate = (Binding._FCE_Camera_Rotate)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Camera_Rotate"), typeof(Binding._FCE_Camera_Rotate));
			Binding.FCE_Camera_GetFrontVector = (Binding._FCE_Camera_GetFrontVector)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Camera_GetFrontVector"), typeof(Binding._FCE_Camera_GetFrontVector));
			Binding.FCE_Camera_GetRightVector = (Binding._FCE_Camera_GetRightVector)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Camera_GetRightVector"), typeof(Binding._FCE_Camera_GetRightVector));
			Binding.FCE_Camera_GetUpVector = (Binding._FCE_Camera_GetUpVector)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Camera_GetUpVector"), typeof(Binding._FCE_Camera_GetUpVector));
			Binding.FCE_Camera_GetSpeed = (Binding._FCE_Camera_GetSpeed)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Camera_GetSpeed"), typeof(Binding._FCE_Camera_GetSpeed));
			Binding.FCE_Camera_SetSpeed = (Binding._FCE_Camera_SetSpeed)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Camera_SetSpeed"), typeof(Binding._FCE_Camera_SetSpeed));
			Binding.FCE_Camera_SetSpeedFactor = (Binding._FCE_Camera_SetSpeedFactor)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Camera_SetSpeedFactor"), typeof(Binding._FCE_Camera_SetSpeedFactor));
			Binding.FCE_Camera_GetFOV = (Binding._FCE_Camera_GetFOV)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Camera_GetFOV"), typeof(Binding._FCE_Camera_GetFOV));
			Binding.FCE_Brush_Create = (Binding._FCE_Brush_Create)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Brush_Create"), typeof(Binding._FCE_Brush_Create));
			Binding.FCE_Brush_Destroy = (Binding._FCE_Brush_Destroy)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Brush_Destroy"), typeof(Binding._FCE_Brush_Destroy));
			Binding.FCE_Terrain_Bump = (Binding._FCE_Terrain_Bump)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Bump"), typeof(Binding._FCE_Terrain_Bump));
			Binding.FCE_Terrain_Bump_End = (Binding._FCE_Terrain_Bump_End)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Bump_End"), typeof(Binding._FCE_Terrain_Bump_End));
			Binding.FCE_Terrain_RaiseLower = (Binding._FCE_Terrain_RaiseLower)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_RaiseLower"), typeof(Binding._FCE_Terrain_RaiseLower));
			Binding.FCE_Terrain_RaiseLower_End = (Binding._FCE_Terrain_RaiseLower_End)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_RaiseLower_End"), typeof(Binding._FCE_Terrain_RaiseLower_End));
			Binding.FCE_Terrain_SetHeight = (Binding._FCE_Terrain_SetHeight)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_SetHeight"), typeof(Binding._FCE_Terrain_SetHeight));
			Binding.FCE_Terrain_SetHeight_End = (Binding._FCE_Terrain_SetHeight_End)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_SetHeight_End"), typeof(Binding._FCE_Terrain_SetHeight_End));
			Binding.FCE_Terrain_GetAverageHeight = (Binding._FCE_Terrain_GetAverageHeight)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_GetAverageHeight"), typeof(Binding._FCE_Terrain_GetAverageHeight));
			Binding.FCE_Terrain_Average = (Binding._FCE_Terrain_Average)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Average"), typeof(Binding._FCE_Terrain_Average));
			Binding.FCE_Terrain_Average_End = (Binding._FCE_Terrain_Average_End)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Average_End"), typeof(Binding._FCE_Terrain_Average_End));
			Binding.FCE_Terrain_Grab_Begin = (Binding._FCE_Terrain_Grab_Begin)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Grab_Begin"), typeof(Binding._FCE_Terrain_Grab_Begin));
			Binding.FCE_Terrain_Grab = (Binding._FCE_Terrain_Grab)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Grab"), typeof(Binding._FCE_Terrain_Grab));
			Binding.FCE_Terrain_Grab_End = (Binding._FCE_Terrain_Grab_End)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Grab_End"), typeof(Binding._FCE_Terrain_Grab_End));
			Binding.FCE_Terrain_Smooth = (Binding._FCE_Terrain_Smooth)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Smooth"), typeof(Binding._FCE_Terrain_Smooth));
			Binding.FCE_Terrain_Smooth_End = (Binding._FCE_Terrain_Smooth_End)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Smooth_End"), typeof(Binding._FCE_Terrain_Smooth_End));
			Binding.FCE_Terrain_Ramp = (Binding._FCE_Terrain_Ramp)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Ramp"), typeof(Binding._FCE_Terrain_Ramp));
			Binding.FCE_Terrain_Terrace = (Binding._FCE_Terrain_Terrace)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Terrace"), typeof(Binding._FCE_Terrain_Terrace));
			Binding.FCE_Terrain_Terrace_End = (Binding._FCE_Terrain_Terrace_End)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Terrace_End"), typeof(Binding._FCE_Terrain_Terrace_End));
			Binding.FCE_Terrain_Noise_Begin = (Binding._FCE_Terrain_Noise_Begin)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Noise_Begin"), typeof(Binding._FCE_Terrain_Noise_Begin));
			Binding.FCE_Terrain_Noise = (Binding._FCE_Terrain_Noise)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Noise"), typeof(Binding._FCE_Terrain_Noise));
			Binding.FCE_Terrain_Noise_End = (Binding._FCE_Terrain_Noise_End)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Noise_End"), typeof(Binding._FCE_Terrain_Noise_End));
			Binding.FCE_Terrain_Erosion = (Binding._FCE_Terrain_Erosion)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Erosion"), typeof(Binding._FCE_Terrain_Erosion));
			Binding.FCE_Terrain_Erosion_End = (Binding._FCE_Terrain_Erosion_End)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Erosion_End"), typeof(Binding._FCE_Terrain_Erosion_End));
			Binding.FCE_Terrain_Hole = (Binding._FCE_Terrain_Hole)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Hole"), typeof(Binding._FCE_Terrain_Hole));
			Binding.FCE_Terrain_Hole_End = (Binding._FCE_Terrain_Hole_End)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Terrain_Hole_End"), typeof(Binding._FCE_Terrain_Hole_End));
			Binding.FCE_Inventory_Entry_IsDirectory = (Binding._FCE_Inventory_Entry_IsDirectory)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Entry_IsDirectory"), typeof(Binding._FCE_Inventory_Entry_IsDirectory));
			Binding.FCE_Inventory_Entry_IsObsolete = (Binding._FCE_Inventory_Entry_IsObsolete)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Entry_IsObsolete"), typeof(Binding._FCE_Inventory_Entry_IsObsolete));
			Binding.FCE_Inventory_Entry_IsDeleted = (Binding._FCE_Inventory_Entry_IsDeleted)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Entry_IsDeleted"), typeof(Binding._FCE_Inventory_Entry_IsDeleted));
			Binding.FCE_Inventory_Entry_SetDeleted = (Binding._FCE_Inventory_Entry_SetDeleted)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Entry_SetDeleted"), typeof(Binding._FCE_Inventory_Entry_SetDeleted));
			Binding.FCE_Inventory_Entry_ClearChildren = (Binding._FCE_Inventory_Entry_ClearChildren)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Entry_ClearChildren"), typeof(Binding._FCE_Inventory_Entry_ClearChildren));
			Binding.FCE_Inventory_Entry_AddChild = (Binding._FCE_Inventory_Entry_AddChild)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Entry_AddChild"), typeof(Binding._FCE_Inventory_Entry_AddChild));
			Binding.FCE_Inventory_Entry_SetChildIndex = (Binding._FCE_Inventory_Entry_SetChildIndex)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Entry_SetChildIndex"), typeof(Binding._FCE_Inventory_Entry_SetChildIndex));
			Binding.FCE_Inventory_Entry_OpenThumbnailData = (Binding._FCE_Inventory_Entry_OpenThumbnailData)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Entry_OpenThumbnailData"), typeof(Binding._FCE_Inventory_Entry_OpenThumbnailData));
			Binding.FCE_Inventory_Entry_CloseThumbnailData = (Binding._FCE_Inventory_Entry_CloseThumbnailData)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Entry_CloseThumbnailData"), typeof(Binding._FCE_Inventory_Entry_CloseThumbnailData));
			Binding.FCE_Inventory_Object_GetRoot = (Binding._FCE_Inventory_Object_GetRoot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_GetRoot"), typeof(Binding._FCE_Inventory_Object_GetRoot));
			Binding.FCE_Inventory_Object_CreatePrefabObject = (Binding._FCE_Inventory_Object_CreatePrefabObject)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_CreatePrefabObject"), typeof(Binding._FCE_Inventory_Object_CreatePrefabObject));
			Binding.FCE_Inventory_Object_CreateDirectory = (Binding._FCE_Inventory_Object_CreateDirectory)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_CreateDirectory"), typeof(Binding._FCE_Inventory_Object_CreateDirectory));
			Binding.FCE_Inventory_Object_CreateFilterDirectory = (Binding._FCE_Inventory_Object_CreateFilterDirectory)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_CreateFilterDirectory"), typeof(Binding._FCE_Inventory_Object_CreateFilterDirectory));
			Binding.FCE_Inventory_Object_DestroyFilterDirectory = (Binding._FCE_Inventory_Object_DestroyFilterDirectory)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_DestroyFilterDirectory"), typeof(Binding._FCE_Inventory_Object_DestroyFilterDirectory));
			Binding.FCE_Inventory_Object_SearchInventoryEntry = (Binding._FCE_Inventory_Object_SearchInventoryEntry)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_SearchInventoryEntry"), typeof(Binding._FCE_Inventory_Object_SearchInventoryEntry));
			Binding.FCE_Inventory_Object_GetParent = (Binding._FCE_Inventory_Object_GetParent)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_GetParent"), typeof(Binding._FCE_Inventory_Object_GetParent));
			Binding.FCE_Inventory_Object_SetParent = (Binding._FCE_Inventory_Object_SetParent)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_SetParent"), typeof(Binding._FCE_Inventory_Object_SetParent));
			Binding.FCE_Inventory_Object_IsDirectory = (Binding._FCE_Inventory_Object_IsDirectory)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_IsDirectory"), typeof(Binding._FCE_Inventory_Object_IsDirectory));
			Binding.FCE_Inventory_Object_GetChildCount = (Binding._FCE_Inventory_Object_GetChildCount)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_GetChildCount"), typeof(Binding._FCE_Inventory_Object_GetChildCount));
			Binding.FCE_Inventory_Object_GetChild = (Binding._FCE_Inventory_Object_GetChild)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_GetChild"), typeof(Binding._FCE_Inventory_Object_GetChild));
			Binding.FCE_Inventory_Object_GetId = (Binding._FCE_Inventory_Object_GetId)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_GetId"), typeof(Binding._FCE_Inventory_Object_GetId));
			Binding.FCE_Inventory_Object_GetIdString = (Binding._FCE_Inventory_Object_GetIdString)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_GetIdString"), typeof(Binding._FCE_Inventory_Object_GetIdString));
			Binding.FCE_Inventory_Object_SetIdString = (Binding._FCE_Inventory_Object_SetIdString)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_SetIdString"), typeof(Binding._FCE_Inventory_Object_SetIdString));
			Binding.FCE_Inventory_Object_GetDisplay = (Binding._FCE_Inventory_Object_GetDisplay)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_GetDisplay"), typeof(Binding._FCE_Inventory_Object_GetDisplay));
			Binding.FCE_Inventory_Object_SetDisplay = (Binding._FCE_Inventory_Object_SetDisplay)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_SetDisplay"), typeof(Binding._FCE_Inventory_Object_SetDisplay));
			Binding.FCE_Inventory_Object_GetTags = (Binding._FCE_Inventory_Object_GetTags)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_GetTags"), typeof(Binding._FCE_Inventory_Object_GetTags));
			Binding.FCE_Inventory_Object_SetTags = (Binding._FCE_Inventory_Object_SetTags)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_SetTags"), typeof(Binding._FCE_Inventory_Object_SetTags));
			Binding.FCE_Inventory_Object_GetSourceType = (Binding._FCE_Inventory_Object_GetSourceType)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_GetSourceType"), typeof(Binding._FCE_Inventory_Object_GetSourceType));
			Binding.FCE_Inventory_Object_GetBMin = (Binding._FCE_Inventory_Object_GetBMin)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_GetBMin"), typeof(Binding._FCE_Inventory_Object_GetBMin));
			Binding.FCE_Inventory_Object_GetBMax = (Binding._FCE_Inventory_Object_GetBMax)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_GetBMax"), typeof(Binding._FCE_Inventory_Object_GetBMax));
			Binding.FCE_Inventory_Object_GetSize = (Binding._FCE_Inventory_Object_GetSize)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_GetSize"), typeof(Binding._FCE_Inventory_Object_GetSize));
			Binding.FCE_Inventory_Object_IsAI = (Binding._FCE_Inventory_Object_IsAI)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_IsAI"), typeof(Binding._FCE_Inventory_Object_IsAI));
			Binding.FCE_Inventory_Object_IsAutoOrientation = (Binding._FCE_Inventory_Object_IsAutoOrientation)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_IsAutoOrientation"), typeof(Binding._FCE_Inventory_Object_IsAutoOrientation));
			Binding.FCE_Inventory_Object_GetZOffset = (Binding._FCE_Inventory_Object_GetZOffset)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_GetZOffset"), typeof(Binding._FCE_Inventory_Object_GetZOffset));
			Binding.FCE_Inventory_Object_SetZOffset = (Binding._FCE_Inventory_Object_SetZOffset)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_SetZOffset"), typeof(Binding._FCE_Inventory_Object_SetZOffset));
			Binding.FCE_Inventory_Object_SaveChanges = (Binding._FCE_Inventory_Object_SaveChanges)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_SaveChanges"), typeof(Binding._FCE_Inventory_Object_SaveChanges));
			Binding.FCE_Inventory_Object_ClearPivots = (Binding._FCE_Inventory_Object_ClearPivots)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_ClearPivots"), typeof(Binding._FCE_Inventory_Object_ClearPivots));
			Binding.FCE_Inventory_Object_AddPivot = (Binding._FCE_Inventory_Object_AddPivot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_AddPivot"), typeof(Binding._FCE_Inventory_Object_AddPivot));
			Binding.FCE_Inventory_Object_SetPivot = (Binding._FCE_Inventory_Object_SetPivot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_SetPivot"), typeof(Binding._FCE_Inventory_Object_SetPivot));
			Binding.FCE_Inventory_Object_SetPivots = (Binding._FCE_Inventory_Object_SetPivots)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_SetPivots"), typeof(Binding._FCE_Inventory_Object_SetPivots));
			Binding.FCE_Inventory_Object_IsAutoPivot = (Binding._FCE_Inventory_Object_IsAutoPivot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_IsAutoPivot"), typeof(Binding._FCE_Inventory_Object_IsAutoPivot));
			Binding.FCE_Inventory_Object_SetAutoPivot = (Binding._FCE_Inventory_Object_SetAutoPivot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_SetAutoPivot"), typeof(Binding._FCE_Inventory_Object_SetAutoPivot));
			Binding.FCE_Inventory_Object_GetPivotCount = (Binding._FCE_Inventory_Object_GetPivotCount)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Object_GetPivotCount"), typeof(Binding._FCE_Inventory_Object_GetPivotCount));
			Binding.FCE_Inventory_Collection_GetRoot = (Binding._FCE_Inventory_Collection_GetRoot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Collection_GetRoot"), typeof(Binding._FCE_Inventory_Collection_GetRoot));
			Binding.FCE_Inventory_Collection_GetParent = (Binding._FCE_Inventory_Collection_GetParent)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Collection_GetParent"), typeof(Binding._FCE_Inventory_Collection_GetParent));
			Binding.FCE_Inventory_Collection_GetChildCount = (Binding._FCE_Inventory_Collection_GetChildCount)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Collection_GetChildCount"), typeof(Binding._FCE_Inventory_Collection_GetChildCount));
			Binding.FCE_Inventory_Collection_GetChild = (Binding._FCE_Inventory_Collection_GetChild)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Collection_GetChild"), typeof(Binding._FCE_Inventory_Collection_GetChild));
			Binding.FCE_Inventory_Collection_GetDisplay = (Binding._FCE_Inventory_Collection_GetDisplay)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Collection_GetDisplay"), typeof(Binding._FCE_Inventory_Collection_GetDisplay));
			Binding.FCE_Inventory_Collection_GetBurnProfile = (Binding._FCE_Inventory_Collection_GetBurnProfile)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Collection_GetBurnProfile"), typeof(Binding._FCE_Inventory_Collection_GetBurnProfile));
			Binding.FCE_Inventory_Texture_GetRoot = (Binding._FCE_Inventory_Texture_GetRoot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Texture_GetRoot"), typeof(Binding._FCE_Inventory_Texture_GetRoot));
			Binding.FCE_Inventory_Texture_GetParent = (Binding._FCE_Inventory_Texture_GetParent)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Texture_GetParent"), typeof(Binding._FCE_Inventory_Texture_GetParent));
			Binding.FCE_Inventory_Texture_GetChildCount = (Binding._FCE_Inventory_Texture_GetChildCount)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Texture_GetChildCount"), typeof(Binding._FCE_Inventory_Texture_GetChildCount));
			Binding.FCE_Inventory_Texture_GetChild = (Binding._FCE_Inventory_Texture_GetChild)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Texture_GetChild"), typeof(Binding._FCE_Inventory_Texture_GetChild));
			Binding.FCE_Inventory_Texture_GetDisplay = (Binding._FCE_Inventory_Texture_GetDisplay)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Texture_GetDisplay"), typeof(Binding._FCE_Inventory_Texture_GetDisplay));
			Binding.FCE_Inventory_Water_GetRoot = (Binding._FCE_Inventory_Water_GetRoot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Water_GetRoot"), typeof(Binding._FCE_Inventory_Water_GetRoot));
			Binding.FCE_Inventory_Water_GetParent = (Binding._FCE_Inventory_Water_GetParent)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Water_GetParent"), typeof(Binding._FCE_Inventory_Water_GetParent));
			Binding.FCE_Inventory_Water_GetChildCount = (Binding._FCE_Inventory_Water_GetChildCount)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Water_GetChildCount"), typeof(Binding._FCE_Inventory_Water_GetChildCount));
			Binding.FCE_Inventory_Water_GetChild = (Binding._FCE_Inventory_Water_GetChild)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Water_GetChild"), typeof(Binding._FCE_Inventory_Water_GetChild));
			Binding.FCE_Inventory_Water_GetDisplay = (Binding._FCE_Inventory_Water_GetDisplay)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Water_GetDisplay"), typeof(Binding._FCE_Inventory_Water_GetDisplay));
			Binding.FCE_Inventory_Water_GetFromId = (Binding._FCE_Inventory_Water_GetFromId)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Water_GetFromId"), typeof(Binding._FCE_Inventory_Water_GetFromId));
			Binding.FCE_Inventory_Spline_GetRoot = (Binding._FCE_Inventory_Spline_GetRoot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Spline_GetRoot"), typeof(Binding._FCE_Inventory_Spline_GetRoot));
			Binding.FCE_Inventory_Spline_GetParent = (Binding._FCE_Inventory_Spline_GetParent)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Spline_GetParent"), typeof(Binding._FCE_Inventory_Spline_GetParent));
			Binding.FCE_Inventory_Spline_GetChildCount = (Binding._FCE_Inventory_Spline_GetChildCount)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Spline_GetChildCount"), typeof(Binding._FCE_Inventory_Spline_GetChildCount));
			Binding.FCE_Inventory_Spline_GetChild = (Binding._FCE_Inventory_Spline_GetChild)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Spline_GetChild"), typeof(Binding._FCE_Inventory_Spline_GetChild));
			Binding.FCE_Inventory_Spline_GetDisplay = (Binding._FCE_Inventory_Spline_GetDisplay)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Spline_GetDisplay"), typeof(Binding._FCE_Inventory_Spline_GetDisplay));
			Binding.FCE_Inventory_Spline_GetDefaultWidth = (Binding._FCE_Inventory_Spline_GetDefaultWidth)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Spline_GetDefaultWidth"), typeof(Binding._FCE_Inventory_Spline_GetDefaultWidth));
			Binding.FCE_Inventory_Wilderness_GetRoot = (Binding._FCE_Inventory_Wilderness_GetRoot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Wilderness_GetRoot"), typeof(Binding._FCE_Inventory_Wilderness_GetRoot));
			Binding.FCE_Inventory_Wilderness_GetParent = (Binding._FCE_Inventory_Wilderness_GetParent)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Wilderness_GetParent"), typeof(Binding._FCE_Inventory_Wilderness_GetParent));
			Binding.FCE_Inventory_Wilderness_GetChildCount = (Binding._FCE_Inventory_Wilderness_GetChildCount)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Wilderness_GetChildCount"), typeof(Binding._FCE_Inventory_Wilderness_GetChildCount));
			Binding.FCE_Inventory_Wilderness_GetChild = (Binding._FCE_Inventory_Wilderness_GetChild)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Wilderness_GetChild"), typeof(Binding._FCE_Inventory_Wilderness_GetChild));
			Binding.FCE_Inventory_Wilderness_GetDisplay = (Binding._FCE_Inventory_Wilderness_GetDisplay)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Inventory_Wilderness_GetDisplay"), typeof(Binding._FCE_Inventory_Wilderness_GetDisplay));
			Binding.FCE_Object_Create_FromEntry = (Binding._FCE_Object_Create_FromEntry)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_Create_FromEntry"), typeof(Binding._FCE_Object_Create_FromEntry));
			Binding.FCE_Object_Destroy = (Binding._FCE_Object_Destroy)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_Destroy"), typeof(Binding._FCE_Object_Destroy));
			Binding.FCE_Object_AddRef = (Binding._FCE_Object_AddRef)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_AddRef"), typeof(Binding._FCE_Object_AddRef));
			Binding.FCE_Object_Release = (Binding._FCE_Object_Release)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_Release"), typeof(Binding._FCE_Object_Release));
			Binding.FCE_Object_Clone = (Binding._FCE_Object_Clone)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_Clone"), typeof(Binding._FCE_Object_Clone));
			Binding.FCE_Object_IsLoaded = (Binding._FCE_Object_IsLoaded)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_IsLoaded"), typeof(Binding._FCE_Object_IsLoaded));
			Binding.FCE_Object_GetEntry = (Binding._FCE_Object_GetEntry)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_GetEntry"), typeof(Binding._FCE_Object_GetEntry));
			Binding.FCE_Object_GetPos = (Binding._FCE_Object_GetPos)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_GetPos"), typeof(Binding._FCE_Object_GetPos));
			Binding.FCE_Object_SetPos = (Binding._FCE_Object_SetPos)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_SetPos"), typeof(Binding._FCE_Object_SetPos));
			Binding.FCE_Object_GetAngles = (Binding._FCE_Object_GetAngles)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_GetAngles"), typeof(Binding._FCE_Object_GetAngles));
			Binding.FCE_Object_SetAngles = (Binding._FCE_Object_SetAngles)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_SetAngles"), typeof(Binding._FCE_Object_SetAngles));
			Binding.FCE_Object_GetBounds = (Binding._FCE_Object_GetBounds)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_GetBounds"), typeof(Binding._FCE_Object_GetBounds));
			Binding.FCE_Object_IsVisible = (Binding._FCE_Object_IsVisible)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_IsVisible"), typeof(Binding._FCE_Object_IsVisible));
			Binding.FCE_Object_SetVisible = (Binding._FCE_Object_SetVisible)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_SetVisible"), typeof(Binding._FCE_Object_SetVisible));
			Binding.FCE_Object_SetHighlight = (Binding._FCE_Object_SetHighlight)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_SetHighlight"), typeof(Binding._FCE_Object_SetHighlight));
			Binding.FCE_Object_SetFreeze = (Binding._FCE_Object_SetFreeze)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_SetFreeze"), typeof(Binding._FCE_Object_SetFreeze));
			Binding.FCE_Object_DropToGround = (Binding._FCE_Object_DropToGround)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_DropToGround"), typeof(Binding._FCE_Object_DropToGround));
			Binding.FCE_Object_ComputeAutoOrientation = (Binding._FCE_Object_ComputeAutoOrientation)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_ComputeAutoOrientation"), typeof(Binding._FCE_Object_ComputeAutoOrientation));
			Binding.FCE_Object_GetPivot = (Binding._FCE_Object_GetPivot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_GetPivot"), typeof(Binding._FCE_Object_GetPivot));
			Binding.FCE_Object_GetClosestPivot = (Binding._FCE_Object_GetClosestPivot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_GetClosestPivot"), typeof(Binding._FCE_Object_GetClosestPivot));
			Binding.FCE_Object_SnapToClosestObject = (Binding._FCE_Object_SnapToClosestObject)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_SnapToClosestObject"), typeof(Binding._FCE_Object_SnapToClosestObject));
			Binding.FCE_Object_GetPhysEntities = (Binding._FCE_Object_GetPhysEntities)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Object_GetPhysEntities"), typeof(Binding._FCE_Object_GetPhysEntities));
			Binding.FCE_ObjectManager_GetObjectFromScreenPoint = (Binding._FCE_ObjectManager_GetObjectFromScreenPoint)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectManager_GetObjectFromScreenPoint"), typeof(Binding._FCE_ObjectManager_GetObjectFromScreenPoint));
			Binding.FCE_ObjectManager_GetObjectsFromScreenRect = (Binding._FCE_ObjectManager_GetObjectsFromScreenRect)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectManager_GetObjectsFromScreenRect"), typeof(Binding._FCE_ObjectManager_GetObjectsFromScreenRect));
			Binding.FCE_ObjectManager_GetObjectsFromMagicWand = (Binding._FCE_ObjectManager_GetObjectsFromMagicWand)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectManager_GetObjectsFromMagicWand"), typeof(Binding._FCE_ObjectManager_GetObjectsFromMagicWand));
			Binding.FCE_ObjectManager_SetViewportPickingPos = (Binding._FCE_ObjectManager_SetViewportPickingPos)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectManager_SetViewportPickingPos"), typeof(Binding._FCE_ObjectManager_SetViewportPickingPos));
			Binding.FCE_ObjectManager_UnfreezeObjects = (Binding._FCE_ObjectManager_UnfreezeObjects)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectManager_UnfreezeObjects"), typeof(Binding._FCE_ObjectManager_UnfreezeObjects));
			Binding.FCE_ObjectManager_GetObjectCount = (Binding._FCE_ObjectManager_GetObjectCount)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectManager_GetObjectCount"), typeof(Binding._FCE_ObjectManager_GetObjectCount));
			Binding.FCE_ObjectManager_GetObject = (Binding._FCE_ObjectManager_GetObject)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectManager_GetObject"), typeof(Binding._FCE_ObjectManager_GetObject));
			Binding.FCE_ObjectManager_OnObjectAddedFromTool = (Binding._FCE_ObjectManager_OnObjectAddedFromTool)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectManager_OnObjectAddedFromTool"), typeof(Binding._FCE_ObjectManager_OnObjectAddedFromTool));
			Binding.FCE_ObjectSelection_Create = (Binding._FCE_ObjectSelection_Create)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_Create"), typeof(Binding._FCE_ObjectSelection_Create));
			Binding.FCE_ObjectSelection_Destroy = (Binding._FCE_ObjectSelection_Destroy)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_Destroy"), typeof(Binding._FCE_ObjectSelection_Destroy));
			Binding.FCE_ObjectSelection_Clear = (Binding._FCE_ObjectSelection_Clear)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_Clear"), typeof(Binding._FCE_ObjectSelection_Clear));
			Binding.FCE_ObjectSelection_Add = (Binding._FCE_ObjectSelection_Add)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_Add"), typeof(Binding._FCE_ObjectSelection_Add));
			Binding.FCE_ObjectSelection_AddSelection = (Binding._FCE_ObjectSelection_AddSelection)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_AddSelection"), typeof(Binding._FCE_ObjectSelection_AddSelection));
			Binding.FCE_ObjectSelection_ToggleObject = (Binding._FCE_ObjectSelection_ToggleObject)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_ToggleObject"), typeof(Binding._FCE_ObjectSelection_ToggleObject));
			Binding.FCE_ObjectSelection_ToggleSelection = (Binding._FCE_ObjectSelection_ToggleSelection)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_ToggleSelection"), typeof(Binding._FCE_ObjectSelection_ToggleSelection));
			Binding.FCE_ObjectSelection_RemoveObject = (Binding._FCE_ObjectSelection_RemoveObject)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_RemoveObject"), typeof(Binding._FCE_ObjectSelection_RemoveObject));
			Binding.FCE_ObjectSelection_RemoveSelection = (Binding._FCE_ObjectSelection_RemoveSelection)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_RemoveSelection"), typeof(Binding._FCE_ObjectSelection_RemoveSelection));
			Binding.FCE_ObjectSelection_GetCount = (Binding._FCE_ObjectSelection_GetCount)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_GetCount"), typeof(Binding._FCE_ObjectSelection_GetCount));
			Binding.FCE_ObjectSelection_Get = (Binding._FCE_ObjectSelection_Get)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_Get"), typeof(Binding._FCE_ObjectSelection_Get));
			Binding.FCE_ObjectSelection_GetValidObjects = (Binding._FCE_ObjectSelection_GetValidObjects)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_GetValidObjects"), typeof(Binding._FCE_ObjectSelection_GetValidObjects));
			Binding.FCE_ObjectSelection_RemoveInvalidObjects = (Binding._FCE_ObjectSelection_RemoveInvalidObjects)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_RemoveInvalidObjects"), typeof(Binding._FCE_ObjectSelection_RemoveInvalidObjects));
			Binding.FCE_ObjectSelection_Clone = (Binding._FCE_ObjectSelection_Clone)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_Clone"), typeof(Binding._FCE_ObjectSelection_Clone));
			Binding.FCE_ObjectSelection_Delete = (Binding._FCE_ObjectSelection_Delete)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_Delete"), typeof(Binding._FCE_ObjectSelection_Delete));
			Binding.FCE_ObjectSelection_GetCenter = (Binding._FCE_ObjectSelection_GetCenter)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_GetCenter"), typeof(Binding._FCE_ObjectSelection_GetCenter));
			Binding.FCE_ObjectSelection_SetCenter = (Binding._FCE_ObjectSelection_SetCenter)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_SetCenter"), typeof(Binding._FCE_ObjectSelection_SetCenter));
			Binding.FCE_ObjectSelection_GetComputeCenter = (Binding._FCE_ObjectSelection_GetComputeCenter)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_GetComputeCenter"), typeof(Binding._FCE_ObjectSelection_GetComputeCenter));
			Binding.FCE_ObjectSelection_ComputeCenter = (Binding._FCE_ObjectSelection_ComputeCenter)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_ComputeCenter"), typeof(Binding._FCE_ObjectSelection_ComputeCenter));
			Binding.FCE_ObjectSelection_GetWorldBounds = (Binding._FCE_ObjectSelection_GetWorldBounds)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_GetWorldBounds"), typeof(Binding._FCE_ObjectSelection_GetWorldBounds));
			Binding.FCE_ObjectSelection_MoveTo = (Binding._FCE_ObjectSelection_MoveTo)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_MoveTo"), typeof(Binding._FCE_ObjectSelection_MoveTo));
			Binding.FCE_ObjectSelection_Rotate = (Binding._FCE_ObjectSelection_Rotate)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_Rotate"), typeof(Binding._FCE_ObjectSelection_Rotate));
			Binding.FCE_ObjectSelection_Rotate3 = (Binding._FCE_ObjectSelection_Rotate3)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_Rotate3"), typeof(Binding._FCE_ObjectSelection_Rotate3));
			Binding.FCE_ObjectSelection_RotateCenter = (Binding._FCE_ObjectSelection_RotateCenter)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_RotateCenter"), typeof(Binding._FCE_ObjectSelection_RotateCenter));
			Binding.FCE_ObjectSelection_RotateLocal3 = (Binding._FCE_ObjectSelection_RotateLocal3)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_RotateLocal3"), typeof(Binding._FCE_ObjectSelection_RotateLocal3));
			Binding.FCE_ObjectSelection_RotateGimbal = (Binding._FCE_ObjectSelection_RotateGimbal)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_RotateGimbal"), typeof(Binding._FCE_ObjectSelection_RotateGimbal));
			Binding.FCE_ObjectSelection_DropToGround = (Binding._FCE_ObjectSelection_DropToGround)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_DropToGround"), typeof(Binding._FCE_ObjectSelection_DropToGround));
			Binding.FCE_ObjectSelection_SnapToPivot = (Binding._FCE_ObjectSelection_SnapToPivot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_SnapToPivot"), typeof(Binding._FCE_ObjectSelection_SnapToPivot));
			Binding.FCE_ObjectSelection_SnapToClosestObjects = (Binding._FCE_ObjectSelection_SnapToClosestObjects)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_SnapToClosestObjects"), typeof(Binding._FCE_ObjectSelection_SnapToClosestObjects));
			Binding.FCE_ObjectSelection_GetPhysEntities = (Binding._FCE_ObjectSelection_GetPhysEntities)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_GetPhysEntities"), typeof(Binding._FCE_ObjectSelection_GetPhysEntities));
			Binding.FCE_ObjectSelection_ClearState = (Binding._FCE_ObjectSelection_ClearState)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_ClearState"), typeof(Binding._FCE_ObjectSelection_ClearState));
			Binding.FCE_ObjectSelection_LoadState = (Binding._FCE_ObjectSelection_LoadState)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_LoadState"), typeof(Binding._FCE_ObjectSelection_LoadState));
			Binding.FCE_ObjectSelection_SaveState = (Binding._FCE_ObjectSelection_SaveState)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_SaveState"), typeof(Binding._FCE_ObjectSelection_SaveState));
			Binding.FCE_ObjectSelection_LoadFromXml = (Binding._FCE_ObjectSelection_LoadFromXml)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_LoadFromXml"), typeof(Binding._FCE_ObjectSelection_LoadFromXml));
			Binding.FCE_ObjectSelection_SaveToXml = (Binding._FCE_ObjectSelection_SaveToXml)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectSelection_SaveToXml"), typeof(Binding._FCE_ObjectSelection_SaveToXml));
			Binding.FCE_ObjectViewer_SetActive = (Binding._FCE_ObjectViewer_SetActive)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectViewer_SetActive"), typeof(Binding._FCE_ObjectViewer_SetActive));
			Binding.FCE_ObjectViewer_SetObject = (Binding._FCE_ObjectViewer_SetObject)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectViewer_SetObject"), typeof(Binding._FCE_ObjectViewer_SetObject));
			Binding.FCE_ObjectLegoBox_SetActive = (Binding._FCE_ObjectLegoBox_SetActive)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectLegoBox_SetActive"), typeof(Binding._FCE_ObjectLegoBox_SetActive));
			Binding.FCE_ObjectLegoBox_AddEntry = (Binding._FCE_ObjectLegoBox_AddEntry)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectLegoBox_AddEntry"), typeof(Binding._FCE_ObjectLegoBox_AddEntry));
			Binding.FCE_ObjectLegoBox_ClearEntries = (Binding._FCE_ObjectLegoBox_ClearEntries)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectLegoBox_ClearEntries"), typeof(Binding._FCE_ObjectLegoBox_ClearEntries));
			Binding.FCE_ObjectLegoBox_CreateLegoBox = (Binding._FCE_ObjectLegoBox_CreateLegoBox)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectLegoBox_CreateLegoBox"), typeof(Binding._FCE_ObjectLegoBox_CreateLegoBox));
			Binding.FCE_ObjectLegoBox_GetEntryFromScreenPoint = (Binding._FCE_ObjectLegoBox_GetEntryFromScreenPoint)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectLegoBox_GetEntryFromScreenPoint"), typeof(Binding._FCE_ObjectLegoBox_GetEntryFromScreenPoint));
			Binding.FCE_ObjectRenderer_Clear = (Binding._FCE_ObjectRenderer_Clear)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectRenderer_Clear"), typeof(Binding._FCE_ObjectRenderer_Clear));
			Binding.FCE_ObjectRenderer_SetActive = (Binding._FCE_ObjectRenderer_SetActive)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectRenderer_SetActive"), typeof(Binding._FCE_ObjectRenderer_SetActive));
			Binding.FCE_ObjectRenderer_RenderObject = (Binding._FCE_ObjectRenderer_RenderObject)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectRenderer_RenderObject"), typeof(Binding._FCE_ObjectRenderer_RenderObject));
			Binding.FCE_ObjectRenderer_IsSnapshotReady = (Binding._FCE_ObjectRenderer_IsSnapshotReady)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectRenderer_IsSnapshotReady"), typeof(Binding._FCE_ObjectRenderer_IsSnapshotReady));
			Binding.FCE_ObjectRenderer_GetSnapshot = (Binding._FCE_ObjectRenderer_GetSnapshot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectRenderer_GetSnapshot"), typeof(Binding._FCE_ObjectRenderer_GetSnapshot));
			Binding.FCE_ObjectRenderer_GetSnapshotEntry = (Binding._FCE_ObjectRenderer_GetSnapshotEntry)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectRenderer_GetSnapshotEntry"), typeof(Binding._FCE_ObjectRenderer_GetSnapshotEntry));
			Binding.FCE_ObjectRenderer_ClearSnapshot = (Binding._FCE_ObjectRenderer_ClearSnapshot)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectRenderer_ClearSnapshot"), typeof(Binding._FCE_ObjectRenderer_ClearSnapshot));
			Binding.FCE_ObjectRenderer_WritePNG = (Binding._FCE_ObjectRenderer_WritePNG)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectRenderer_WritePNG"), typeof(Binding._FCE_ObjectRenderer_WritePNG));
			Binding.FCE_ObjectRenderer_GenerateThumbnails = (Binding._FCE_ObjectRenderer_GenerateThumbnails)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ObjectRenderer_GenerateThumbnails"), typeof(Binding._FCE_ObjectRenderer_GenerateThumbnails));
			Binding.FCE_CollectionRenderer_GenerateThumbnails = (Binding._FCE_CollectionRenderer_GenerateThumbnails)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_CollectionRenderer_GenerateThumbnails"), typeof(Binding._FCE_CollectionRenderer_GenerateThumbnails));
			Binding.FCE_Gizmo_Create = (Binding._FCE_Gizmo_Create)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Gizmo_Create"), typeof(Binding._FCE_Gizmo_Create));
			Binding.FCE_Gizmo_Destroy = (Binding._FCE_Gizmo_Destroy)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Gizmo_Destroy"), typeof(Binding._FCE_Gizmo_Destroy));
			Binding.FCE_Gizmo_GetPos = (Binding._FCE_Gizmo_GetPos)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Gizmo_GetPos"), typeof(Binding._FCE_Gizmo_GetPos));
			Binding.FCE_Gizmo_SetPos = (Binding._FCE_Gizmo_SetPos)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Gizmo_SetPos"), typeof(Binding._FCE_Gizmo_SetPos));
			Binding.FCE_Gizmo_GetAxis = (Binding._FCE_Gizmo_GetAxis)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Gizmo_GetAxis"), typeof(Binding._FCE_Gizmo_GetAxis));
			Binding.FCE_Gizmo_SetAxis = (Binding._FCE_Gizmo_SetAxis)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Gizmo_SetAxis"), typeof(Binding._FCE_Gizmo_SetAxis));
			Binding.FCE_Gizmo_GetActive = (Binding._FCE_Gizmo_GetActive)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Gizmo_GetActive"), typeof(Binding._FCE_Gizmo_GetActive));
			Binding.FCE_Gizmo_SetActive = (Binding._FCE_Gizmo_SetActive)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Gizmo_SetActive"), typeof(Binding._FCE_Gizmo_SetActive));
			Binding.FCE_Gizmo_Redraw = (Binding._FCE_Gizmo_Redraw)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Gizmo_Redraw"), typeof(Binding._FCE_Gizmo_Redraw));
			Binding.FCE_Gizmo_Hide = (Binding._FCE_Gizmo_Hide)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Gizmo_Hide"), typeof(Binding._FCE_Gizmo_Hide));
			Binding.FCE_Gizmo_IsRotationMode = (Binding._FCE_Gizmo_IsRotationMode)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Gizmo_IsRotationMode"), typeof(Binding._FCE_Gizmo_IsRotationMode));
			Binding.FCE_Gizmo_SetRotationMode = (Binding._FCE_Gizmo_SetRotationMode)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Gizmo_SetRotationMode"), typeof(Binding._FCE_Gizmo_SetRotationMode));
			Binding.FCE_Gizmo_HitTest = (Binding._FCE_Gizmo_HitTest)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Gizmo_HitTest"), typeof(Binding._FCE_Gizmo_HitTest));
			Binding.FCE_CollectionManager_GetCollectionEntryFromId = (Binding._FCE_CollectionManager_GetCollectionEntryFromId)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_CollectionManager_GetCollectionEntryFromId"), typeof(Binding._FCE_CollectionManager_GetCollectionEntryFromId));
			Binding.FCE_CollectionManager_AssignCollectionId = (Binding._FCE_CollectionManager_AssignCollectionId)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_CollectionManager_AssignCollectionId"), typeof(Binding._FCE_CollectionManager_AssignCollectionId));
			Binding.FCE_CollectionManager_WriteMaskCircle = (Binding._FCE_CollectionManager_WriteMaskCircle)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_CollectionManager_WriteMaskCircle"), typeof(Binding._FCE_CollectionManager_WriteMaskCircle));
			Binding.FCE_CollectionManager_WriteMaskSquare = (Binding._FCE_CollectionManager_WriteMaskSquare)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_CollectionManager_WriteMaskSquare"), typeof(Binding._FCE_CollectionManager_WriteMaskSquare));
			Binding.FCE_CollectionManager_ClearMaskId = (Binding._FCE_CollectionManager_ClearMaskId)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_CollectionManager_ClearMaskId"), typeof(Binding._FCE_CollectionManager_ClearMaskId));
			Binding.FCE_CollectionManager_UpdateCollections = (Binding._FCE_CollectionManager_UpdateCollections)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_CollectionManager_UpdateCollections"), typeof(Binding._FCE_CollectionManager_UpdateCollections));
			Binding.FCE_Collection_Paint = (Binding._FCE_Collection_Paint)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Collection_Paint"), typeof(Binding._FCE_Collection_Paint));
			Binding.FCE_Collection_Paint_End = (Binding._FCE_Collection_Paint_End)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Collection_Paint_End"), typeof(Binding._FCE_Collection_Paint_End));
			Binding.FCE_Texture_Paint = (Binding._FCE_Texture_Paint)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Texture_Paint"), typeof(Binding._FCE_Texture_Paint));
			Binding.FCE_Texture_Paint_End = (Binding._FCE_Texture_Paint_End)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Texture_Paint_End"), typeof(Binding._FCE_Texture_Paint_End));
			Binding.FCE_Texture_PaintConstraints_Begin = (Binding._FCE_Texture_PaintConstraints_Begin)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Texture_PaintConstraints_Begin"), typeof(Binding._FCE_Texture_PaintConstraints_Begin));
			Binding.FCE_Texture_PaintConstraints = (Binding._FCE_Texture_PaintConstraints)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Texture_PaintConstraints"), typeof(Binding._FCE_Texture_PaintConstraints));
			Binding.FCE_Texture_PaintConstraints_End = (Binding._FCE_Texture_PaintConstraints_End)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Texture_PaintConstraints_End"), typeof(Binding._FCE_Texture_PaintConstraints_End));
			Binding.FCE_TerrainManager_GetHeightAt = (Binding._FCE_TerrainManager_GetHeightAt)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_TerrainManager_GetHeightAt"), typeof(Binding._FCE_TerrainManager_GetHeightAt));
			Binding.FCE_TerrainManager_GetHeightAtWithWater = (Binding._FCE_TerrainManager_GetHeightAtWithWater)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_TerrainManager_GetHeightAtWithWater"), typeof(Binding._FCE_TerrainManager_GetHeightAtWithWater));
			Binding.FCE_TerrainManager_GetTextureEntryFromId = (Binding._FCE_TerrainManager_GetTextureEntryFromId)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_TerrainManager_GetTextureEntryFromId"), typeof(Binding._FCE_TerrainManager_GetTextureEntryFromId));
			Binding.FCE_TerrainManager_AssignTextureId = (Binding._FCE_TerrainManager_AssignTextureId)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_TerrainManager_AssignTextureId"), typeof(Binding._FCE_TerrainManager_AssignTextureId));
			Binding.FCE_TerrainManager_ClearTextureId = (Binding._FCE_TerrainManager_ClearTextureId)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_TerrainManager_ClearTextureId"), typeof(Binding._FCE_TerrainManager_ClearTextureId));
			Binding.FCE_TerrainManager_GetGlobalWaterLevel = (Binding._FCE_TerrainManager_GetGlobalWaterLevel)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_TerrainManager_GetGlobalWaterLevel"), typeof(Binding._FCE_TerrainManager_GetGlobalWaterLevel));
			Binding.FCE_TerrainManager_SetGlobalWaterLevel = (Binding._FCE_TerrainManager_SetGlobalWaterLevel)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_TerrainManager_SetGlobalWaterLevel"), typeof(Binding._FCE_TerrainManager_SetGlobalWaterLevel));
			Binding.FCE_TerrainManager_SetWaterLevelSector = (Binding._FCE_TerrainManager_SetWaterLevelSector)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_TerrainManager_SetWaterLevelSector"), typeof(Binding._FCE_TerrainManager_SetWaterLevelSector));
			Binding.FCE_TerrainManager_UpdateWaterLevel = (Binding._FCE_TerrainManager_UpdateWaterLevel)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_TerrainManager_UpdateWaterLevel"), typeof(Binding._FCE_TerrainManager_UpdateWaterLevel));
			Binding.FCE_UndoManager_GetUndoCount = (Binding._FCE_UndoManager_GetUndoCount)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_UndoManager_GetUndoCount"), typeof(Binding._FCE_UndoManager_GetUndoCount));
			Binding.FCE_UndoManager_GetRedoCount = (Binding._FCE_UndoManager_GetRedoCount)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_UndoManager_GetRedoCount"), typeof(Binding._FCE_UndoManager_GetRedoCount));
			Binding.FCE_UndoManager_Undo = (Binding._FCE_UndoManager_Undo)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_UndoManager_Undo"), typeof(Binding._FCE_UndoManager_Undo));
			Binding.FCE_UndoManager_Redo = (Binding._FCE_UndoManager_Redo)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_UndoManager_Redo"), typeof(Binding._FCE_UndoManager_Redo));
			Binding.FCE_UndoManager_RecordUndo = (Binding._FCE_UndoManager_RecordUndo)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_UndoManager_RecordUndo"), typeof(Binding._FCE_UndoManager_RecordUndo));
			Binding.FCE_UndoManager_CommitUndo = (Binding._FCE_UndoManager_CommitUndo)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_UndoManager_CommitUndo"), typeof(Binding._FCE_UndoManager_CommitUndo));
			Binding.FCE_Validation_GameMode = (Binding._FCE_Validation_GameMode)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Validation_GameMode"), typeof(Binding._FCE_Validation_GameMode));
			Binding.FCE_Validation_Game = (Binding._FCE_Validation_Game)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Validation_Game"), typeof(Binding._FCE_Validation_Game));
			Binding.FCE_ValidationReport_Destroy = (Binding._FCE_ValidationReport_Destroy)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ValidationReport_Destroy"), typeof(Binding._FCE_ValidationReport_Destroy));
			Binding.FCE_ValidationReport_GetCount = (Binding._FCE_ValidationReport_GetCount)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ValidationReport_GetCount"), typeof(Binding._FCE_ValidationReport_GetCount));
			Binding.FCE_ValidationReport_GetRecord = (Binding._FCE_ValidationReport_GetRecord)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ValidationReport_GetRecord"), typeof(Binding._FCE_ValidationReport_GetRecord));
			Binding.FCE_ValidationRecord_GetSeverity = (Binding._FCE_ValidationRecord_GetSeverity)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ValidationRecord_GetSeverity"), typeof(Binding._FCE_ValidationRecord_GetSeverity));
			Binding.FCE_ValidationRecord_GetFlags = (Binding._FCE_ValidationRecord_GetFlags)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ValidationRecord_GetFlags"), typeof(Binding._FCE_ValidationRecord_GetFlags));
			Binding.FCE_ValidationRecord_GetMessage = (Binding._FCE_ValidationRecord_GetMessage)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ValidationRecord_GetMessage"), typeof(Binding._FCE_ValidationRecord_GetMessage));
			Binding.FCE_ValidationRecord_GetObject = (Binding._FCE_ValidationRecord_GetObject)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ValidationRecord_GetObject"), typeof(Binding._FCE_ValidationRecord_GetObject));
			Binding.FCE_Snapshot_Create = (Binding._FCE_Snapshot_Create)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Snapshot_Create"), typeof(Binding._FCE_Snapshot_Create));
			Binding.FCE_Snapshot_Destroy = (Binding._FCE_Snapshot_Destroy)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Snapshot_Destroy"), typeof(Binding._FCE_Snapshot_Destroy));
			Binding.FCE_Snapshot_GetData = (Binding._FCE_Snapshot_GetData)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Snapshot_GetData"), typeof(Binding._FCE_Snapshot_GetData));
			Binding.FCE_Spline_Create = (Binding._FCE_Spline_Create)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Spline_Create"), typeof(Binding._FCE_Spline_Create));
			Binding.FCE_Spline_Destroy = (Binding._FCE_Spline_Destroy)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Spline_Destroy"), typeof(Binding._FCE_Spline_Destroy));
			Binding.FCE_Spline_Clear = (Binding._FCE_Spline_Clear)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Spline_Clear"), typeof(Binding._FCE_Spline_Clear));
			Binding.FCE_Spline_AddPoint = (Binding._FCE_Spline_AddPoint)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Spline_AddPoint"), typeof(Binding._FCE_Spline_AddPoint));
			Binding.FCE_Spline_InsertPoint = (Binding._FCE_Spline_InsertPoint)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Spline_InsertPoint"), typeof(Binding._FCE_Spline_InsertPoint));
			Binding.FCE_Spline_RemovePoint = (Binding._FCE_Spline_RemovePoint)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Spline_RemovePoint"), typeof(Binding._FCE_Spline_RemovePoint));
			Binding.FCE_Spline_RemoveSimilarPoints = (Binding._FCE_Spline_RemoveSimilarPoints)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Spline_RemoveSimilarPoints"), typeof(Binding._FCE_Spline_RemoveSimilarPoints));
			Binding.FCE_Spline_OptimizePoint = (Binding._FCE_Spline_OptimizePoint)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Spline_OptimizePoint"), typeof(Binding._FCE_Spline_OptimizePoint));
			Binding.FCE_Spline_GetNumPoints = (Binding._FCE_Spline_GetNumPoints)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Spline_GetNumPoints"), typeof(Binding._FCE_Spline_GetNumPoints));
			Binding.FCE_Spline_GetPoint = (Binding._FCE_Spline_GetPoint)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Spline_GetPoint"), typeof(Binding._FCE_Spline_GetPoint));
			Binding.FCE_Spline_SetPoint = (Binding._FCE_Spline_SetPoint)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Spline_SetPoint"), typeof(Binding._FCE_Spline_SetPoint));
			Binding.FCE_Spline_UpdateSpline = (Binding._FCE_Spline_UpdateSpline)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Spline_UpdateSpline"), typeof(Binding._FCE_Spline_UpdateSpline));
			Binding.FCE_Spline_UpdateSplineHeight = (Binding._FCE_Spline_UpdateSplineHeight)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Spline_UpdateSplineHeight"), typeof(Binding._FCE_Spline_UpdateSplineHeight));
			Binding.FCE_Spline_FinalizeSpline = (Binding._FCE_Spline_FinalizeSpline)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Spline_FinalizeSpline"), typeof(Binding._FCE_Spline_FinalizeSpline));
			Binding.FCE_Spline_Draw = (Binding._FCE_Spline_Draw)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Spline_Draw"), typeof(Binding._FCE_Spline_Draw));
			Binding.FCE_Spline_HitTestPoints = (Binding._FCE_Spline_HitTestPoints)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Spline_HitTestPoints"), typeof(Binding._FCE_Spline_HitTestPoints));
			Binding.FCE_Spline_HitTestSegments = (Binding._FCE_Spline_HitTestSegments)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Spline_HitTestSegments"), typeof(Binding._FCE_Spline_HitTestSegments));
			Binding.FCE_SplineRoad_GetEntry = (Binding._FCE_SplineRoad_GetEntry)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineRoad_GetEntry"), typeof(Binding._FCE_SplineRoad_GetEntry));
			Binding.FCE_SplineRoad_SetEntry = (Binding._FCE_SplineRoad_SetEntry)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineRoad_SetEntry"), typeof(Binding._FCE_SplineRoad_SetEntry));
			Binding.FCE_SplineRoad_GetWidth = (Binding._FCE_SplineRoad_GetWidth)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineRoad_GetWidth"), typeof(Binding._FCE_SplineRoad_GetWidth));
			Binding.FCE_SplineRoad_SetWidth = (Binding._FCE_SplineRoad_SetWidth)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineRoad_SetWidth"), typeof(Binding._FCE_SplineRoad_SetWidth));
			Binding.FCE_SplineZone_Reset = (Binding._FCE_SplineZone_Reset)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineZone_Reset"), typeof(Binding._FCE_SplineZone_Reset));
			Binding.FCE_SplineController_Create = (Binding._FCE_SplineController_Create)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineController_Create"), typeof(Binding._FCE_SplineController_Create));
			Binding.FCE_SplineController_Destroy = (Binding._FCE_SplineController_Destroy)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineController_Destroy"), typeof(Binding._FCE_SplineController_Destroy));
			Binding.FCE_SplineController_SetSpline = (Binding._FCE_SplineController_SetSpline)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineController_SetSpline"), typeof(Binding._FCE_SplineController_SetSpline));
			Binding.FCE_SplineController_ClearSelection = (Binding._FCE_SplineController_ClearSelection)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineController_ClearSelection"), typeof(Binding._FCE_SplineController_ClearSelection));
			Binding.FCE_SplineController_IsSelected = (Binding._FCE_SplineController_IsSelected)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineController_IsSelected"), typeof(Binding._FCE_SplineController_IsSelected));
			Binding.FCE_SplineController_SetSelected = (Binding._FCE_SplineController_SetSelected)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineController_SetSelected"), typeof(Binding._FCE_SplineController_SetSelected));
			Binding.FCE_SplineController_SelectFromScreenRect = (Binding._FCE_SplineController_SelectFromScreenRect)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineController_SelectFromScreenRect"), typeof(Binding._FCE_SplineController_SelectFromScreenRect));
			Binding.FCE_SplineController_MoveSelection = (Binding._FCE_SplineController_MoveSelection)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineController_MoveSelection"), typeof(Binding._FCE_SplineController_MoveSelection));
			Binding.FCE_SplineController_DeleteSelection = (Binding._FCE_SplineController_DeleteSelection)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineController_DeleteSelection"), typeof(Binding._FCE_SplineController_DeleteSelection));
			Binding.FCE_SplineManager_CreateRoad = (Binding._FCE_SplineManager_CreateRoad)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineManager_CreateRoad"), typeof(Binding._FCE_SplineManager_CreateRoad));
			Binding.FCE_SplineManager_DestroyRoad = (Binding._FCE_SplineManager_DestroyRoad)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineManager_DestroyRoad"), typeof(Binding._FCE_SplineManager_DestroyRoad));
			Binding.FCE_SplineManager_GetRoadFromId = (Binding._FCE_SplineManager_GetRoadFromId)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineManager_GetRoadFromId"), typeof(Binding._FCE_SplineManager_GetRoadFromId));
			Binding.FCE_SplineManager_GetPlayableZone = (Binding._FCE_SplineManager_GetPlayableZone)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_SplineManager_GetPlayableZone"), typeof(Binding._FCE_SplineManager_GetPlayableZone));
			Binding.FCE_PhysEntityVector_Create = (Binding._FCE_PhysEntityVector_Create)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_PhysEntityVector_Create"), typeof(Binding._FCE_PhysEntityVector_Create));
			Binding.FCE_PhysEntityVector_Destroy = (Binding._FCE_PhysEntityVector_Destroy)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_PhysEntityVector_Destroy"), typeof(Binding._FCE_PhysEntityVector_Destroy));
			Binding.FCE_Wilderness_Desert = (Binding._FCE_Wilderness_Desert)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Wilderness_Desert"), typeof(Binding._FCE_Wilderness_Desert));
			Binding.FCE_Wilderness_Script = (Binding._FCE_Wilderness_Script)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Wilderness_Script"), typeof(Binding._FCE_Wilderness_Script));
			Binding.FCE_Wilderness_ScriptBuffer = (Binding._FCE_Wilderness_ScriptBuffer)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Wilderness_ScriptBuffer"), typeof(Binding._FCE_Wilderness_ScriptBuffer));
			Binding.FCE_Wilderness_ScriptEntry = (Binding._FCE_Wilderness_ScriptEntry)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Wilderness_ScriptEntry"), typeof(Binding._FCE_Wilderness_ScriptEntry));
			Binding.FCE_Script_GetNumFunctions = (Binding._FCE_Script_GetNumFunctions)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Script_GetNumFunctions"), typeof(Binding._FCE_Script_GetNumFunctions));
			Binding.FCE_Script_GetFunction = (Binding._FCE_Script_GetFunction)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Script_GetFunction"), typeof(Binding._FCE_Script_GetFunction));
			Binding.FCE_ScriptFunction_GetName = (Binding._FCE_ScriptFunction_GetName)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ScriptFunction_GetName"), typeof(Binding._FCE_ScriptFunction_GetName));
			Binding.FCE_ScriptFunction_GetPrototype = (Binding._FCE_ScriptFunction_GetPrototype)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ScriptFunction_GetPrototype"), typeof(Binding._FCE_ScriptFunction_GetPrototype));
			Binding.FCE_ScriptFunction_GetDescription = (Binding._FCE_ScriptFunction_GetDescription)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ScriptFunction_GetDescription"), typeof(Binding._FCE_ScriptFunction_GetDescription));
			Binding.FCE_ImageMap_GetSize = (Binding._FCE_ImageMap_GetSize)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ImageMap_GetSize"), typeof(Binding._FCE_ImageMap_GetSize));
			Binding.FCE_ImageMap_ConvertTo24bit = (Binding._FCE_ImageMap_ConvertTo24bit)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ImageMap_ConvertTo24bit"), typeof(Binding._FCE_ImageMap_ConvertTo24bit));
			Binding.FCE_ImageMap_Clone = (Binding._FCE_ImageMap_Clone)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ImageMap_Clone"), typeof(Binding._FCE_ImageMap_Clone));
			Binding.FCE_ImageMap_Destroy = (Binding._FCE_ImageMap_Destroy)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_ImageMap_Destroy"), typeof(Binding._FCE_ImageMap_Destroy));
			Binding.FCE_BudgetManager_GetMemoryUsage = (Binding._FCE_BudgetManager_GetMemoryUsage)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_BudgetManager_GetMemoryUsage"), typeof(Binding._FCE_BudgetManager_GetMemoryUsage));
			Binding.FCE_BudgetManager_GetObjectUsage = (Binding._FCE_BudgetManager_GetObjectUsage)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_BudgetManager_GetObjectUsage"), typeof(Binding._FCE_BudgetManager_GetObjectUsage));
			Binding.FCE_Navmesh_SetDisplay = (Binding._FCE_Navmesh_SetDisplay)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Navmesh_SetDisplay"), typeof(Binding._FCE_Navmesh_SetDisplay));
			Binding.FCE_Navmesh_RegenerateTileAt = (Binding._FCE_Navmesh_RegenerateTileAt)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Navmesh_RegenerateTileAt"), typeof(Binding._FCE_Navmesh_RegenerateTileAt));
			Binding.FCE_Navmesh_SetAPDisplay = (Binding._FCE_Navmesh_SetAPDisplay)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Navmesh_SetAPDisplay"), typeof(Binding._FCE_Navmesh_SetAPDisplay));
			Binding.FCE_Navmesh_GetDebugAlpha = (Binding._FCE_Navmesh_GetDebugAlpha)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Navmesh_GetDebugAlpha"), typeof(Binding._FCE_Navmesh_GetDebugAlpha));
			Binding.FCE_Navmesh_SetDebugAlpha = (Binding._FCE_Navmesh_SetDebugAlpha)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Navmesh_SetDebugAlpha"), typeof(Binding._FCE_Navmesh_SetDebugAlpha));
			Binding.FCE_Navmesh_GetPendingTilesCount = (Binding._FCE_Navmesh_GetPendingTilesCount)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Navmesh_GetPendingTilesCount"), typeof(Binding._FCE_Navmesh_GetPendingTilesCount));
			Binding.FCE_Dash_ValidateIngame = (Binding._FCE_Dash_ValidateIngame)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Dash_ValidateIngame"), typeof(Binding._FCE_Dash_ValidateIngame));
			Binding.FCE_Dash_SetDebugMode = (Binding._FCE_Dash_SetDebugMode)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Dash_SetDebugMode"), typeof(Binding._FCE_Dash_SetDebugMode));
			Binding.FCE_Dash_GetNodeAssaultTime = (Binding._FCE_Dash_GetNodeAssaultTime)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Dash_GetNodeAssaultTime"), typeof(Binding._FCE_Dash_GetNodeAssaultTime));
			Binding.FCE_Dash_SetNodeAssaultTime = (Binding._FCE_Dash_SetNodeAssaultTime)Marshal.GetDelegateForFunctionPointer(Binding.GetProcAddress(Binding._gameDllModule, "FCE_Dash_SetNodeAssaultTime"), typeof(Binding._FCE_Dash_SetNodeAssaultTime));
		}
		public static void UnloadDll()
		{
			if (Binding._gameDllModule == IntPtr.Zero)
			{
				return;
			}
			Binding.FCE_Hack_Init = null;
			Binding.FCE_Engine_Reset = null;
			Binding.FCE_Engine_GetPersonalPath = null;
			Binding.FCE_Engine_GetGenericDataPath = null;
			Binding.FCE_Engine_UpdateViewport = null;
			Binding.FCE_Engine_AutoAcquireInput = null;
			Binding.FCE_Engine_IsConsoleOpen = null;
			Binding.FCE_Engine_GetTimeOfDay = null;
			Binding.FCE_Engine_SetTimeOfDay = null;
			Binding.FCE_Engine_GetCloudTypeCount = null;
			Binding.FCE_Engine_GetCloudType = null;
			Binding.FCE_Engine_SetCloudType = null;
			Binding.FCE_Engine_GetStormFactor = null;
			Binding.FCE_Engine_SetStormFactor = null;
			Binding.FCE_Core_GetAxisFromAngles = null;
			Binding.FCE_Core_GetAnglesFromAxis = null;
			Binding.FCE_Core_GetAnglesFromDir = null;
			Binding.FCE_Core_Points_Create = null;
			Binding.FCE_Core_Points_Destroy = null;
			Binding.FCE_Editor_Create = null;
			Binding.FCE_Editor_Destroy = null;
			Binding.FCE_Editor_IsInitialized = null;
			Binding.FCE_Editor_Update_Callback = null;
			Binding.FCE_Editor_Event_Callback = null;
			Binding.FCE_Editor_LoadCompleted_Callback = null;
			Binding.FCE_Editor_SaveCompleted_Callback = null;
			Binding.FCE_Editor_EnableUI_Callback = null;
			Binding.FCE_Editor_IsLoadPending = null;
			Binding.FCE_Editor_GetFrameTime = null;
			Binding.FCE_Editor_GetScreenPointFromWorldPos = null;
			Binding.FCE_Editor_GetWorldRayFromScreenPoint = null;
			Binding.FCE_Editor_RayCastTerrain = null;
			Binding.FCE_Editor_RayCastPhysics = null;
			Binding.FCE_Editor_RayCastPhysics2 = null;
			Binding.FCE_Editor_ValidateIngame = null;
			Binding.FCE_Editor_EnterIngame = null;
			Binding.FCE_Editor_ExitIngame = null;
			Binding.FCE_Editor_IsIngame = null;
			Binding.FCE_Document_Reset = null;
			Binding.FCE_Document_LoadPhysical = null;
			Binding.FCE_Document_Load = null;
			Binding.FCE_Document_Save = null;
			Binding.FCE_Document_Validate = null;
			Binding.FCE_Document_GetMapID = null;
			Binding.FCE_Document_SetMapID = null;
			Binding.FCE_Document_GetVersionID = null;
			Binding.FCE_Document_GetMapDefaultName = null;
			Binding.FCE_Document_GetMapName = null;
			Binding.FCE_Document_SetMapName = null;
			Binding.FCE_Document_GetCreatorName = null;
			Binding.FCE_Document_SetCreatorName = null;
			Binding.FCE_Document_GetAuthorName = null;
			Binding.FCE_Document_SetAuthorName = null;
			Binding.FCE_Document_GetBattlefieldSize = null;
			Binding.FCE_Document_SetBattlefieldSize = null;
			Binding.FCE_Document_GetPlayerSize = null;
			Binding.FCE_Document_SetPlayerSize = null;
			Binding.FCE_Document_IsSnapshotSet = null;
			Binding.FCE_Document_ClearSnapshot = null;
			Binding.FCE_Document_GetSnapshotPos = null;
			Binding.FCE_Document_SetSnapshotPos = null;
			Binding.FCE_Document_GetSnapshotAngle = null;
			Binding.FCE_Document_SetSnapshotAngle = null;
			Binding.FCE_Document_TakeSnapshot = null;
			Binding.FCE_Document_IsNavmeshEnabled = null;
			Binding.FCE_Document_SetNavmeshEnabled = null;
			Binding.FCE_Document_FinalizeMap = null;
			Binding.FCE_Document_Export = null;
			Binding.FCE_Document_Dump = null;
			Binding.FCE_Document_ExtractBigFile = null;
			Binding.FCE_EditorSettings_IsCollectionVisible = null;
			Binding.FCE_EditorSettings_ShowCollections = null;
			Binding.FCE_EditorSettings_IsFogVisible = null;
			Binding.FCE_EditorSettings_ShowFog = null;
			Binding.FCE_EditorSettings_IsExposureVisible = null;
			Binding.FCE_EditorSettings_ShowExposure = null;
			Binding.FCE_EditorSettings_IsShadowVisible = null;
			Binding.FCE_EditorSettings_ShowShadow = null;
			Binding.FCE_EditorSettings_IsWaterVisible = null;
			Binding.FCE_EditorSettings_ShowWater = null;
			Binding.FCE_EditorSettings_IsIconsVisible = null;
			Binding.FCE_EditorSettings_ShowIcons = null;
			Binding.FCE_EditorSettings_IsSoundEnabled = null;
			Binding.FCE_EditorSettings_SetSoundEnabled = null;
			Binding.FCE_EditorSettings_IsGridVisible = null;
			Binding.FCE_EditorSettings_ShowGrid = null;
			Binding.FCE_EditorSettings_GetGridResolution = null;
			Binding.FCE_EditorSettings_SetGridResolution = null;
			Binding.FCE_EditorSettings_IsNavmeshVisible = null;
			Binding.FCE_EditorSettings_ShowNavmesh = null;
			Binding.FCE_EditorSettings_HideNavmesh = null;
			Binding.FCE_EditorSettings_GetNavmeshLayer = null;
			Binding.FCE_EditorSettings_IsCoversVisible = null;
			Binding.FCE_EditorSettings_ShowCovers = null;
			Binding.FCE_EditorSettings_IsInvincible = null;
			Binding.FCE_EditorSettings_SetInvincible = null;
			Binding.FCE_EditorSettings_IsInvisible = null;
			Binding.FCE_EditorSettings_SetInvisible = null;
			Binding.FCE_EditorSettings_IsSnappingObjectsToTerrain = null;
			Binding.FCE_EditorSettings_SetSnapObjectsToTerrain = null;
			Binding.FCE_EditorSettings_IsAutoSnappingObjects = null;
			Binding.FCE_EditorSettings_SetAutoSnappingObjects = null;
			Binding.FCE_EditorSettings_IsAutoSnappingObjectsRotation = null;
			Binding.FCE_EditorSettings_SetAutoSnappingObjectsRotation = null;
			Binding.FCE_EditorSettings_IsAutoSnappingObjectsTerrain = null;
			Binding.FCE_EditorSettings_SetAutoSnappingObjectsTerrain = null;
			Binding.FCE_EditorSettings_IsCameraClippedTerrain = null;
			Binding.FCE_EditorSettings_SetCameraClipTerrain = null;
			Binding.FCE_EditorSettings_IsCameraCollision = null;
			Binding.FCE_EditorSettings_SetCameraCollision = null;
			Binding.FCE_EditorSettings_GetEngineQuality = null;
			Binding.FCE_EditorSettings_SetEngineQuality = null;
			Binding.FCE_EditorSettings_IsKillDistanceOverride = null;
			Binding.FCE_EditorSettings_SetKillDistanceOverride = null;
			Binding.FCE_Draw_BeginGroup = null;
			Binding.FCE_Draw_EndGroup = null;
			Binding.FCE_Draw_ScreenCircleOutlined = null;
			Binding.FCE_Draw_ScreenRectangleOutlined = null;
			Binding.FCE_Draw_Quad = null;
			Binding.FCE_Draw_Square = null;
			Binding.FCE_Draw_Terrain_Circle = null;
			Binding.FCE_Draw_Terrain_Square = null;
			Binding.FCE_Draw_Arrow = null;
			Binding.FCE_Draw_Dot = null;
			Binding.FCE_Draw_SegmentedLineSegment = null;
			Binding.FCE_Draw_WireBoxFromBottomZ = null;
			Binding.FCE_Draw_WireRegionFromTerrain = null;
			Binding.FCE_Camera_Input_Forward = null;
			Binding.FCE_Camera_Input_Lateral = null;
			Binding.FCE_Camera_GetPos = null;
			Binding.FCE_Camera_SetPos = null;
			Binding.FCE_Camera_GetAngles = null;
			Binding.FCE_Camera_SetAngles = null;
			Binding.FCE_Camera_Rotate = null;
			Binding.FCE_Camera_GetFrontVector = null;
			Binding.FCE_Camera_GetRightVector = null;
			Binding.FCE_Camera_GetUpVector = null;
			Binding.FCE_Camera_GetSpeed = null;
			Binding.FCE_Camera_SetSpeed = null;
			Binding.FCE_Camera_SetSpeedFactor = null;
			Binding.FCE_Camera_GetFOV = null;
			Binding.FCE_Brush_Create = null;
			Binding.FCE_Brush_Destroy = null;
			Binding.FCE_Terrain_Bump = null;
			Binding.FCE_Terrain_Bump_End = null;
			Binding.FCE_Terrain_RaiseLower = null;
			Binding.FCE_Terrain_RaiseLower_End = null;
			Binding.FCE_Terrain_SetHeight = null;
			Binding.FCE_Terrain_SetHeight_End = null;
			Binding.FCE_Terrain_GetAverageHeight = null;
			Binding.FCE_Terrain_Average = null;
			Binding.FCE_Terrain_Average_End = null;
			Binding.FCE_Terrain_Grab_Begin = null;
			Binding.FCE_Terrain_Grab = null;
			Binding.FCE_Terrain_Grab_End = null;
			Binding.FCE_Terrain_Smooth = null;
			Binding.FCE_Terrain_Smooth_End = null;
			Binding.FCE_Terrain_Ramp = null;
			Binding.FCE_Terrain_Terrace = null;
			Binding.FCE_Terrain_Terrace_End = null;
			Binding.FCE_Terrain_Noise_Begin = null;
			Binding.FCE_Terrain_Noise = null;
			Binding.FCE_Terrain_Noise_End = null;
			Binding.FCE_Terrain_Erosion = null;
			Binding.FCE_Terrain_Erosion_End = null;
			Binding.FCE_Terrain_Hole = null;
			Binding.FCE_Terrain_Hole_End = null;
			Binding.FCE_Inventory_Entry_IsDirectory = null;
			Binding.FCE_Inventory_Entry_IsObsolete = null;
			Binding.FCE_Inventory_Entry_IsDeleted = null;
			Binding.FCE_Inventory_Entry_SetDeleted = null;
			Binding.FCE_Inventory_Entry_ClearChildren = null;
			Binding.FCE_Inventory_Entry_AddChild = null;
			Binding.FCE_Inventory_Entry_SetChildIndex = null;
			Binding.FCE_Inventory_Entry_OpenThumbnailData = null;
			Binding.FCE_Inventory_Entry_CloseThumbnailData = null;
			Binding.FCE_Inventory_Object_GetRoot = null;
			Binding.FCE_Inventory_Object_CreatePrefabObject = null;
			Binding.FCE_Inventory_Object_CreateDirectory = null;
			Binding.FCE_Inventory_Object_CreateFilterDirectory = null;
			Binding.FCE_Inventory_Object_DestroyFilterDirectory = null;
			Binding.FCE_Inventory_Object_SearchInventoryEntry = null;
			Binding.FCE_Inventory_Object_GetParent = null;
			Binding.FCE_Inventory_Object_SetParent = null;
			Binding.FCE_Inventory_Object_IsDirectory = null;
			Binding.FCE_Inventory_Object_GetChildCount = null;
			Binding.FCE_Inventory_Object_GetChild = null;
			Binding.FCE_Inventory_Object_GetId = null;
			Binding.FCE_Inventory_Object_GetIdString = null;
			Binding.FCE_Inventory_Object_SetIdString = null;
			Binding.FCE_Inventory_Object_GetDisplay = null;
			Binding.FCE_Inventory_Object_SetDisplay = null;
			Binding.FCE_Inventory_Object_GetTags = null;
			Binding.FCE_Inventory_Object_SetTags = null;
			Binding.FCE_Inventory_Object_GetSourceType = null;
			Binding.FCE_Inventory_Object_GetBMin = null;
			Binding.FCE_Inventory_Object_GetBMax = null;
			Binding.FCE_Inventory_Object_GetSize = null;
			Binding.FCE_Inventory_Object_IsAI = null;
			Binding.FCE_Inventory_Object_IsAutoOrientation = null;
			Binding.FCE_Inventory_Object_GetZOffset = null;
			Binding.FCE_Inventory_Object_SetZOffset = null;
			Binding.FCE_Inventory_Object_SaveChanges = null;
			Binding.FCE_Inventory_Object_ClearPivots = null;
			Binding.FCE_Inventory_Object_AddPivot = null;
			Binding.FCE_Inventory_Object_SetPivot = null;
			Binding.FCE_Inventory_Object_SetPivots = null;
			Binding.FCE_Inventory_Object_IsAutoPivot = null;
			Binding.FCE_Inventory_Object_SetAutoPivot = null;
			Binding.FCE_Inventory_Object_GetPivotCount = null;
			Binding.FCE_Inventory_Collection_GetRoot = null;
			Binding.FCE_Inventory_Collection_GetParent = null;
			Binding.FCE_Inventory_Collection_GetChildCount = null;
			Binding.FCE_Inventory_Collection_GetChild = null;
			Binding.FCE_Inventory_Collection_GetDisplay = null;
			Binding.FCE_Inventory_Collection_GetBurnProfile = null;
			Binding.FCE_Inventory_Texture_GetRoot = null;
			Binding.FCE_Inventory_Texture_GetParent = null;
			Binding.FCE_Inventory_Texture_GetChildCount = null;
			Binding.FCE_Inventory_Texture_GetChild = null;
			Binding.FCE_Inventory_Texture_GetDisplay = null;
			Binding.FCE_Inventory_Water_GetRoot = null;
			Binding.FCE_Inventory_Water_GetParent = null;
			Binding.FCE_Inventory_Water_GetChildCount = null;
			Binding.FCE_Inventory_Water_GetChild = null;
			Binding.FCE_Inventory_Water_GetDisplay = null;
			Binding.FCE_Inventory_Water_GetFromId = null;
			Binding.FCE_Inventory_Spline_GetRoot = null;
			Binding.FCE_Inventory_Spline_GetParent = null;
			Binding.FCE_Inventory_Spline_GetChildCount = null;
			Binding.FCE_Inventory_Spline_GetChild = null;
			Binding.FCE_Inventory_Spline_GetDisplay = null;
			Binding.FCE_Inventory_Spline_GetDefaultWidth = null;
			Binding.FCE_Inventory_Wilderness_GetRoot = null;
			Binding.FCE_Inventory_Wilderness_GetParent = null;
			Binding.FCE_Inventory_Wilderness_GetChildCount = null;
			Binding.FCE_Inventory_Wilderness_GetChild = null;
			Binding.FCE_Inventory_Wilderness_GetDisplay = null;
			Binding.FCE_Object_Create_FromEntry = null;
			Binding.FCE_Object_Destroy = null;
			Binding.FCE_Object_AddRef = null;
			Binding.FCE_Object_Release = null;
			Binding.FCE_Object_Clone = null;
			Binding.FCE_Object_IsLoaded = null;
			Binding.FCE_Object_GetEntry = null;
			Binding.FCE_Object_GetPos = null;
			Binding.FCE_Object_SetPos = null;
			Binding.FCE_Object_GetAngles = null;
			Binding.FCE_Object_SetAngles = null;
			Binding.FCE_Object_GetBounds = null;
			Binding.FCE_Object_IsVisible = null;
			Binding.FCE_Object_SetVisible = null;
			Binding.FCE_Object_SetHighlight = null;
			Binding.FCE_Object_SetFreeze = null;
			Binding.FCE_Object_DropToGround = null;
			Binding.FCE_Object_ComputeAutoOrientation = null;
			Binding.FCE_Object_GetPivot = null;
			Binding.FCE_Object_GetClosestPivot = null;
			Binding.FCE_Object_SnapToClosestObject = null;
			Binding.FCE_Object_GetPhysEntities = null;
			Binding.FCE_ObjectManager_GetObjectFromScreenPoint = null;
			Binding.FCE_ObjectManager_GetObjectsFromScreenRect = null;
			Binding.FCE_ObjectManager_GetObjectsFromMagicWand = null;
			Binding.FCE_ObjectManager_SetViewportPickingPos = null;
			Binding.FCE_ObjectManager_UnfreezeObjects = null;
			Binding.FCE_ObjectManager_GetObjectCount = null;
			Binding.FCE_ObjectManager_GetObject = null;
			Binding.FCE_ObjectManager_OnObjectAddedFromTool = null;
			Binding.FCE_ObjectSelection_Create = null;
			Binding.FCE_ObjectSelection_Destroy = null;
			Binding.FCE_ObjectSelection_Clear = null;
			Binding.FCE_ObjectSelection_Add = null;
			Binding.FCE_ObjectSelection_AddSelection = null;
			Binding.FCE_ObjectSelection_ToggleObject = null;
			Binding.FCE_ObjectSelection_ToggleSelection = null;
			Binding.FCE_ObjectSelection_RemoveObject = null;
			Binding.FCE_ObjectSelection_RemoveSelection = null;
			Binding.FCE_ObjectSelection_GetCount = null;
			Binding.FCE_ObjectSelection_Get = null;
			Binding.FCE_ObjectSelection_GetValidObjects = null;
			Binding.FCE_ObjectSelection_RemoveInvalidObjects = null;
			Binding.FCE_ObjectSelection_Clone = null;
			Binding.FCE_ObjectSelection_Delete = null;
			Binding.FCE_ObjectSelection_GetCenter = null;
			Binding.FCE_ObjectSelection_SetCenter = null;
			Binding.FCE_ObjectSelection_GetComputeCenter = null;
			Binding.FCE_ObjectSelection_ComputeCenter = null;
			Binding.FCE_ObjectSelection_GetWorldBounds = null;
			Binding.FCE_ObjectSelection_MoveTo = null;
			Binding.FCE_ObjectSelection_Rotate = null;
			Binding.FCE_ObjectSelection_Rotate3 = null;
			Binding.FCE_ObjectSelection_RotateCenter = null;
			Binding.FCE_ObjectSelection_RotateLocal3 = null;
			Binding.FCE_ObjectSelection_RotateGimbal = null;
			Binding.FCE_ObjectSelection_DropToGround = null;
			Binding.FCE_ObjectSelection_SnapToPivot = null;
			Binding.FCE_ObjectSelection_SnapToClosestObjects = null;
			Binding.FCE_ObjectSelection_GetPhysEntities = null;
			Binding.FCE_ObjectSelection_ClearState = null;
			Binding.FCE_ObjectSelection_LoadState = null;
			Binding.FCE_ObjectSelection_SaveState = null;
			Binding.FCE_ObjectSelection_LoadFromXml = null;
			Binding.FCE_ObjectSelection_SaveToXml = null;
			Binding.FCE_ObjectViewer_SetActive = null;
			Binding.FCE_ObjectViewer_SetObject = null;
			Binding.FCE_ObjectLegoBox_SetActive = null;
			Binding.FCE_ObjectLegoBox_AddEntry = null;
			Binding.FCE_ObjectLegoBox_ClearEntries = null;
			Binding.FCE_ObjectLegoBox_CreateLegoBox = null;
			Binding.FCE_ObjectLegoBox_GetEntryFromScreenPoint = null;
			Binding.FCE_ObjectRenderer_Clear = null;
			Binding.FCE_ObjectRenderer_SetActive = null;
			Binding.FCE_ObjectRenderer_RenderObject = null;
			Binding.FCE_ObjectRenderer_IsSnapshotReady = null;
			Binding.FCE_ObjectRenderer_GetSnapshot = null;
			Binding.FCE_ObjectRenderer_GetSnapshotEntry = null;
			Binding.FCE_ObjectRenderer_ClearSnapshot = null;
			Binding.FCE_ObjectRenderer_WritePNG = null;
			Binding.FCE_ObjectRenderer_GenerateThumbnails = null;
			Binding.FCE_CollectionRenderer_GenerateThumbnails = null;
			Binding.FCE_Gizmo_Create = null;
			Binding.FCE_Gizmo_Destroy = null;
			Binding.FCE_Gizmo_GetPos = null;
			Binding.FCE_Gizmo_SetPos = null;
			Binding.FCE_Gizmo_GetAxis = null;
			Binding.FCE_Gizmo_SetAxis = null;
			Binding.FCE_Gizmo_GetActive = null;
			Binding.FCE_Gizmo_SetActive = null;
			Binding.FCE_Gizmo_Redraw = null;
			Binding.FCE_Gizmo_Hide = null;
			Binding.FCE_Gizmo_IsRotationMode = null;
			Binding.FCE_Gizmo_SetRotationMode = null;
			Binding.FCE_Gizmo_HitTest = null;
			Binding.FCE_CollectionManager_GetCollectionEntryFromId = null;
			Binding.FCE_CollectionManager_AssignCollectionId = null;
			Binding.FCE_CollectionManager_WriteMaskCircle = null;
			Binding.FCE_CollectionManager_WriteMaskSquare = null;
			Binding.FCE_CollectionManager_ClearMaskId = null;
			Binding.FCE_CollectionManager_UpdateCollections = null;
			Binding.FCE_Collection_Paint = null;
			Binding.FCE_Collection_Paint_End = null;
			Binding.FCE_Texture_Paint = null;
			Binding.FCE_Texture_Paint_End = null;
			Binding.FCE_Texture_PaintConstraints_Begin = null;
			Binding.FCE_Texture_PaintConstraints = null;
			Binding.FCE_Texture_PaintConstraints_End = null;
			Binding.FCE_TerrainManager_GetHeightAt = null;
			Binding.FCE_TerrainManager_GetHeightAtWithWater = null;
			Binding.FCE_TerrainManager_GetTextureEntryFromId = null;
			Binding.FCE_TerrainManager_AssignTextureId = null;
			Binding.FCE_TerrainManager_ClearTextureId = null;
			Binding.FCE_TerrainManager_GetGlobalWaterLevel = null;
			Binding.FCE_TerrainManager_SetGlobalWaterLevel = null;
			Binding.FCE_TerrainManager_SetWaterLevelSector = null;
			Binding.FCE_TerrainManager_UpdateWaterLevel = null;
			Binding.FCE_UndoManager_GetUndoCount = null;
			Binding.FCE_UndoManager_GetRedoCount = null;
			Binding.FCE_UndoManager_Undo = null;
			Binding.FCE_UndoManager_Redo = null;
			Binding.FCE_UndoManager_RecordUndo = null;
			Binding.FCE_UndoManager_CommitUndo = null;
			Binding.FCE_Validation_GameMode = null;
			Binding.FCE_Validation_Game = null;
			Binding.FCE_ValidationReport_Destroy = null;
			Binding.FCE_ValidationReport_GetCount = null;
			Binding.FCE_ValidationReport_GetRecord = null;
			Binding.FCE_ValidationRecord_GetSeverity = null;
			Binding.FCE_ValidationRecord_GetFlags = null;
			Binding.FCE_ValidationRecord_GetMessage = null;
			Binding.FCE_ValidationRecord_GetObject = null;
			Binding.FCE_Snapshot_Create = null;
			Binding.FCE_Snapshot_Destroy = null;
			Binding.FCE_Snapshot_GetData = null;
			Binding.FCE_Spline_Create = null;
			Binding.FCE_Spline_Destroy = null;
			Binding.FCE_Spline_Clear = null;
			Binding.FCE_Spline_AddPoint = null;
			Binding.FCE_Spline_InsertPoint = null;
			Binding.FCE_Spline_RemovePoint = null;
			Binding.FCE_Spline_RemoveSimilarPoints = null;
			Binding.FCE_Spline_OptimizePoint = null;
			Binding.FCE_Spline_GetNumPoints = null;
			Binding.FCE_Spline_GetPoint = null;
			Binding.FCE_Spline_SetPoint = null;
			Binding.FCE_Spline_UpdateSpline = null;
			Binding.FCE_Spline_UpdateSplineHeight = null;
			Binding.FCE_Spline_FinalizeSpline = null;
			Binding.FCE_Spline_Draw = null;
			Binding.FCE_Spline_HitTestPoints = null;
			Binding.FCE_Spline_HitTestSegments = null;
			Binding.FCE_SplineRoad_GetEntry = null;
			Binding.FCE_SplineRoad_SetEntry = null;
			Binding.FCE_SplineRoad_GetWidth = null;
			Binding.FCE_SplineRoad_SetWidth = null;
			Binding.FCE_SplineZone_Reset = null;
			Binding.FCE_SplineController_Create = null;
			Binding.FCE_SplineController_Destroy = null;
			Binding.FCE_SplineController_SetSpline = null;
			Binding.FCE_SplineController_ClearSelection = null;
			Binding.FCE_SplineController_IsSelected = null;
			Binding.FCE_SplineController_SetSelected = null;
			Binding.FCE_SplineController_SelectFromScreenRect = null;
			Binding.FCE_SplineController_MoveSelection = null;
			Binding.FCE_SplineController_DeleteSelection = null;
			Binding.FCE_SplineManager_CreateRoad = null;
			Binding.FCE_SplineManager_DestroyRoad = null;
			Binding.FCE_SplineManager_GetRoadFromId = null;
			Binding.FCE_SplineManager_GetPlayableZone = null;
			Binding.FCE_PhysEntityVector_Create = null;
			Binding.FCE_PhysEntityVector_Destroy = null;
			Binding.FCE_Wilderness_Desert = null;
			Binding.FCE_Wilderness_Script = null;
			Binding.FCE_Wilderness_ScriptBuffer = null;
			Binding.FCE_Wilderness_ScriptEntry = null;
			Binding.FCE_Script_GetNumFunctions = null;
			Binding.FCE_Script_GetFunction = null;
			Binding.FCE_ScriptFunction_GetName = null;
			Binding.FCE_ScriptFunction_GetPrototype = null;
			Binding.FCE_ScriptFunction_GetDescription = null;
			Binding.FCE_ImageMap_GetSize = null;
			Binding.FCE_ImageMap_ConvertTo24bit = null;
			Binding.FCE_ImageMap_Clone = null;
			Binding.FCE_ImageMap_Destroy = null;
			Binding.FCE_BudgetManager_GetMemoryUsage = null;
			Binding.FCE_BudgetManager_GetObjectUsage = null;
			Binding.FCE_Navmesh_SetDisplay = null;
			Binding.FCE_Navmesh_RegenerateTileAt = null;
			Binding.FCE_Navmesh_SetAPDisplay = null;
			Binding.FCE_Navmesh_GetDebugAlpha = null;
			Binding.FCE_Navmesh_SetDebugAlpha = null;
			Binding.FCE_Navmesh_GetPendingTilesCount = null;
			Binding.FCE_Dash_ValidateIngame = null;
			Binding.FCE_Dash_SetDebugMode = null;
			Binding.FCE_Dash_GetNodeAssaultTime = null;
			Binding.FCE_Dash_SetNodeAssaultTime = null;
			Binding.FreeLibrary(Binding._gameDllModule);
			Binding._gameDllModule = IntPtr.Zero;
		}
		[DllImport("kernel32.dll")]
		private static extern IntPtr LoadLibrary(string dllname);
		[DllImport("kernel32.dll")]
		private static extern void FreeLibrary(IntPtr hModule);
		[DllImport("kernel32.dll")]
		private static extern IntPtr GetProcAddress(IntPtr hModule, string procname);
	}
}
